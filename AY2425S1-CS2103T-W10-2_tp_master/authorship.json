[{"path":".github/ISSUE_TEMPLATE/bug_report.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jayjay19630"},"content":"name: Bug Report","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"about: Report an issue to help us improve the project","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"title: \"\"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":"labels: \"type.Bug\"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":"assignees: \"\"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":"**Describe the bug**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"Provide a clear and concise description of the bug.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jayjay19630"},"content":"**Steps to Reproduce**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jayjay19630"},"content":"List the steps to reproduce the issue:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jayjay19630"},"content":"1. Go to \u0027...\u0027","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jayjay19630"},"content":"2. Click on \u0027...\u0027","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jayjay19630"},"content":"3. Scroll to \u0027...\u0027","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jayjay19630"},"content":"4. See the error","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jayjay19630"},"content":"**Expected behavior**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jayjay19630"},"content":"Describe what you expected to happen instead.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jayjay19630"},"content":"**Screenshots**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jayjay19630"},"content":"If applicable, include screenshots to illustrate the problem.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jayjay19630"},"content":"**Additional context**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jayjay19630"},"content":"Provide any other relevant context here.","lastModifiedDate":"2024-10-03","isFullCredit":false}],"authorContributionMap":{"jayjay19630":27}},{"path":".github/ISSUE_TEMPLATE/feature_request.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jayjay19630"},"content":"name: Feature Request","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"about: Suggest a new feature or improvement","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"title: \"\"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":"labels: \"type.Enhancement\"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":"assignees: \"\"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":"**Describe the solution you\u0027d like**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"Explain the change or new feature you want to see.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jayjay19630"},"content":"**Additional context**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jayjay19630"},"content":"Include any additional details or screenshots to support your suggestion.","lastModifiedDate":"2024-10-03","isFullCredit":false}],"authorContributionMap":{"jayjay19630":13}},{"path":".github/ISSUE_TEMPLATE/user_story.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jayjay19630"},"content":"name: User Story","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"about: Describe a feature or functionality from the user\u0027s perspective","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"title: \"\"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":"labels: [\"type.Story\", \"type.Epic\"]","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":"assignees: \"\"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":"**...so that** [benefit].","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jayjay19630"},"content":"**Additional context**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jayjay19630"},"content":"- Include any other relevant information or screenshots.","lastModifiedDate":"2024-10-03","isFullCredit":false}],"authorContributionMap":{"jayjay19630":13}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rxchell"},"content":"[![CI Status](https://github.com/AY2425S1-CS2103T-W10-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2425S1-CS2103T-W08-3/tp/actions)","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![Codecov](https://codecov.io/gh/AY2425S1-CS2103T-W10-2/tp/graph/badge.svg?token\u003d134QRO3UI3)](https://codecov.io/gh/AY2425S1-CS2103T-W10-2/tp)","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rxchell"},"content":"# DocTrack","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rxchell"},"content":"**DocTrack** is **a project done by Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rxchell"},"content":"## What is DocTrack?","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rxchell"},"content":"* DocTrack helps general practitioners (GPs) at small clinics quickly access patient contact details, appointments, and treatment records. ","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rxchell"},"content":"* It is optimized for users who prefer a command-line interface (CLI), enabling faster completion of frequent tasks through typed commands.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rxchell"},"content":"## More about it","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rxchell"},"content":"  * For user and developer documentation**, head over to **[DocTrack Documentation](https://ay2425s1-cs2103t-w10-2.github.io/tp/)**.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rxchell"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2024-09-30","isFullCredit":false}],"authorContributionMap":{"rxchell":12,"-":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zaidansani"},"content":"You can reach us at our individual emails below!","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Vangmay"},"content":"### Vangmay Sachan","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Vangmay"},"content":"\u003cimg src\u003d\"images/vangmay.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jayjay19630"},"content":"[[github](https://github.com/vangmay)] ","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jayjay19630"},"content":"[[portfolio](team/vangmay.md)]","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jayjay19630"},"content":"* Roles: Developer, Quality Assurance","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Vangmay"},"content":"* Responsibilities: Logic","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zaidansani"},"content":"### Muhammad ZAIDAN bin Sani","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zaidansani"},"content":"\u003cimg src\u003d\"images/zaidansani.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zaidansani"},"content":"[[github](https://github.com/zaidansani)]","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zaidansani"},"content":"[[email](mailto:zaidan@u.nus.edu)]","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zaidansani"},"content":"[[portfolio](team/zaidansani.md)]","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jayjay19630"},"content":"* Roles: Team Lead, Developer, Integration","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jayjay19630"},"content":"* Responsibilities: Model","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"choiwab"},"content":"### Jae Choi","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"choiwab"},"content":"\u003cimg src\u003d\"images/choiwab.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jayjay19630"},"content":"[[github](http://github.com/choiwab)] ","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jayjay19630"},"content":"[[portfolio](team/choiwab.md)]","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jayjay19630"},"content":"* Roles: Developer, Code quality","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jayjay19630"},"content":"* Responsibilities: Storage","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rxchell"},"content":"### Rachel Tai","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rxchell"},"content":"\u003cimg src\u003d\"images/rxchell.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rxchell"},"content":"[[github](https://github.com/rxchell)]","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rxchell"},"content":"[[portfolio](team/rxchell.md)]","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jayjay19630"},"content":"* Roles: Developer, Documentation","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rxchell"},"content":"* Responsibilities: Commons","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jayjay19630"},"content":"### Jo An","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jayjay19630"},"content":"\u003cimg src\u003d\"images/jayjay19630.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jayjay19630"},"content":"[[github](https://github.com/jayjay19630)]","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jayjay19630"},"content":"[[email](mailto:jo.an@u.nus.edu)]","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jayjay19630"},"content":"[[portfolio](team/jayjay19630.md)]","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jayjay19630"},"content":"* Roles: Developer, Deliverables and Deadlines, Scheduling and Tracking","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Vangmay":3,"jayjay19630":16,"rxchell":5,"choiwab":2,"zaidansani":6,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# AB-3 Developer Guide","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"rxchell"},"content":"* General Practitioners (GPs) at small clinics","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"rxchell"},"content":"**Value proposition**: Time spent looking through paper medical documents should be spent in other life-saving activities. Our product resolves this issue by creating fast access to patient contact details as well as their relevant appointment/treatment details, allowing GPs to contact and monitor their patients easily.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"| Priority | As a …​              | I want to …​                                       | So that I can…​                                                      |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"rxchell"},"content":"|----------|----------------------|----------------------------------------------------|----------------------------------------------------------------------|","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"rxchell"},"content":"| `* * *`  | doctor               | add appointments                                   | find them in the future for reference                                |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"rxchell"},"content":"| `* * *`  | doctor               | schedule a new patient appointment                 | ensure that the patient is properly booked for consultation          |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"rxchell"},"content":"| `* * *`  | doctor               | remove an appointment that is no longer needed     | free up time slots for other patients and avoid scheduling conflicts |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"rxchell"},"content":"| `* * *`  | doctor               | view all upcoming appointments for better planning | organize my day effectively and ensure no appointments are missed    |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"rxchell"},"content":"| `* * *`  | administrative staff | manage patient contact information                 | easily communicate with patients                                     |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"rxchell"},"content":"| `* * *`  | administrative staff | update patient details                             | maintain accurate records                                            |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"rxchell"},"content":"| `* * *`  | administrative staff | get details on a specific patient\u0027s appointments   | keep track of the patient                                            |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"rxchell"},"content":"| `* * *`  | administrative staff | store all patients information                     | retrieve them in the future                                          |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"rxchell"},"content":"| `* * *`  | nurse                | track appointments                                 | get ready to serve patients                                          |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"rxchell"},"content":"| `* *`    | doctor               | access appointment history                         | understand patient visit patterns                                    |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"rxchell"},"content":"| `* *`    | doctor               | categorize patients by conditions or treatments    | easily track patient groups                                          |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"rxchell"},"content":"| `* *`    | doctor               | find free slots in the appointments                | find gaps for appointments or holidays                               |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"rxchell"},"content":"| `* *`    | administrative staff | get details on appointments for the day            | keep track of the day\u0027s appointments                                 |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"rxchell"},"content":"| `* *`    | doctor               | shift appointments to a different time             | change appointments based on holidays, etc.                          |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"rxchell"},"content":"| `* *`    | administrative staff | schedule follow-up appointments                    | keep track of patients\u0027 appointments                                 |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"rxchell"},"content":"| `* *`    | doctor               | add mood status to appointment details             | keep track of patient health each time we meet                       |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"rxchell"},"content":"| `* *`    | doctor               | sort patients by closest future appointment date   | see which patient to see next                                        |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"rxchell"},"content":"| `* *`    | doctor               | find duplicate errors within the system            | not have erroneous appointments                                      |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"rxchell"},"content":"| `* *`    | doctor               | organize appointments                              | arrange my schedule accordingly                                      |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"rxchell"},"content":"| `* *`    | doctor               | set holidays/free days                             | disallow appointments during certain dates                           |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"rxchell"},"content":"| `* * `   | doctor               | categorise patients based on certain factors       | easily track patients with certain statuses                          |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"rxchell"},"content":"| `* * `   | doctor               | add list of allergies for a certain patient        | not prescribe them stuff that will kill them                         |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"rxchell"},"content":"| `*`      | doctor               | view patient\u0027s medical history                     | make informed treatment decisions                                    |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"rxchell"},"content":"| `*`      | doctor               | access test results for patients                   | review and discuss results with patients                             |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"rxchell"},"content":"| `*`      | doctor               | set reminders for specific patient actions         | ensure follow-up on important tasks                                  |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"rxchell"},"content":"| `*`      | doctor               | retrieve medical certificates of patients          | gather patient information quickly                                   |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"rxchell"},"content":"| `*`      | doctor               | record the medications given to patients           | keep track of personal medication records of patients                |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"rxchell"},"content":"| `*`      | administrative staff | search for patient files by name or ID             | quickly retrieve specific records                                    |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"rxchell"},"content":"| `*`      | administrative staff | check prescription assigned by the doctor          | print out prescription for patient                                   |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"rxchell"},"content":"| `*`      | doctor               | search up medicine to prescribe                    | give prescription to patient                                         |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"rxchell"},"content":"| `*`      | doctor               | add notes to patient files                         | reference them during future visits                                  |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"rxchell"},"content":"| `*`      | doctor               | change the time frame for receiving reminders      | receive reminders more frequently or less frequently                 |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"rxchell"},"content":"| `*`      | doctor               | add guardian/parental contacts to patient          | contact patient indirectly                                           |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"rxchell"},"content":"| `*`      | doctor               | update patient status                              | keep track of patient\u0027s condition                                    |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"rxchell"},"content":"| `*`      | doctor               | copy treatments                                    | duplicate medication plans for similar patients                      |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"rxchell"},"content":"| `*`      | doctor               | receive reminders on upcoming appointments         | prepare for them                                                     |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"rxchell"},"content":"| `*`      | doctor               | retrieve specific treatment information            | treat them appropriately                                             |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"rxchell"},"content":"| `*`      | doctor               | generate an automated document for a patient       | give it to them as reference                                         |","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"jayjay19630"},"content":"(For all use cases below, the **System** is the `DocTrack` application and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"jayjay19630"},"content":"**Use case: Update a patient**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"jayjay19630"},"content":"1.  User requests to list patients.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"jayjay19630"},"content":"2.  DocTrack shows a list of patients.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"jayjay19630"},"content":"3.  User requests to update a specific patient in the list with new details","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"jayjay19630"},"content":"4.  DocTrack updates the patient.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"jayjay19630"},"content":"    * 3a1. DocTrack shows an error message.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"jayjay19630"},"content":"* 3b. The new patient details are invalid.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"jayjay19630"},"content":"    * 3b1. DocTrack shows an error message.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"jayjay19630"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"jayjay19630"},"content":"**Use case: Delete a patient**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"jayjay19630"},"content":"1.  User requests to list patients.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"jayjay19630"},"content":"2.  DocTrack shows a list of patients.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"jayjay19630"},"content":"3.  User requests to delete a specific patient in the list.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"jayjay19630"},"content":"4.  DocTrack deletes the patient.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"jayjay19630"},"content":"    * 3a1. DocTrack shows an error message.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"jayjay19630"},"content":"**Use case: Find appointments for a specific patient**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"jayjay19630"},"content":"**MSS**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"jayjay19630"},"content":"1.  User requests to list patients.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"jayjay19630"},"content":"2.  DocTrack shows a list of patients.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"jayjay19630"},"content":"3.  User requests to list appoinments for a specific patient in the list.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"jayjay19630"},"content":"4.  DocTrack shows a list of appointments for that patient.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"jayjay19630"},"content":"    Use case ends.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"jayjay19630"},"content":"**Extensions**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"jayjay19630"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"jayjay19630"},"content":"  Use case ends.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"jayjay19630"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"jayjay19630"},"content":"    * 3a1. DocTrack shows an error message.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"jayjay19630"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"jayjay19630"},"content":"**Use case: Add an appointment**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"jayjay19630"},"content":"**MSS**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"jayjay19630"},"content":"1.  User requests to list patients.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"jayjay19630"},"content":"2.  DocTrack shows a list of patients.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"jayjay19630"},"content":"3.  User requests to add an appoinment for a specific patient in the list.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"jayjay19630"},"content":"4.  DocTrack adds appointment.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"jayjay19630"},"content":"    Use case ends.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"jayjay19630"},"content":"**Extensions**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"jayjay19630"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"jayjay19630"},"content":"  Use case ends.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"jayjay19630"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"jayjay19630"},"content":"    * 3a1. DocTrack shows an error message.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"jayjay19630"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"jayjay19630"},"content":"* 3b. The appointment details are invalid (i.e. wrongly formatted or overlap with existing appointment)","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"jayjay19630"},"content":"    * 3b1. DocTrack shows an error message.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"jayjay19630"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"jayjay19630"},"content":"**Use case: Duplicate an appointment**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"jayjay19630"},"content":"1.  User requests to list appointments.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"jayjay19630"},"content":"2.  DocTrack shows a list of appointments.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"jayjay19630"},"content":"3.  User requests to duplicate a specific appointment in the list on a new date.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"jayjay19630"},"content":"4.  DocTrack duplicates appointment.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"jayjay19630"},"content":"    * 3a1. DocTrack shows an error message.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"jayjay19630"},"content":"* 3b. The appointment details are invalid (i.e. wrongly formatted or overlap with existing appointment)","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"jayjay19630"},"content":"    * 3b1. DocTrack shows an error message.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"jayjay19630"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"jayjay19630"},"content":"**Use case: Update an appointment**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"jayjay19630"},"content":"**MSS**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"jayjay19630"},"content":"1.  User requests to list appointments.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"jayjay19630"},"content":"2.  DocTrack shows a list of appointments.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"jayjay19630"},"content":"3.  User requests to update a specific appointment in the list with new details","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"jayjay19630"},"content":"4.  DocTrack updates the appointment.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"jayjay19630"},"content":"    Use case ends.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"jayjay19630"},"content":"**Extensions**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"jayjay19630"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"jayjay19630"},"content":"  Use case ends.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"jayjay19630"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"jayjay19630"},"content":"    * 3a1. DocTrack shows an error message.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"jayjay19630"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"jayjay19630"},"content":"* 3b. The new details are invalid (i.e. wrongly formatted).","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"jayjay19630"},"content":"    * 3b1. DocTrack shows an error message.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"jayjay19630"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"jayjay19630"},"content":"**Use case: Delete an appointment**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"jayjay19630"},"content":"**MSS**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"jayjay19630"},"content":"1.  User requests to list appointments.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"jayjay19630"},"content":"2.  DocTrack shows a list of appointments.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"jayjay19630"},"content":"3.  User requests to delete a specific appointment in the list.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"jayjay19630"},"content":"4.  DocTrack deletes the appointment.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"jayjay19630"},"content":"    Use case ends.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"jayjay19630"},"content":"**Extensions**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"jayjay19630"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"jayjay19630"},"content":"  Use case ends.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"jayjay19630"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"jayjay19630"},"content":"    * 3a1. DocTrack shows an error message.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"jayjay19630"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"jayjay19630"},"content":"**Use case: Find patient for a specific appointment**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"jayjay19630"},"content":"**MSS**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"jayjay19630"},"content":"1.  User requests to list appointments.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"jayjay19630"},"content":"2.  DocTrack shows a list of appointments.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"jayjay19630"},"content":"3.  User requests to find patient for a specific appointment in the list.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"jayjay19630"},"content":"4.  DocTrack shows patient details.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"jayjay19630"},"content":"    Use case ends.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"jayjay19630"},"content":"**Extensions**","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"jayjay19630"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"jayjay19630"},"content":"  Use case ends.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"jayjay19630"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"jayjay19630"},"content":"    * 3a1. DocTrack shows an error message.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"jayjay19630"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"zaidansani"},"content":"2.  Should work on any _reasonable system_ with good performance: common operation such as retrieving patient data must complete within 1 second, and complex operations must complete within 3 seconds.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"zaidansani"},"content":"4.  Should not require installation","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"zaidansani"},"content":"5.  Must not operate with dependency on any remote server","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"zaidansani"},"content":"6.  No usage of DBMS","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"zaidansani"},"content":"7.  Main product file must not exceed 100MB","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"zaidansani"},"content":"8.  Documentation must not exceed 15MB","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"zaidansani"},"content":"9.  Product should be designed for typing-preferred consumers, offering a CLI experience","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"zaidansani"},"content":"10. Product should be designed for a single user.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"zaidansani"},"content":"11. Product must function correctly on _standard resolutions_ and support scaling of 100%, 125%, 150%.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"zaidansani"},"content":"12. Data must be persistent, with all changes saved immediately to local storage","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"zaidansani"},"content":"13. Data files must be in a format that can be edited manually by advanced users","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"zaidansani"},"content":"14. Data file must remain usable and intact even with invalid input from the application","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"zaidansani"},"content":"15. Errors must trigger clear, user-friendly messages","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"zaidansani"},"content":"* **Reasonable system**: A system with an OS matching the criteria above, with parts with a release date maximum 10 years from the current date","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"zaidansani"},"content":"* **Standard resolutions**: 1920x1080 and 1080x720","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"rxchell":41,"jayjay19630":156,"zaidansani":15,"-":406}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# AB-3 User Guide","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"AddressBook Level 3 (AB3) is a **desktop app for managing contacts, optimized for use via a Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, AB3 can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `17` or above installed in your Computer.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Download the latest `.jar` file from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jayjay19630"},"content":"   - `list` : Lists all contacts.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jayjay19630"},"content":"   - `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jayjay19630"},"content":"   - `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jayjay19630"},"content":"   - `clear` : Deletes all contacts.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jayjay19630"},"content":"   - `exit` : Exits the app.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jayjay19630"},"content":"1. Refer to the [Command Overview](#command-overview) below for details of each command.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jayjay19630"},"content":"## Interacting with DocTrack","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jayjay19630"},"content":"All interactions with the DocTrack platform are done through a series of **commands** entered by the user. These commands allow you to perform various **tasks**, such as adding, editing, listing, and managing persons/appointments. The commands are designed to be flexible and user-friendly, allowing **data fields** in any order, handling multiple entries for specific fields.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jayjay19630"},"content":"Here are some **key points** to keep in mind when using commands:","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jayjay19630"},"content":"- You should supply all the fields (words in `UPPER_CASE`) that are needed for a command.\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jayjay19630"},"content":"  e.g. in `add person n/NAME`, `NAME` is a field which can be used as `add person n/John Doe`.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jayjay19630"},"content":"- The `INDEX` in command formats like `person edit` and `person delete` refers to the index number (shown beside the person or appointment) in the displayed list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jayjay19630"},"content":"- Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jayjay19630"},"content":"- Items with `…`​ after them can be used zero times or more times.\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jayjay19630"},"content":"- You can add fields in any order.\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jayjay19630"},"content":"- If you add extraneous fields for commands that do not take in fields (such as `help`, `list person`, `list appt`, `exit` and `clear`), they will be ignored.\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jayjay19630"},"content":"- If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines. This is because some space characters surrounding line-breaks may be omitted when copied over.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jayjay19630"},"content":"## Command Overview","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jayjay19630"},"content":"The following sections describe the various commands available in the DocTrack platform:","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jayjay19630"},"content":"- [Person Commands](#person-commands)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jayjay19630"},"content":"- [Appointment Commands](#appointment-commands)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jayjay19630"},"content":"- [General Commands](#general-commands)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jayjay19630"},"content":"### Person Commands","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jayjay19630"},"content":"A **person** is a patient with several fields: a name, a phone number, an email, an address and optional tags. These patients can be uniquely identified by their **patient ID (PID)** for easy reference. DocTrack allows you interact with patient information through different commands, which can be seen below.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jayjay19630"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jayjay19630"},"content":"##### Adding a person: `add person`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jayjay19630"},"content":"Format: `add person n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Tip:** A person can have any number of tags (including 0)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jayjay19630"},"content":"- `add person n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jayjay19630"},"content":"- `add person n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jayjay19630"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jayjay19630"},"content":"##### Listing all persons : `list person`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jayjay19630"},"content":"Format: `list person`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jayjay19630"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jayjay19630"},"content":"##### Editing a person : `edit person`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jayjay19630"},"content":"Format: `edit person INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jayjay19630"},"content":"- Edits the person at the specified `INDEX`.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jayjay19630"},"content":"- At least one of the optional fields must be provided.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jayjay19630"},"content":"- Existing values will be updated to the input values.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jayjay19630"},"content":"- When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jayjay19630"},"content":"- You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jayjay19630"},"content":"- `edit person 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jayjay19630"},"content":"- `edit person 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jayjay19630"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jayjay19630"},"content":"##### Locating persons by name: `find person`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jayjay19630"},"content":"Format: `find person KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jayjay19630"},"content":"- The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jayjay19630"},"content":"- The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jayjay19630"},"content":"- Only the name is searched.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jayjay19630"},"content":"- Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jayjay19630"},"content":"- Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jayjay19630"},"content":"- `find person John` returns `john` and `John Doe`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jayjay19630"},"content":"- `find person alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jayjay19630"},"content":"  ![result for \u0027find person alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jayjay19630"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jayjay19630"},"content":"##### Deleting a person : `delete person`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jayjay19630"},"content":"Format: `delete person INDEX`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jayjay19630"},"content":"- Deletes the person at the specified `INDEX`.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jayjay19630"},"content":"- `list` followed by `delete person 2` deletes the 2nd person in the address book.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jayjay19630"},"content":"- `find Betsy` followed by `delete person 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jayjay19630"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jayjay19630"},"content":"### Appointment Commands","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jayjay19630"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jayjay19630"},"content":"TODO: Add appointment commands here.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jayjay19630"},"content":"### General Commands","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jayjay19630"},"content":"**General commands** can help you with miscellaneous tasks related to patient and appointment management.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jayjay19630"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jayjay19630"},"content":"##### Viewing help : `help`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jayjay19630"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jayjay19630"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jayjay19630"},"content":"Format: `help`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"jayjay19630"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"jayjay19630"},"content":"##### Clearing all entries : `clear`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jayjay19630"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jayjay19630"},"content":"##### Exiting the program : `exit`","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"jayjay19630"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"jayjay19630"},"content":"##### Saving the data","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"jayjay19630"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"jayjay19630"},"content":"##### Editing the data file","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"jayjay19630"},"content":"| Action     | Format, Examples                                                                                                                                                      |","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"jayjay19630"},"content":"| ---------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"jayjay19630"},"content":"| **Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"jayjay19630"},"content":"| **Clear**  | `clear`                                                                                                                                                               |","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"jayjay19630"},"content":"| **Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                   |","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"jayjay19630"},"content":"| **Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                           |","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"jayjay19630"},"content":"| **Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                            |","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"jayjay19630"},"content":"| **List**   | `list`                                                                                                                                                                |","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"jayjay19630"},"content":"| **Help**   | `help`                                                                                                                                                                |","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"jayjay19630":120,"-":135}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rxchell"},"content":"# DocTrack","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rxchell"},"content":"[![CI Status](https://github.com/AY2425S1-CS2103T-W10-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2425S1-CS2103T-W10-2/tp/actions)","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rxchell"},"content":"[![Codecov](https://codecov.io/gh/AY2425S1-CS2103T-W10-2/tp/graph/badge.svg?token\u003d134QRO3UI3)](https://codecov.io/gh/AY2425S1-CS2103T-W10-2/tp)","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rxchell"},"content":"**DocTrack is a desktop application for general practitioners (GPs) to quickly access patient contact ","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rxchell"},"content":"details, appointments, and treatment records.** While it has a GUI, most of the user ","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rxchell"},"content":"interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rxchell"},"content":"* If you are interested in using DocTrack, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rxchell"},"content":"* If you are interested about developing DocTrack, the [**Developer Guide**](DeveloperGuide.html) is a good ","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rxchell"},"content":"  place to start.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"rxchell":9,"-":15}},{"path":"docs/team/choiwab.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"choiwab"},"content":"---","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"choiwab"},"content":"  layout: default.md","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"choiwab"},"content":"  title: \"Jae\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"choiwab"},"content":"---","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":"### Project: DocTrack","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":"**DocTrack** helps general practitioners (GPs) at small clinics quickly access patient contact details, appointments, and treatment records. It is optimized for users who prefer a command-line interface (CLI), enabling faster completion of frequent tasks through typed commands.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"choiwab"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"jayjay19630":4,"choiwab":8}},{"path":"docs/team/jayjay19630.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jayjay19630"},"content":"  layout: default.md","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"  title: \"Jo An\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":"### Project: DocTrack","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":"**DocTrack** helps general practitioners (GPs) at small clinics quickly access patient contact details, appointments, and treatment records. It is optimized for users who prefer a command-line interface (CLI), enabling faster completion of frequent tasks through typed commands.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jayjay19630"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"jayjay19630":12}},{"path":"docs/team/rxchell.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rxchell"},"content":"---","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rxchell"},"content":"  layout: default.md","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rxchell"},"content":"  title: \"Rachel\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rxchell"},"content":"---","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rxchell"},"content":"### Project: DocTrack","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rxchell"},"content":"**DocTrack** helps general practitioners (GPs) at small clinics quickly access patient contact details, appointments, and treatment records. It is optimized for users who prefer a command-line interface (CLI), enabling faster completion of frequent tasks through typed commands.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rxchell"},"content":"---","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rxchell"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"rxchell":12}},{"path":"docs/team/vangmay.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Vangmay"},"content":"  title: \"Vangmay\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Vangmay"},"content":"### Project: DocTrack","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":"**DocTrack** helps general practitioners (GPs) at small clinics quickly access patient contact details, appointments, and treatment records. It is optimized for users who prefer a command-line interface (CLI), enabling faster completion of frequent tasks through typed commands.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Vangmay"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Vangmay":3,"jayjay19630":2,"-":7}},{"path":"docs/team/zaidansani.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zaidansani"},"content":"---","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zaidansani"},"content":"  layout: default.md","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"  title: \"Zaidan\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zaidansani"},"content":"---","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zaidansani"},"content":"### Project: DocTrack","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":"**DocTrack** helps general practitioners (GPs) at small clinics quickly access patient contact details, appointments, and treatment records. It is optimized for users who prefer a command-line interface (CLI), enabling faster completion of frequent tasks through typed commands.","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"---","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zaidansani"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"jayjay19630":3,"zaidansani":9}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"choiwab"},"content":"import seedu.address.storage.AppointmentBookStorage;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"choiwab"},"content":"import seedu.address.storage.JsonAppointmentBookStorage;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"choiwab"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Data ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"choiwab"},"content":"        AppointmentBookStorage appointmentBookStorage \u003d new JsonAppointmentBookStorage(","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"choiwab"},"content":"                userPrefs.getAppointmentBookFilePath());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"choiwab"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, appointmentBookStorage);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jayjay19630"},"content":"        ReadOnlyAddressBook initialPersonsData;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"choiwab"},"content":"        Optional\u003cReadOnlyAppointmentBook\u003e appointmentBookOptional;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"choiwab"},"content":"        ReadOnlyAppointmentBook initialAppointmentData;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jayjay19630"},"content":"            initialPersonsData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jayjay19630"},"content":"            initialPersonsData \u003d new AddressBook();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"choiwab"},"content":"        try {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"choiwab"},"content":"            appointmentBookOptional \u003d storage.readAppointmentBook();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"choiwab"},"content":"            if (!appointmentBookOptional.isPresent()) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"choiwab"},"content":"                logger.info(\"Creating a new data file \" + storage.getAppointmentBookFilePath()","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"choiwab"},"content":"                        + \" populated with a sample AppointmentBook.\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"choiwab"},"content":"            }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"choiwab"},"content":"            initialAppointmentData \u003d appointmentBookOptional.orElseGet(SampleDataUtil::getSampleAppointmentBook);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"choiwab"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"choiwab"},"content":"            logger.warning(\"Data file at \" + storage.getAppointmentBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"choiwab"},"content":"                    + \" Will be starting with an empty AppointmentBook.\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"choiwab"},"content":"            initialAppointmentData \u003d new AppointmentBook();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jayjay19630"},"content":"        return new ModelManager(initialPersonsData, initialAppointmentData, userPrefs);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"choiwab"},"content":"        logger.info(\"Starting Doctrack \" + MainApp.VERSION);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"choiwab"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Doctrack ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"jayjay19630":5,"choiwab":23,"-":177}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Vangmay"},"content":"import seedu.address.model.appointment.AppointmentDescriptor;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.PersonDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rxchell"},"content":"    public static final String MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX \u003d \"The appointment index is invalid\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jayjay19630"},"content":"    public static String formatPerson(Person person) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zaidansani"},"content":"        return formatPerson(person.getPersonDescriptor());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zaidansani"},"content":"    /**","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zaidansani"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zaidansani"},"content":"    public static String formatPerson(PersonDescriptor person) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rxchell"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rxchell"},"content":"     * Formats the {@code appointment} for display to the user.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rxchell"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Vangmay"},"content":"    public static String formatAppointment(AppointmentDescriptor appointment) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rxchell"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rxchell"},"content":"        builder.append(appointment.getAppointmentType())","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rxchell"},"content":"                .append(\"; Id: \")","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rxchell"},"content":"                .append(appointment.getPersonId())","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rxchell"},"content":"                .append(\"; Date and Time\")","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rxchell"},"content":"                .append(appointment.getAppointmentDateTime())","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rxchell"},"content":"                .append(\"; Sickness: \")","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rxchell"},"content":"                .append(appointment.getSickness())","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rxchell"},"content":"                .append(\"; Medicine: \")","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rxchell"},"content":"                .append(appointment.getMedicine());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rxchell"},"content":"        return builder.toString();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"Vangmay":2,"rxchell":16,"jayjay19630":1,"zaidansani":8,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Vangmay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Vangmay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Vangmay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_TYPE;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Vangmay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Vangmay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICINE;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Vangmay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Vangmay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SICKNESS;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Vangmay"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Vangmay"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Vangmay"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Vangmay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Vangmay"},"content":"import seedu.address.model.appointment.AppointmentDescriptor;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Vangmay"},"content":"/**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Vangmay"},"content":" * Adds an appointment to the appointment book.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Vangmay"},"content":" */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Vangmay"},"content":"public class AddAppointmentCommand extends AddCommand {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Vangmay"},"content":"    public static final String COMMAND_WORD \u003d \"add appt\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Vangmay"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Vangmay"},"content":"            + \": Adds an appointment to the appointment book. \"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Vangmay"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Vangmay"},"content":"            + PREFIX_APPOINTMENT_TYPE + \"Appointment_TYPE\"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Vangmay"},"content":"            + PREFIX_PERSON_ID + \"PersonId\"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Vangmay"},"content":"            + PREFIX_DATETIME + \"Date\"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Vangmay"},"content":"            + PREFIX_SICKNESS + \"Sickness\"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Vangmay"},"content":"            + PREFIX_MEDICINE + \"Medicine\"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Vangmay"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Vangmay"},"content":"            + PREFIX_APPOINTMENT_TYPE + \"Check up\"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Vangmay"},"content":"            + PREFIX_DATETIME + \"16/10/2024 12:00\"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Vangmay"},"content":"            + PREFIX_PERSON_ID + \"1\"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Vangmay"},"content":"            + PREFIX_SICKNESS + \"Common Cold\"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Vangmay"},"content":"            + PREFIX_MEDICINE + \"Paracetamol\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Vangmay"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Vangmay"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists in the address book\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Vangmay"},"content":"    private final AppointmentDescriptor toAdd;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Vangmay"},"content":"     * Creates an AddAppointmentCommand to add the specified {@code Appointment}","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Vangmay"},"content":"    public AddAppointmentCommand(AppointmentDescriptor appointment) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Vangmay"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Vangmay"},"content":"        toAdd \u003d appointment;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Vangmay"},"content":"    /*","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Vangmay"},"content":"     * Checks if the entity being added to model already exists.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Vangmay"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Vangmay"},"content":"    protected boolean alreadyExists(Model model) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Vangmay"},"content":"        return model.hasAppointment(toAdd);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Vangmay"},"content":"    };","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Vangmay"},"content":"    /*","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Vangmay"},"content":"     * Adds the entity to the model.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Vangmay"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Vangmay"},"content":"    protected void addEntity(Model model) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Vangmay"},"content":"        model.addAppointment(toAdd);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Vangmay"},"content":"    };","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Vangmay"},"content":"    /*","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Vangmay"},"content":"     * Returns success message to display upon adding entity.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Vangmay"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Vangmay"},"content":"    protected String getSuccessMessage() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Vangmay"},"content":"        return MESSAGE_SUCCESS;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Vangmay"},"content":"    };","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Vangmay"},"content":"    /*","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Vangmay"},"content":"     * Returns the message to display when there is a duplicate.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Vangmay"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Vangmay"},"content":"    protected String getDuplicateEntityMessage() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Vangmay"},"content":"        return MESSAGE_DUPLICATE_APPOINTMENT;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Vangmay"},"content":"    };","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Vangmay"},"content":"     * Formats the entity for displaying in the success message.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Vangmay"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Vangmay"},"content":"    protected String formatEntity() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Vangmay"},"content":"        return Messages.formatAppointment(toAdd);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Vangmay"},"content":"    };","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Vangmay"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Vangmay"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Vangmay"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Vangmay"},"content":"        if (alreadyExists(model)) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Vangmay"},"content":"            throw new CommandException(getDuplicateEntityMessage());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Vangmay"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Vangmay"},"content":"        addEntity(model);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Vangmay"},"content":"        return new CommandResult(String.format(getSuccessMessage(), formatEntity()));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Vangmay"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Vangmay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Vangmay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Vangmay"},"content":"            return true;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Vangmay"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Vangmay"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Vangmay"},"content":"        if (!(other instanceof AddAppointmentCommand otherAddAppointmentCommand)) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Vangmay"},"content":"            return false;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Vangmay"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Vangmay"},"content":"        return toAdd.equals(otherAddAppointmentCommand.toAdd);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Vangmay"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Vangmay"},"content":"    public String toString() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Vangmay"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Vangmay"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Vangmay"},"content":"                .toString();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Vangmay"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"Vangmay":121}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":" * Adds an entity (person or appointment) to the address book.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jayjay19630"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jayjay19630"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jayjay19630"},"content":"            + \": Adds an entity (person or appointment) to the address book. \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jayjay19630"},"content":"            + \"ENTITY_TYPE \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jayjay19630"},"content":"            + \"ENTITY_ARGUMENTS...\"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jayjay19630"},"content":"            + \"Example: \" + COMMAND_WORD + \" person \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jayjay19630"},"content":"        if (alreadyExists(model)) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jayjay19630"},"content":"            throw new CommandException(getDuplicateEntityMessage());","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jayjay19630"},"content":"        addEntity(model);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jayjay19630"},"content":"        return new CommandResult(String.format(getSuccessMessage(), formatEntity()));","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jayjay19630"},"content":"    /*","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jayjay19630"},"content":"     * Checks if the entity being added to model already exists.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jayjay19630"},"content":"    protected abstract boolean alreadyExists(Model model);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jayjay19630"},"content":"    /*","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jayjay19630"},"content":"     * Adds the entity to the model.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jayjay19630"},"content":"    protected abstract void addEntity(Model model);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jayjay19630"},"content":"    /*","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jayjay19630"},"content":"     * Returns success message to display upon adding entity.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jayjay19630"},"content":"    protected abstract String getSuccessMessage();","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jayjay19630"},"content":"    /*","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jayjay19630"},"content":"     * Returns the message to display when there is a duplicate.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jayjay19630"},"content":"    protected abstract String getDuplicateEntityMessage();","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jayjay19630"},"content":"     * Formats the entity for displaying in the success message.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jayjay19630"},"content":"    protected abstract String formatEntity();","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"jayjay19630":32,"-":36}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayjay19630"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.PersonDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jayjay19630"},"content":"/**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jayjay19630"},"content":" * Adds a person to the address book.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jayjay19630"},"content":" */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jayjay19630"},"content":"public class AddPersonCommand extends AddCommand {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jayjay19630"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + \"person\"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jayjay19630"},"content":"        + \": Adds a person to the address book. \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jayjay19630"},"content":"        + \"Parameters: \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jayjay19630"},"content":"        + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jayjay19630"},"content":"        + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jayjay19630"},"content":"        + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jayjay19630"},"content":"        + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jayjay19630"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jayjay19630"},"content":"        + \"Example: \" + COMMAND_WORD + \" \" + \"person\" + \" \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jayjay19630"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jayjay19630"},"content":"        + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jayjay19630"},"content":"        + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jayjay19630"},"content":"        + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jayjay19630"},"content":"        + PREFIX_TAG + \"friends \"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jayjay19630"},"content":"        + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jayjay19630"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jayjay19630"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zaidansani"},"content":"    private final PersonDescriptor toAdd;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zaidansani"},"content":"    private int personId;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jayjay19630"},"content":"     * Creates an AddPersonCommand to add the specified {@code Person}","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zaidansani"},"content":"    public AddPersonCommand(PersonDescriptor personDescriptor) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zaidansani"},"content":"        requireNonNull(personDescriptor);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zaidansani"},"content":"        toAdd \u003d personDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jayjay19630"},"content":"    protected boolean alreadyExists(Model model) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jayjay19630"},"content":"        return model.hasPerson(toAdd);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jayjay19630"},"content":"    protected void addEntity(Model model) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zaidansani"},"content":"        personId \u003d model.addPerson(toAdd);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jayjay19630"},"content":"    protected String getSuccessMessage() {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jayjay19630"},"content":"        return MESSAGE_SUCCESS;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jayjay19630"},"content":"    protected String getDuplicateEntityMessage() {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jayjay19630"},"content":"        return MESSAGE_DUPLICATE_PERSON;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jayjay19630"},"content":"    protected String formatEntity() {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jayjay19630"},"content":"        return Messages.formatPerson(toAdd);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jayjay19630"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jayjay19630"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jayjay19630"},"content":"            return true;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jayjay19630"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zaidansani"},"content":"        if (!(other instanceof AddPersonCommand otherAddPersonCommand)) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jayjay19630"},"content":"            return false;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jayjay19630"},"content":"        return toAdd.equals(otherAddPersonCommand.toAdd);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jayjay19630"},"content":"    public String toString() {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jayjay19630"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jayjay19630"},"content":"            .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jayjay19630"},"content":"            .toString();","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jayjay19630"},"content":"}","lastModifiedDate":"2024-10-08","isFullCredit":false}],"authorContributionMap":{"jayjay19630":87,"zaidansani":8}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zaidansani"},"content":" * Clears the model - person, or appointment.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zaidansani"},"content":"public abstract class ClearCommand extends Command {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zaidansani"},"content":"    public static final String MESSAGE_USAGE \u003d \"clear person OR clear appt\";","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zaidansani"},"content":"        clearEntity(model);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zaidansani"},"content":"        return new CommandResult(getSuccessMessage());","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zaidansani"},"content":"    /*","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zaidansani"},"content":"     * Clears a specified model.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zaidansani"},"content":"    protected abstract void clearEntity(Model model);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zaidansani"},"content":"    /*","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zaidansani"},"content":"     * Returns success message to display upon adding entity.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zaidansani"},"content":"    protected abstract String getSuccessMessage();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"zaidansani":15,"-":16}},{"path":"src/main/java/seedu/address/logic/commands/ClearPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zaidansani"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zaidansani"},"content":"/**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zaidansani"},"content":" * Clears the address book.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zaidansani"},"content":" */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zaidansani"},"content":"public class ClearPersonCommand extends ClearCommand {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zaidansani"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zaidansani"},"content":"    protected void clearEntity(Model model) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zaidansani"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zaidansani"},"content":"    /*","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zaidansani"},"content":"     * Returns success message to display upon adding entity.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zaidansani"},"content":"    protected String getSuccessMessage() {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zaidansani"},"content":"        return MESSAGE_SUCCESS;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zaidansani"},"content":"}","lastModifiedDate":"2024-10-09","isFullCredit":false}],"authorContributionMap":{"zaidansani":23}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rxchell"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rxchell"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rxchell"},"content":"import java.util.List;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rxchell"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rxchell"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rxchell"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rxchell"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rxchell"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rxchell"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rxchell"},"content":" * Deletes an appointment identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rxchell"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rxchell"},"content":"public class DeleteAppointmentCommand extends DeleteCommand {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rxchell"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rxchell"},"content":"            + \": Deletes the appointment identified by the index number used in the appointment list.\\n\"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rxchell"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rxchell"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + \"appt\" + \" \" + \"1\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rxchell"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Deleted Appointment: %1$s\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rxchell"},"content":"    public DeleteAppointmentCommand(Index targetIndex) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rxchell"},"content":"        super(targetIndex);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rxchell"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rxchell"},"content":"    protected List\u003cAppointment\u003e getFilteredList(Model model) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rxchell"},"content":"        return model.getFilteredAppointmentList();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rxchell"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rxchell"},"content":"    protected void deleteEntity(Model model, Object entity) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rxchell"},"content":"        requireNonNull(entity);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rxchell"},"content":"        assert entity instanceof Appointment;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rxchell"},"content":"        model.deleteAppointment((Appointment) entity);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rxchell"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rxchell"},"content":"    protected String getSuccessMessage() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rxchell"},"content":"        return MESSAGE_DELETE_APPOINTMENT_SUCCESS;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rxchell"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rxchell"},"content":"    protected String getInvalidIndexMessage() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rxchell"},"content":"        return Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rxchell"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rxchell"},"content":"    protected String formatEntity(Object entity) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rxchell"},"content":"        assert entity instanceof Appointment;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rxchell"},"content":"        return Messages.formatAppointment((Appointment) entity);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rxchell"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rxchell"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rxchell"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rxchell"},"content":"            return true;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rxchell"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rxchell"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rxchell"},"content":"        if (!(other instanceof DeleteAppointmentCommand)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rxchell"},"content":"            return false;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rxchell"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rxchell"},"content":"        DeleteAppointmentCommand otherDeleteAppointmentCommand \u003d (DeleteAppointmentCommand) other;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rxchell"},"content":"        return targetIndex.equals(otherDeleteAppointmentCommand.targetIndex);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rxchell"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rxchell"},"content":"    public String toString() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rxchell"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rxchell"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rxchell"},"content":"                .toString();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rxchell"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"rxchell":81}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jayjay19630"},"content":" * Deletes an entity identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":"public abstract class DeleteCommand extends Command {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jayjay19630"},"content":"            + \": Deletes the entity identified by the index number used in the displayed list.\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jayjay19630"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + \"person\" + \" \" + \"1\";","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jayjay19630"},"content":"    protected final Index targetIndex;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jayjay19630"},"content":"     * @param targetIndex Index of entity to be deleted.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jayjay19630"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jayjay19630"},"content":"        List\u003c?\u003e lastShownList \u003d getFilteredList(model);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jayjay19630"},"content":"            throw new CommandException(getInvalidIndexMessage());","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jayjay19630"},"content":"        Object entityToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jayjay19630"},"content":"        deleteEntity(model, entityToDelete);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jayjay19630"},"content":"        return new CommandResult(String.format(getSuccessMessage(), formatEntity(entityToDelete)));","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jayjay19630"},"content":"     * Gets the filtered list of entities in the model.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jayjay19630"},"content":"    protected abstract List\u003c?\u003e getFilteredList(Model model);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jayjay19630"},"content":"     * Deletes the entity from the model.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jayjay19630"},"content":"    protected abstract void deleteEntity(Model model, Object entity) throws CommandException;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jayjay19630"},"content":"     * Returns the success message to display upon deleting entity.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jayjay19630"},"content":"    protected abstract String getSuccessMessage();","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jayjay19630"},"content":"     * Returns the invalid index message when the index is out of bounds.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jayjay19630"},"content":"    protected abstract String getInvalidIndexMessage();","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jayjay19630"},"content":"     * Formats the entity for displaying in the success message.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jayjay19630"},"content":"    protected abstract String formatEntity(Object entity);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-10-08","isFullCredit":false}],"authorContributionMap":{"jayjay19630":38,"-":32}},{"path":"src/main/java/seedu/address/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jayjay19630"},"content":"public class DeletePersonCommand extends DeleteCommand {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jayjay19630"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + \"person\" + \" \" + \"1\";","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zaidansani"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jayjay19630"},"content":"        super(targetIndex);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jayjay19630"},"content":"    protected List\u003cPerson\u003e getFilteredList(Model model) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jayjay19630"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jayjay19630"},"content":"    protected void deleteEntity(Model model, Object entity) throws CommandException {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jayjay19630"},"content":"        requireNonNull(entity);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jayjay19630"},"content":"        assert entity instanceof Person;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jayjay19630"},"content":"        model.deletePerson((Person) entity);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jayjay19630"},"content":"    protected String getSuccessMessage() {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jayjay19630"},"content":"        return MESSAGE_DELETE_PERSON_SUCCESS;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jayjay19630"},"content":"    protected String getInvalidIndexMessage() {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jayjay19630"},"content":"        return Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jayjay19630"},"content":"    protected String formatEntity(Object entity) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jayjay19630"},"content":"        assert entity instanceof Person;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jayjay19630"},"content":"        return Messages.formatPerson((Person) entity);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zaidansani"},"content":"        if (!(other instanceof DeletePersonCommand)) {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zaidansani"},"content":"        DeletePersonCommand otherDeletePersonCommand \u003d (DeletePersonCommand) other;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zaidansani"},"content":"        return targetIndex.equals(otherDeletePersonCommand.targetIndex);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"jayjay19630":28,"zaidansani":4,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"choiwab"},"content":" * Edits the details of an existing entity (person or appointment) in the address book.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"choiwab"},"content":"public abstract class EditCommand extends Command {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"choiwab"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"choiwab"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"choiwab"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"choiwab"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"choiwab"},"content":"            + \": Edits the details of an entity (person or appointment) identified \"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"choiwab"},"content":"            + \"ENTITY_TYPE \"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"choiwab"},"content":"            + \"INDEX\"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"choiwab"},"content":"            + \"ENTITY_ARGUMENTS...\"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"choiwab"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + \"person\" + \" \" + \"1\"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"choiwab"},"content":"    protected final Index targetIndex;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"choiwab"},"content":"    protected final EditEntityDescriptor editEntityDescriptor;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"choiwab"},"content":"     * @param targetIndex Index of entity to be edited.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"choiwab"},"content":"    public EditCommand(Index targetIndex, EditEntityDescriptor editEntityDescriptor) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"choiwab"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"choiwab"},"content":"        requireNonNull(editEntityDescriptor);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"choiwab"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"choiwab"},"content":"        this.editEntityDescriptor \u003d editEntityDescriptor;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"choiwab"},"content":"        List\u003c?\u003e lastShownList \u003d getFilteredList(model);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"choiwab"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"choiwab"},"content":"            throw new CommandException(getInvalidIndexMessage());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"choiwab"},"content":"        Object entityToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"choiwab"},"content":"        Object editedEntity \u003d createEditedEntity(model, entityToEdit, editEntityDescriptor);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"choiwab"},"content":"        if (isSameEntity(model, editedEntity, entityToEdit) \u0026\u0026 hasEntity(model, editedEntity)) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"choiwab"},"content":"            throw new CommandException(getDuplicateMessage());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"choiwab"},"content":"        editEntity(model, editedEntity, entityToEdit);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"choiwab"},"content":"        return new CommandResult(String.format(getSuccessMessage(), formatEntity(editedEntity)));","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"choiwab"},"content":"    /*","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"choiwab"},"content":"     * Checks if entity already exists in list","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"choiwab"},"content":"    protected abstract boolean hasEntity(Model model, Object entity) throws CommandException;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"choiwab"},"content":"    /*","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"choiwab"},"content":"     * Checks if entity to edit is the same as edited entity","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"choiwab"},"content":"    protected abstract boolean isSameEntity(Model model, Object editedEntity, Object entityToEdit)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"choiwab"},"content":"            throws CommandException;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"choiwab"},"content":"     * Gets the filtered list of entities in the model.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"choiwab"},"content":"    protected abstract List\u003c?\u003e getFilteredList(Model model);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"choiwab"},"content":"    /*","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"choiwab"},"content":"     * Edits Entity","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"choiwab"},"content":"    protected abstract void editEntity(Model model, Object editedEntity, Object entityToEdit) throws CommandException;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"choiwab"},"content":"    /*","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"choiwab"},"content":"     * Adds the entity to the model.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"choiwab"},"content":"    protected abstract Object createEditedEntity(Model model, Object entityToEdit,","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"choiwab"},"content":"                                                 EditEntityDescriptor editEntityDescriptor) throws CommandException;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"choiwab"},"content":"    /*","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"choiwab"},"content":"     * Returns success message to display upon adding entity.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"choiwab"},"content":"    protected abstract String getSuccessMessage();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"choiwab"},"content":"    /*","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"choiwab"},"content":"     * Returns duplicate message to display upon adding entity.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"choiwab"},"content":"    protected abstract String getDuplicateMessage();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"choiwab"},"content":"     * Returns the invalid index message when the index is out of bounds.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"choiwab"},"content":"    protected abstract String getInvalidIndexMessage();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"choiwab"},"content":"     * Formats the entity for displaying in the success message.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"choiwab"},"content":"    protected abstract String formatEntity(Object entity);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"choiwab"},"content":"        return targetIndex.equals(otherEditCommand.targetIndex)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"choiwab"},"content":"                \u0026\u0026 editEntityDescriptor.equals(otherEditCommand.editEntityDescriptor);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"choiwab"},"content":"     * Abstract descriptor for editing entities.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"choiwab"},"content":"    public abstract static class EditEntityDescriptor {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"choiwab"},"content":"        // This class can have common fields or methods for all entities.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"choiwab"},"content":"        public EditEntityDescriptor() {}","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"choiwab"},"content":"        public EditEntityDescriptor(EditEntityDescriptor toCopy) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"choiwab"},"content":"            // Copy logic for common fields, if any, can go here.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"choiwab"},"content":"        public abstract boolean equals(Object other);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26","isFullCredit":false}],"authorContributionMap":{"choiwab":68,"-":95}},{"path":"src/main/java/seedu/address/logic/commands/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choiwab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"choiwab"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"choiwab"},"content":"import java.util.Collections;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"choiwab"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"choiwab"},"content":"import java.util.List;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"choiwab"},"content":"import java.util.Objects;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"choiwab"},"content":"import java.util.Optional;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"choiwab"},"content":"import java.util.Set;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"choiwab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"choiwab"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"choiwab"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"choiwab"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"choiwab"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.PersonDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"choiwab"},"content":"/**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"choiwab"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"choiwab"},"content":" */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"choiwab"},"content":"public class EditPersonCommand extends EditCommand {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"choiwab"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"choiwab"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"choiwab"},"content":"     * Creates an EditPersonCommand to add the specified {@code Person}","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"choiwab"},"content":"    public EditPersonCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"choiwab"},"content":"        super(index, editPersonDescriptor);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"choiwab"},"content":"    protected boolean hasEntity(Model model, Object entity) throws CommandException {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"choiwab"},"content":"        return model.hasPerson((Person) entity);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"choiwab"},"content":"    protected boolean isSameEntity(Model model, Object editedEntity, Object entityToEdit)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"choiwab"},"content":"            throws CommandException {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"choiwab"},"content":"        Person entityToEditCasted \u003d (Person) entityToEdit;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"choiwab"},"content":"        return !(entityToEditCasted.isSamePerson((Person) editedEntity));","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"choiwab"},"content":"    protected List\u003cPerson\u003e getFilteredList(Model model) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"choiwab"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"choiwab"},"content":"    protected void editEntity(Model model, Object editedPerson, Object personToEdit) throws CommandException {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"choiwab"},"content":"        model.setPerson((Person) personToEdit, (Person) editedPerson);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"choiwab"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"choiwab"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"choiwab"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"choiwab"},"content":"    protected Object createEditedEntity(Model model, Object personToEdit,","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"choiwab"},"content":"                                                 EditEntityDescriptor editPersonDescriptor) throws CommandException {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"choiwab"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"choiwab"},"content":"        EditPersonDescriptor editPersonDescriptorCasted \u003d (EditPersonDescriptor) editPersonDescriptor;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"choiwab"},"content":"        Person personToEditCasted \u003d (Person) personToEdit;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"choiwab"},"content":"        Name updatedName \u003d editPersonDescriptorCasted.getName().orElse(personToEditCasted.getName());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"choiwab"},"content":"        Phone updatedPhone \u003d editPersonDescriptorCasted.getPhone().orElse(personToEditCasted.getPhone());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"choiwab"},"content":"        Email updatedEmail \u003d editPersonDescriptorCasted.getEmail().orElse(personToEditCasted.getEmail());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"choiwab"},"content":"        Address updatedAddress \u003d editPersonDescriptorCasted.getAddress().orElse(personToEditCasted.getAddress());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"choiwab"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptorCasted.getTags().orElse(personToEditCasted.getTags());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"choiwab"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"choiwab"},"content":"    protected String getSuccessMessage() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"choiwab"},"content":"        return MESSAGE_EDIT_PERSON_SUCCESS;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"choiwab"},"content":"    protected String getDuplicateMessage() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"choiwab"},"content":"        return MESSAGE_DUPLICATE_PERSON;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"choiwab"},"content":"    protected String getInvalidIndexMessage() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"choiwab"},"content":"        return Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"choiwab"},"content":"    protected String formatEntity(Object entity) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zaidansani"},"content":"        assert entity instanceof PersonDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zaidansani"},"content":"        return Messages.formatPerson((PersonDescriptor) entity);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"choiwab"},"content":"    public String toString() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"choiwab"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"choiwab"},"content":"                .add(\"index\", targetIndex)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"choiwab"},"content":"                .add(\"editPersonDescriptor\", editEntityDescriptor)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"choiwab"},"content":"                .toString();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"choiwab"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"choiwab"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"choiwab"},"content":"    public static class EditPersonDescriptor extends EditCommand.EditEntityDescriptor {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"choiwab"},"content":"        private Name name;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"choiwab"},"content":"        private Phone phone;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"choiwab"},"content":"        private Email email;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"choiwab"},"content":"        private Address address;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"choiwab"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"choiwab"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"choiwab"},"content":"        /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"choiwab"},"content":"         * Copy constructor.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"choiwab"},"content":"         */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"choiwab"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"choiwab"},"content":"            super(toCopy);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"choiwab"},"content":"            setName(toCopy.name);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"choiwab"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"choiwab"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"choiwab"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"choiwab"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"choiwab"},"content":"        /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"choiwab"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"choiwab"},"content":"         */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"choiwab"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"choiwab"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"choiwab"},"content":"        public void setName(Name name) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"choiwab"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"choiwab"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"choiwab"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"choiwab"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"choiwab"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"choiwab"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"choiwab"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"choiwab"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"choiwab"},"content":"            this.email \u003d email;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"choiwab"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"choiwab"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"choiwab"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"choiwab"},"content":"            this.address \u003d address;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"choiwab"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"choiwab"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"choiwab"},"content":"        /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"choiwab"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"choiwab"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"choiwab"},"content":"         */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"choiwab"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"choiwab"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"choiwab"},"content":"        /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"choiwab"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"choiwab"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"choiwab"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"choiwab"},"content":"         */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"choiwab"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"choiwab"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"choiwab"},"content":"        @Override","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"choiwab"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"choiwab"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"choiwab"},"content":"                return true;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"choiwab"},"content":"            }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"choiwab"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"choiwab"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"choiwab"},"content":"                return false;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"choiwab"},"content":"            }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"choiwab"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"choiwab"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"choiwab"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"choiwab"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"choiwab"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"choiwab"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"choiwab"},"content":"        @Override","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"choiwab"},"content":"        public String toString() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"choiwab"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"choiwab"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"choiwab"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"choiwab"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"choiwab"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"choiwab"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"choiwab"},"content":"                    .toString();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"choiwab"},"content":"}","lastModifiedDate":"2024-10-11","isFullCredit":false}],"authorContributionMap":{"choiwab":220,"zaidansani":4}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Vangmay"},"content":" * Finds and lists all persons or appointments in address book whose name contains any of the argument keywords.","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Vangmay"},"content":"public abstract class FindCommand extends Command {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Vangmay"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Vangmay"},"content":"            + \": Finds all persons or appointments whose names contain any of \"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Vangmay"},"content":"    protected final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Vangmay"},"content":"        findEntity(model);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Vangmay"},"content":"        return new CommandResult(getSuccessMessage(model));","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Vangmay"},"content":"     * Finds the person/appointment from the list","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Vangmay"},"content":"    protected abstract void findEntity(Model model);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Vangmay"},"content":"     * Returns the message to be displayed after finding all persons or appointments matching the query.","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Vangmay"},"content":"     *","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Vangmay"},"content":"     * @return Success message","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Vangmay"},"content":"    protected abstract String getSuccessMessage(Model model);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22","isFullCredit":false}],"authorContributionMap":{"Vangmay":20,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/FindPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Vangmay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Vangmay"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Vangmay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Vangmay"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Vangmay"},"content":"/**","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Vangmay"},"content":" * Finds the person from the list of patients","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Vangmay"},"content":" */","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Vangmay"},"content":"public class FindPersonCommand extends FindCommand {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Vangmay"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Person has been found\";","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Vangmay"},"content":"    public FindPersonCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Vangmay"},"content":"        super(predicate);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Vangmay"},"content":"     * Finds all persons with names matching the predicate in the address book to the user.","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Vangmay"},"content":"     * @param model {@code Model} which the FindPersonCommand should operate on.","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Vangmay"},"content":"     * */","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Vangmay"},"content":"    @Override","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Vangmay"},"content":"    protected void findEntity(Model model) {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Vangmay"},"content":"        model.updateFilteredPersonList(this.predicate);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Vangmay"},"content":"     * Returns the message to be displayed after finding the person.","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Vangmay"},"content":"     *","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Vangmay"},"content":"     * @return the message to be displayed after finding all persons.","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Vangmay"},"content":"    @Override","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Vangmay"},"content":"    public String getSuccessMessage(Model model) {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Vangmay"},"content":"        return String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size());","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Vangmay"},"content":"}","lastModifiedDate":"2024-10-10","isFullCredit":false}],"authorContributionMap":{"Vangmay":35}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rxchell"},"content":" * Lists all persons or appointments in the address book to the user.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rxchell"},"content":"public abstract class ListCommand extends Command {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rxchell"},"content":"    public static final String MESSAGE_USAGE \u003d \"list person OR list appt\";","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rxchell"},"content":"        listEntity(model);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rxchell"},"content":"        return new CommandResult(getSuccessMessage());","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rxchell"},"content":"    /*","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rxchell"},"content":"     * Lists everything in the model (person or appointment).","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rxchell"},"content":"     */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rxchell"},"content":"    protected abstract void listEntity(Model model);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rxchell"},"content":"    /*","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rxchell"},"content":"     * Returns the message to be displayed after listing all persons or appointments.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rxchell"},"content":"     */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rxchell"},"content":"    protected abstract String getSuccessMessage();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"rxchell":15,"-":16}},{"path":"src/main/java/seedu/address/logic/commands/ListPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rxchell"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rxchell"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rxchell"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rxchell"},"content":"/**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rxchell"},"content":" * Lists all persons in the address book.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rxchell"},"content":" */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rxchell"},"content":"public class ListPersonCommand extends ListCommand {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rxchell"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons!\";","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rxchell"},"content":"    /**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rxchell"},"content":"     * Lists all persons in the address book to the user.*","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rxchell"},"content":"     * @param model {@code Model} which the ListPersonCommand should operate on.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rxchell"},"content":"     * */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rxchell"},"content":"    @Override","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rxchell"},"content":"    protected void listEntity(Model model) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rxchell"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rxchell"},"content":"    /**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rxchell"},"content":"     * Returns the message to be displayed after listing all persons.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rxchell"},"content":"     *","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rxchell"},"content":"     * @return the message to be displayed after listing all persons.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rxchell"},"content":"    */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rxchell"},"content":"    @Override","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rxchell"},"content":"    protected String getSuccessMessage() {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rxchell"},"content":"        return MESSAGE_SUCCESS;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rxchell"},"content":"}","lastModifiedDate":"2024-10-09","isFullCredit":false}],"authorContributionMap":{"rxchell":32}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Vangmay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_TYPE;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Vangmay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Vangmay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICINE;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Vangmay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Vangmay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SICKNESS;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.parser.ParserUtil.APPOINTMENT_ENTITY_STRING;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.parser.ParserUtil.PERSON_ENTITY_STRING;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Vangmay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Vangmay"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Vangmay"},"content":"import seedu.address.model.appointment.AppointmentDescriptor;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Vangmay"},"content":"import seedu.address.model.appointment.AppointmentType;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Vangmay"},"content":"import seedu.address.model.appointment.Medicine;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Vangmay"},"content":"import seedu.address.model.appointment.Sickness;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.PersonDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Vangmay"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Vangmay"},"content":"                        PREFIX_TAG, PREFIX_PERSON_ID, PREFIX_DATETIME,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Vangmay"},"content":"                        PREFIX_APPOINTMENT_TYPE, PREFIX_SICKNESS, PREFIX_MEDICINE);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jayjay19630"},"content":"        String entityType \u003d argMultimap.getEntityType();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jayjay19630"},"content":"        switch (entityType) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jayjay19630"},"content":"        case PERSON_ENTITY_STRING:","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jayjay19630"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jayjay19630"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zaidansani"},"content":"            PersonDescriptor person \u003d new PersonDescriptor(name, phone, email, address, tagList);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jayjay19630"},"content":"            return new AddPersonCommand(person);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jayjay19630"},"content":"        case APPOINTMENT_ENTITY_STRING:","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Vangmay"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_PERSON_ID, PREFIX_DATETIME,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Vangmay"},"content":"                    PREFIX_APPOINTMENT_TYPE, PREFIX_SICKNESS, PREFIX_MEDICINE)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Vangmay"},"content":"                throw new ParseException(","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Vangmay"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Vangmay"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Vangmay"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_PERSON_ID, PREFIX_DATETIME,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Vangmay"},"content":"                    PREFIX_APPOINTMENT_TYPE, PREFIX_SICKNESS, PREFIX_MEDICINE);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Vangmay"},"content":"            int personId \u003d ParserUtil.parsePersonId(argMultimap.getValue(PREFIX_PERSON_ID).get());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Vangmay"},"content":"            LocalDateTime appointmentDateTime \u003d ParserUtil.parseAppointmentDateTime(","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Vangmay"},"content":"                    argMultimap.getValue(PREFIX_DATETIME).get());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Vangmay"},"content":"            AppointmentType appointmentType \u003d ParserUtil.parseAppointmentType(","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Vangmay"},"content":"                    argMultimap.getValue(PREFIX_APPOINTMENT_TYPE).get());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Vangmay"},"content":"            Sickness sickness \u003d ParserUtil.parseSickness(argMultimap.getValue(PREFIX_SICKNESS).get());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Vangmay"},"content":"            Medicine medicine \u003d ParserUtil.parseMedicine(argMultimap.getValue(PREFIX_MEDICINE).get());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Vangmay"},"content":"            AppointmentDescriptor appointment \u003d new AppointmentDescriptor(","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Vangmay"},"content":"                    appointmentType, appointmentDateTime, personId, sickness, medicine);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Vangmay"},"content":"            return new AddAppointmentCommand(appointment);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jayjay19630"},"content":"        default:","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jayjay19630"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05","isFullCredit":false}],"authorContributionMap":{"Vangmay":32,"jayjay19630":13,"zaidansani":2,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zaidansani"},"content":"            return new ClearCommandParser().parse(arguments);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rxchell"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"rxchell":1,"zaidansani":2,"-":84}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jayjay19630"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jayjay19630"},"content":"    public String getEntityType() {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jayjay19630"},"content":"        return getPreamble().split(\" \")[0];","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08","isFullCredit":false}],"authorContributionMap":{"jayjay19630":7,"-":78}},{"path":"src/main/java/seedu/address/logic/parser/ClearCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zaidansani"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zaidansani"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zaidansani"},"content":"import static seedu.address.logic.parser.ParserUtil.APPOINTMENT_ENTITY_STRING;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zaidansani"},"content":"import static seedu.address.logic.parser.ParserUtil.PERSON_ENTITY_STRING;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zaidansani"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zaidansani"},"content":"import seedu.address.logic.commands.ClearPersonCommand;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zaidansani"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zaidansani"},"content":"/**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zaidansani"},"content":" * Parses input arguments and creates a new ClearCommand object","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zaidansani"},"content":" */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zaidansani"},"content":"public class ClearCommandParser implements Parser\u003cClearCommand\u003e {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zaidansani"},"content":"    /**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zaidansani"},"content":"     * Parses the given {@code String} of arguments in the context of the ClearCommand","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zaidansani"},"content":"     * and returns a ClearCommand object for execution.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zaidansani"},"content":"     *","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zaidansani"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zaidansani"},"content":"    public ClearCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zaidansani"},"content":"        String entityType \u003d args.trim();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zaidansani"},"content":"        switch (entityType) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zaidansani"},"content":"        case PERSON_ENTITY_STRING:","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zaidansani"},"content":"            return new ClearPersonCommand();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zaidansani"},"content":"        case APPOINTMENT_ENTITY_STRING:","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zaidansani"},"content":"            //TODO: Instantiate and return ClearAppointmentCommand","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zaidansani"},"content":"        default:","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zaidansani"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zaidansani"},"content":"                    ClearCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zaidansani"},"content":"        }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zaidansani"},"content":"}","lastModifiedDate":"2024-10-09","isFullCredit":false}],"authorContributionMap":{"zaidansani":35}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Vangmay"},"content":"    public static final Prefix PREFIX_PERSON_ID \u003d new Prefix(\"i/\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Vangmay"},"content":"    public static final Prefix PREFIX_DATETIME \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jayjay19630"},"content":"    public static final Prefix PREFIX_APPOINTMENT_TYPE \u003d new Prefix(\"t/\");","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jayjay19630"},"content":"    public static final Prefix PREFIX_MEDICINE \u003d new Prefix(\"m/\");","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jayjay19630"},"content":"    public static final Prefix PREFIX_SICKNESS \u003d new Prefix(\"s/\");","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"Vangmay":2,"jayjay19630":3,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.parser.ParserUtil.APPOINTMENT_ENTITY_STRING;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.parser.ParserUtil.PERSON_ENTITY_STRING;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rxchell"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jayjay19630"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jayjay19630"},"content":"        String[] splitArgs \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jayjay19630"},"content":"        if (splitArgs.length !\u003d 2) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jayjay19630"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jayjay19630"},"content":"        String entityType \u003d splitArgs[0];","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jayjay19630"},"content":"        String indexString \u003d splitArgs[1];","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jayjay19630"},"content":"        switch (entityType) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jayjay19630"},"content":"        case PERSON_ENTITY_STRING:","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jayjay19630"},"content":"            try {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jayjay19630"},"content":"                Index index \u003d ParserUtil.parseIndex(indexString);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jayjay19630"},"content":"                return new DeletePersonCommand(index);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jayjay19630"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jayjay19630"},"content":"                throw new ParseException(","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jayjay19630"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jayjay19630"},"content":"            }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jayjay19630"},"content":"        case APPOINTMENT_ENTITY_STRING:","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rxchell"},"content":"            try {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rxchell"},"content":"                Index index \u003d ParserUtil.parseIndex(indexString);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rxchell"},"content":"                return new DeleteAppointmentCommand(index);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rxchell"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rxchell"},"content":"                throw new ParseException(","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rxchell"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rxchell"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jayjay19630"},"content":"        default:","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jayjay19630"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-10-08","isFullCredit":false}],"authorContributionMap":{"jayjay19630":25,"rxchell":8,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"choiwab"},"content":"import static seedu.address.logic.parser.ParserUtil.APPOINTMENT_ENTITY_STRING;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"choiwab"},"content":"import static seedu.address.logic.parser.ParserUtil.PERSON_ENTITY_STRING;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"choiwab"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"choiwab"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"choiwab"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"choiwab"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"choiwab"},"content":"        String[] splitArgs \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"choiwab"},"content":"        if (splitArgs.length \u003c 3) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"choiwab"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"choiwab"},"content":"        String entityType \u003d splitArgs[0];","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"choiwab"},"content":"        String indexString \u003d splitArgs[1];","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"choiwab"},"content":"        switch (entityType) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"choiwab"},"content":"        case PERSON_ENTITY_STRING:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"choiwab"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"choiwab"},"content":"                    ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"choiwab"},"content":"                            PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"choiwab"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"choiwab"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"choiwab"},"content":"                        EditPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"choiwab"},"content":"            }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"choiwab"},"content":"            Index index \u003d ParserUtil.parseIndex(indexString);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"                throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"choiwab"},"content":"            return new EditPersonCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"choiwab"},"content":"        case APPOINTMENT_ENTITY_STRING:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"choiwab"},"content":"                //TODO","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"choiwab"},"content":"        default:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"choiwab"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"choiwab"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"choiwab"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"choiwab"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"choiwab"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26","isFullCredit":false}],"authorContributionMap":{"choiwab":36,"-":78}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Vangmay"},"content":"import static seedu.address.logic.parser.ParserUtil.APPOINTMENT_ENTITY_STRING;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Vangmay"},"content":"import static seedu.address.logic.parser.ParserUtil.PERSON_ENTITY_STRING;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Vangmay"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Vangmay"},"content":"     *","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Vangmay"},"content":"     * @param  args user input","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Vangmay"},"content":"     * @return findCommand object for execution","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Vangmay"},"content":"        String entityType \u003d nameKeywords[0];","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Vangmay"},"content":"        nameKeywords \u003d Arrays.copyOfRange(nameKeywords, 1, nameKeywords.length);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Vangmay"},"content":"        if (nameKeywords.length \u003d\u003d 0) {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Vangmay"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Vangmay"},"content":"        }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Vangmay"},"content":"        switch (entityType) {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Vangmay"},"content":"        case PERSON_ENTITY_STRING:","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Vangmay"},"content":"            return new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Vangmay"},"content":"        case APPOINTMENT_ENTITY_STRING:","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Vangmay"},"content":"            //TODO: Instantiate and return FindAppointmentCommand","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Vangmay"},"content":"        default:","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Vangmay"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Vangmay"},"content":"        }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26","isFullCredit":false}],"authorContributionMap":{"Vangmay":21,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rxchell"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rxchell"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rxchell"},"content":"import static seedu.address.logic.parser.ParserUtil.APPOINTMENT_ENTITY_STRING;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rxchell"},"content":"import static seedu.address.logic.parser.ParserUtil.PERSON_ENTITY_STRING;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rxchell"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rxchell"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rxchell"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rxchell"},"content":"/**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rxchell"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rxchell"},"content":" */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rxchell"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rxchell"},"content":"    /**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rxchell"},"content":"     * Parses the given {@code String} of arguments for ListCommand","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rxchell"},"content":"     *","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rxchell"},"content":"     * @param args user input","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rxchell"},"content":"     * @return ListCommand object for execution","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rxchell"},"content":"     * @throws ParseException if the user input does not follow the expected format","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rxchell"},"content":"     */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rxchell"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rxchell"},"content":"        String entityType \u003d args.trim();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rxchell"},"content":"        switch (entityType) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rxchell"},"content":"        case PERSON_ENTITY_STRING:","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rxchell"},"content":"            return new ListPersonCommand();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rxchell"},"content":"        case APPOINTMENT_ENTITY_STRING:","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rxchell"},"content":"            //TODO: Instantiate and return ListAppointmentCommand","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rxchell"},"content":"        default:","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rxchell"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rxchell"},"content":"                    ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rxchell"},"content":"        }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rxchell"},"content":"}","lastModifiedDate":"2024-10-09","isFullCredit":false}],"authorContributionMap":{"rxchell":36}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Vangmay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Vangmay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Vangmay"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Vangmay"},"content":"import seedu.address.model.appointment.AppointmentType;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Vangmay"},"content":"import seedu.address.model.appointment.Medicine;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Vangmay"},"content":"import seedu.address.model.appointment.Sickness;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Vangmay"},"content":"    public static final String PERSON_ENTITY_STRING \u003d \"person\";","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Vangmay"},"content":"    public static final String APPOINTMENT_ENTITY_STRING \u003d \"appt\";","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Vangmay"},"content":"     * Parses a {@code String personId} into a {@code int personId}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Vangmay"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Vangmay"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Vangmay"},"content":"     * @throws ParseException if the given {@code personId} is invalid.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Vangmay"},"content":"    public static int parsePersonId(String personId) throws ParseException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Vangmay"},"content":"        requireNonNull(personId);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Vangmay"},"content":"        String trimmerPersonId \u003d personId.trim();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Vangmay"},"content":"        int parsedPersonId \u003d Integer.parseInt(trimmerPersonId);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Vangmay"},"content":"        if (parsedPersonId \u003c 0) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Vangmay"},"content":"            throw new ParseException(\"person Id needs to be a positive intger\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Vangmay"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Vangmay"},"content":"        return parsedPersonId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Vangmay"},"content":"    };","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Vangmay"},"content":"     * Parses a {@code String appointmentDateTime} into a {@code LocalDateTime}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Vangmay"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Vangmay"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Vangmay"},"content":"     * @throws ParseException if the given {@code appointmentDateTime} is invalid.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Vangmay"},"content":"    public static LocalDateTime parseAppointmentDateTime(String appointmentDateTime) throws ParseException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Vangmay"},"content":"        requireNonNull(appointmentDateTime);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Vangmay"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Vangmay"},"content":"        try {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Vangmay"},"content":"            return LocalDateTime.parse(appointmentDateTime, formatter);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Vangmay"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Vangmay"},"content":"            throw new ParseException(\"Invalid date-time format. Expected format: YYYY-MM-DD HH:mm:ss\", e);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Vangmay"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Vangmay"},"content":"     * Parses a {@code String appointmentType} into a {@code AppointmentType}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Vangmay"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Vangmay"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Vangmay"},"content":"     * @throws ParseException if the given {@code appointmentType} is invalid.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Vangmay"},"content":"    public static AppointmentType parseAppointmentType(String appointmentType) throws ParseException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Vangmay"},"content":"        requireNonNull(appointmentType);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Vangmay"},"content":"        String trimmedAppointmentType \u003d appointmentType.trim();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Vangmay"},"content":"        if (!AppointmentType.isValidAppointmentType(trimmedAppointmentType)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Vangmay"},"content":"            throw new ParseException(AppointmentType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Vangmay"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Vangmay"},"content":"        return new AppointmentType(trimmedAppointmentType);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Vangmay"},"content":"     * Parses a {@code String sickness} into a {@code Sickness}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Vangmay"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Vangmay"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Vangmay"},"content":"     * @throws ParseException if the given {@code sickness} is invalid.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Vangmay"},"content":"    public static Sickness parseSickness(String sickness) throws ParseException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Vangmay"},"content":"        requireNonNull(sickness);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Vangmay"},"content":"        String trimmedSickness \u003d sickness.trim();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Vangmay"},"content":"        if (!Sickness.isValidSickness(sickness)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Vangmay"},"content":"            throw new ParseException(Sickness.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Vangmay"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Vangmay"},"content":"        return new Sickness(trimmedSickness);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Vangmay"},"content":"     * Parses a {@code String medicine} into a {@code Medicine}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Vangmay"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Vangmay"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Vangmay"},"content":"     * @throws ParseException if the given {@code medicine} is invalid.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Vangmay"},"content":"    public static Medicine parseMedicine(String medicine) throws ParseException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Vangmay"},"content":"        requireNonNull(medicine);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Vangmay"},"content":"        String trimmedMedicine \u003d medicine.trim();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Vangmay"},"content":"        if (!Medicine.isValidMedicine(medicine)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Vangmay"},"content":"            throw new ParseException(Medicine.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Vangmay"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Vangmay"},"content":"        return new Medicine(trimmedMedicine);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"Vangmay":86,"-":124}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.PersonDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zaidansani"},"content":"    private int counter;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zaidansani"},"content":"    public AddressBook() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zaidansani"},"content":"        counter \u003d 0;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zaidansani"},"content":"    public int getCounter() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zaidansani"},"content":"        return counter;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zaidansani"},"content":"    public void setCounter(int counter) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zaidansani"},"content":"        this.counter \u003d counter;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zaidansani"},"content":"        setCounter(newData.getCounter());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zaidansani"},"content":"    /**","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zaidansani"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zaidansani"},"content":"    public boolean hasPerson(PersonDescriptor personDescriptor) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zaidansani"},"content":"        requireNonNull(personDescriptor);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zaidansani"},"content":"        return persons.contains(personDescriptor);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zaidansani"},"content":"        ++counter;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zaidansani"},"content":"    /**","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zaidansani"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zaidansani"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zaidansani"},"content":"    public int addPerson(PersonDescriptor p) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zaidansani"},"content":"        persons.add(new Person(counter, p));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zaidansani"},"content":"        return ++counter;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"zaidansani":33,"-":129}},{"path":"src/main/java/seedu/address/model/AppointmentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayjay19630"},"content":"package seedu.address.model;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":"import java.util.List;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Vangmay"},"content":"import seedu.address.model.appointment.AppointmentDescriptor;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.appointment.UniqueAppointmentList;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jayjay19630"},"content":"/**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":" * Wraps all data at the appointment-book level","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jayjay19630"},"content":" * Duplicates are not allowed (by .isSameAppointment comparison)","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jayjay19630"},"content":" */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jayjay19630"},"content":"public class AppointmentBook implements ReadOnlyAppointmentBook {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jayjay19630"},"content":"    private final UniqueAppointmentList appointments;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jayjay19630"},"content":"    /*","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jayjay19630"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jayjay19630"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jayjay19630"},"content":"     *","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jayjay19630"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jayjay19630"},"content":"     *   among constructors.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jayjay19630"},"content":"    {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jayjay19630"},"content":"        appointments \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jayjay19630"},"content":"    public AppointmentBook() {}","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jayjay19630"},"content":"     * Creates an AppointmentBook using the Appointments in the {@code toBeCopied}","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jayjay19630"},"content":"    public AppointmentBook(ReadOnlyAppointmentBook toBeCopied) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jayjay19630"},"content":"        this();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jayjay19630"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jayjay19630"},"content":"    //// list overwrite operations","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jayjay19630"},"content":"     * Replaces the contents of the appointment list with {@code appointments}.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jayjay19630"},"content":"     * {@code appointments} must not contain duplicate appointments.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jayjay19630"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jayjay19630"},"content":"        this.appointments.setAppointments(appointments);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jayjay19630"},"content":"     * Resets the existing data of this {@code AppointmentBook} with {@code newData}.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jayjay19630"},"content":"    public void resetData(ReadOnlyAppointmentBook newData) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jayjay19630"},"content":"        requireNonNull(newData);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jayjay19630"},"content":"        setAppointments(newData.getAppointmentList());","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jayjay19630"},"content":"    //// appointment-level operations","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jayjay19630"},"content":"     * Returns true if an appointment with the same identity as {@code appointment} exists in the appointment book.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jayjay19630"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jayjay19630"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jayjay19630"},"content":"        return appointments.contains(appointment);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Vangmay"},"content":"     * Returns true if an appointment with the same identity as {@code appointment} exists in the appointment book.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Vangmay"},"content":"    public boolean hasAppointment(AppointmentDescriptor appointmentDescriptor) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Vangmay"},"content":"        requireNonNull(appointmentDescriptor);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Vangmay"},"content":"        return appointments.contains(appointmentDescriptor);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jayjay19630"},"content":"     * Adds an appointment to the appointment book.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jayjay19630"},"content":"     * The appointment must not already exist in the appointment book.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"choiwab"},"content":"    public String addAppointment(Appointment appointment) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jayjay19630"},"content":"        appointments.add(appointment);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"choiwab"},"content":"        return appointment.toString();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Vangmay"},"content":"     * Adds an appointment to the appointment book.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Vangmay"},"content":"     * The appointment must not already exist in the appointment book.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Vangmay"},"content":"    public String addAppointment(AppointmentDescriptor appointmentDescriptor) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Vangmay"},"content":"        requireNonNull(appointmentDescriptor);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Vangmay"},"content":"        appointments.add(new Appointment(appointmentDescriptor));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Vangmay"},"content":"        return appointmentDescriptor.toString();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jayjay19630"},"content":"     * Replaces the given appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jayjay19630"},"content":"     * {@code target} must exist in the appointment book.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jayjay19630"},"content":"     * The appointment identity of {@code editedAppointment} must not be the same as another","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jayjay19630"},"content":"     * existing appointment in the appointment book.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jayjay19630"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jayjay19630"},"content":"        requireNonNull(editedAppointment);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jayjay19630"},"content":"        appointments.setAppointment(target, editedAppointment);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jayjay19630"},"content":"     * Removes {@code key} from this {@code AppointmentBook}.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jayjay19630"},"content":"     * {@code key} must exist in the appointment book.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jayjay19630"},"content":"    public void removeAppointment(Appointment key) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jayjay19630"},"content":"        appointments.remove(key);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jayjay19630"},"content":"    //// util methods","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jayjay19630"},"content":"    public String toString() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jayjay19630"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jayjay19630"},"content":"                .add(\"appointments\", appointments)","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jayjay19630"},"content":"                .toString();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jayjay19630"},"content":"    public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jayjay19630"},"content":"        return appointments.asUnmodifiableObservableList();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jayjay19630"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jayjay19630"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jayjay19630"},"content":"            return true;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jayjay19630"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jayjay19630"},"content":"        if (!(other instanceof AppointmentBook)) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jayjay19630"},"content":"            return false;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jayjay19630"},"content":"        AppointmentBook otherAppointmentBook \u003d (AppointmentBook) other;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jayjay19630"},"content":"        return appointments.equals(otherAppointmentBook.appointments);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jayjay19630"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jayjay19630"},"content":"        return appointments.hashCode();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jayjay19630"},"content":"}","lastModifiedDate":"2024-10-12","isFullCredit":false}],"authorContributionMap":{"Vangmay":19,"jayjay19630":130,"choiwab":2}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Vangmay"},"content":"import seedu.address.model.appointment.AppointmentDescriptor;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.PersonDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jayjay19630"},"content":"    Predicate\u003cAppointment\u003e PREDICATE_SHOW_ALL_APPOINTMENTS \u003d unused -\u003e true;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zaidansani"},"content":"    /**","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zaidansani"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zaidansani"},"content":"    boolean hasPerson(PersonDescriptor personDescriptor);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zaidansani"},"content":"    int addPerson(PersonDescriptor personDescriptor);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jayjay19630"},"content":"     * Replaces appointment book data with the data in {@code appointmentBook}.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jayjay19630"},"content":"    void setAppointmentBook(ReadOnlyAppointmentBook appointmentBook);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jayjay19630"},"content":"    /** Returns the AppointmentBook */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jayjay19630"},"content":"    ReadOnlyAppointmentBook getAppointmentBook();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jayjay19630"},"content":"     * Returns true if an appointment with the same identity as {@code appointment} exists in the appointment book.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Vangmay"},"content":"    boolean hasAppointment(AppointmentDescriptor appointmentDescriptor);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jayjay19630"},"content":"     * Deletes the given appointment.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jayjay19630"},"content":"     * The appointment must exist in the appointment book.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jayjay19630"},"content":"    void deleteAppointment(Appointment target);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jayjay19630"},"content":"     * Adds the given appointment.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jayjay19630"},"content":"     * {@code appointment} must not already exist in the appointment book.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Vangmay"},"content":"    void addAppointment(AppointmentDescriptor appointmentDescriptor);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jayjay19630"},"content":"     * Replaces the given appointment {@code target} with {@code editedAppointment}.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jayjay19630"},"content":"     * {@code target} must exist in the appointment book.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jayjay19630"},"content":"     * The appointment identity of {@code editedAppointment} must not be the same as","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jayjay19630"},"content":"     * another existing appointment in the appointment book.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jayjay19630"},"content":"    void setAppointment(Appointment target, Appointment editedAppointment);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jayjay19630"},"content":"    /** Returns an unmodifiable view of the filtered appointment list */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jayjay19630"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jayjay19630"},"content":"     * Updates the filter of the filtered appointment list to filter by the given {@code predicate}.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jayjay19630"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jayjay19630"},"content":"    void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25","isFullCredit":false}],"authorContributionMap":{"Vangmay":3,"jayjay19630":42,"zaidansani":7,"-":86}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Vangmay"},"content":"import seedu.address.model.appointment.AppointmentDescriptor;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.PersonDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jayjay19630"},"content":"    private final AppointmentBook appointmentBook;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jayjay19630"},"content":"    private final FilteredList\u003cAppointment\u003e filteredAppointments;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jayjay19630"},"content":"    public ModelManager(","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jayjay19630"},"content":"            ReadOnlyAddressBook addressBook,","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jayjay19630"},"content":"            ReadOnlyAppointmentBook appointmentBook,","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jayjay19630"},"content":"            ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rxchell"},"content":"        requireAllNonNull(addressBook, appointmentBook, userPrefs);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jayjay19630"},"content":"        logger.fine(\"Initializing with address book: \"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jayjay19630"},"content":"                + addressBook","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jayjay19630"},"content":"                + \", with appointment book: \"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jayjay19630"},"content":"                + appointmentBook","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jayjay19630"},"content":"                + \" and user prefs \"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jayjay19630"},"content":"                + userPrefs);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rxchell"},"content":"        this.appointmentBook \u003d new AppointmentBook(appointmentBook);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rxchell"},"content":"        filteredAppointments \u003d new FilteredList\u003c\u003e(this.appointmentBook.getAppointmentList());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jayjay19630"},"content":"        this(new AddressBook(), new AppointmentBook(), new UserPrefs());","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zaidansani"},"content":"    @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zaidansani"},"content":"    public boolean hasPerson(PersonDescriptor personDescriptor) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zaidansani"},"content":"        requireNonNull(personDescriptor);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zaidansani"},"content":"        return addressBook.hasPerson(personDescriptor);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zaidansani"},"content":"    public int addPerson(PersonDescriptor person) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zaidansani"},"content":"        int id \u003d addressBook.addPerson(person);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zaidansani"},"content":"        return id;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jayjay19630"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jayjay19630"},"content":"    public void setAppointmentBook(ReadOnlyAppointmentBook appointmentBook) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jayjay19630"},"content":"        this.appointmentBook.resetData(appointmentBook);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jayjay19630"},"content":"    public ReadOnlyAppointmentBook getAppointmentBook() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jayjay19630"},"content":"        return appointmentBook;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Vangmay"},"content":"    public boolean hasAppointment(AppointmentDescriptor appointment) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jayjay19630"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jayjay19630"},"content":"        return appointmentBook.hasAppointment(appointment);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jayjay19630"},"content":"    public void deleteAppointment(Appointment target) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jayjay19630"},"content":"        appointmentBook.removeAppointment(target);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Vangmay"},"content":"    public void addAppointment(AppointmentDescriptor appointment) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jayjay19630"},"content":"        appointmentBook.addAppointment(appointment);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jayjay19630"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jayjay19630"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jayjay19630"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jayjay19630"},"content":"        appointmentBook.setAppointment(target, editedAppointment);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jayjay19630"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Appointment List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jayjay19630"},"content":"     * Returns an unmodifiable view of the list of {@code Appointment} backed by the internal list of","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"jayjay19630"},"content":"     * {@code versionedAppointmentBook}","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"jayjay19630"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"jayjay19630"},"content":"        return filteredAppointments;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jayjay19630"},"content":"    public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jayjay19630"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jayjay19630"},"content":"        filteredAppointments.setPredicate(predicate);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"jayjay19630"},"content":"                \u0026\u0026 appointmentBook.equals(otherModelManager.appointmentBook)","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"jayjay19630"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"jayjay19630"},"content":"                \u0026\u0026 filteredAppointments.equals(otherModelManager.filteredAppointments);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"Vangmay":3,"jayjay19630":70,"rxchell":3,"zaidansani":10,"-":140}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zaidansani"},"content":"    /**","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zaidansani"},"content":"     * Returns the current counter","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zaidansani"},"content":"    int getCounter();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"zaidansani":4,"-":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyAppointmentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayjay19630"},"content":"package seedu.address.model;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":"/**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":" * Unmodifiable view of an appointment book","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":" */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":"public interface ReadOnlyAppointmentBook {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jayjay19630"},"content":"     * Returns an unmodifiable view of the appointments list.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jayjay19630"},"content":"     * This list will not contain any duplicate appointments.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jayjay19630"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jayjay19630"},"content":"}","lastModifiedDate":"2024-10-12","isFullCredit":false}],"authorContributionMap":{"jayjay19630":17}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"choiwab"},"content":"    private Path appointmentBookFilePath \u003d Paths.get(\"data\" , \"appointmentbook.json\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"choiwab"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"choiwab"},"content":"        return appointmentBookFilePath; }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"choiwab"},"content":"    public void setAppointmentBookFilePath(Path appointmentBookFilePath) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"choiwab"},"content":"        requireNonNull(appointmentBookFilePath);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"choiwab"},"content":"        this.appointmentBookFilePath \u003d appointmentBookFilePath;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"choiwab"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"choiwab"},"content":"                \u0026\u0026 appointmentBookFilePath.equals(otherUserPrefs.appointmentBookFilePath);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"choiwab"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, appointmentBookFilePath);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"choiwab"},"content":"        sb.append(\"\\nLocal address book data data file location : \" + addressBookFilePath);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"choiwab"},"content":"        sb.append(\"\\nLocal appointment book data file location : \" + appointmentBookFilePath);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"choiwab":15,"-":85}},{"path":"src/main/java/seedu/address/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayjay19630"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":"import java.util.Objects;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"/**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jayjay19630"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jayjay19630"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jayjay19630"},"content":" */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":"public class Appointment {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jayjay19630"},"content":"    // Identity fields","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jayjay19630"},"content":"    private final AppointmentType appointmentType;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jayjay19630"},"content":"    private final LocalDateTime appointmentDateTime;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jayjay19630"},"content":"    private final int personId;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jayjay19630"},"content":"    // Data fields","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jayjay19630"},"content":"    private final Sickness sickness;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jayjay19630"},"content":"    private final Medicine medicine;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jayjay19630"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jayjay19630"},"content":"    public Appointment(","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jayjay19630"},"content":"            AppointmentType appointmentType,","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jayjay19630"},"content":"            LocalDateTime appointmentDateTime,","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jayjay19630"},"content":"            int personId,","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jayjay19630"},"content":"            Sickness sickness,","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jayjay19630"},"content":"            Medicine medicine) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jayjay19630"},"content":"        requireAllNonNull(appointmentType, personId, sickness, medicine);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jayjay19630"},"content":"        this.appointmentType \u003d appointmentType;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jayjay19630"},"content":"        this.appointmentDateTime \u003d appointmentDateTime;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jayjay19630"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jayjay19630"},"content":"        this.sickness \u003d sickness;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jayjay19630"},"content":"        this.medicine \u003d medicine;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Vangmay"},"content":"     * Creates an appointment object using appointmentDescriptor.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Vangmay"},"content":"    public Appointment(AppointmentDescriptor appointmentDescriptor) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Vangmay"},"content":"        this.appointmentType \u003d appointmentDescriptor.getAppointmentType();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Vangmay"},"content":"        this.appointmentDateTime \u003d appointmentDescriptor.getAppointmentDateTime();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Vangmay"},"content":"        this.personId \u003d appointmentDescriptor.getPersonId();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Vangmay"},"content":"        this.sickness \u003d appointmentDescriptor.getSickness();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Vangmay"},"content":"        this.medicine \u003d appointmentDescriptor.getMedicine();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jayjay19630"},"content":"    public AppointmentType getAppointmentType() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jayjay19630"},"content":"        return appointmentType;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jayjay19630"},"content":"    public int getPersonId() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jayjay19630"},"content":"        return personId;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jayjay19630"},"content":"    public Sickness getSickness() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jayjay19630"},"content":"        return sickness;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jayjay19630"},"content":"    public LocalDateTime getAppointmentDateTime() {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jayjay19630"},"content":"        return appointmentDateTime;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jayjay19630"},"content":"    public Medicine getMedicine() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jayjay19630"},"content":"        return medicine;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jayjay19630"},"content":"     * Returns true if both appointments have the same name.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jayjay19630"},"content":"     * This defines a weaker notion of equality between two appointments.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jayjay19630"},"content":"    public boolean isSameAppointment(Appointment otherAppointment) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jayjay19630"},"content":"        if (otherAppointment \u003d\u003d this) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jayjay19630"},"content":"            return true;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jayjay19630"},"content":"        return otherAppointment !\u003d null","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jayjay19630"},"content":"                \u0026\u0026 otherAppointment.getAppointmentType().equals(getAppointmentType())","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jayjay19630"},"content":"                \u0026\u0026 otherAppointment.getPersonId() \u003d\u003d getPersonId()","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jayjay19630"},"content":"                \u0026\u0026 otherAppointment.getAppointmentDateTime() \u003d\u003d getAppointmentDateTime();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jayjay19630"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jayjay19630"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jayjay19630"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jayjay19630"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jayjay19630"},"content":"            return true;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jayjay19630"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jayjay19630"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jayjay19630"},"content":"            return false;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jayjay19630"},"content":"        Appointment otherAppointment \u003d (Appointment) other;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jayjay19630"},"content":"        return appointmentType.equals(otherAppointment.appointmentType)","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jayjay19630"},"content":"                \u0026\u0026 appointmentDateTime \u003d\u003d otherAppointment.appointmentDateTime","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jayjay19630"},"content":"                \u0026\u0026 personId \u003d\u003d otherAppointment.personId","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jayjay19630"},"content":"                \u0026\u0026 medicine.equals(otherAppointment.medicine)","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jayjay19630"},"content":"                \u0026\u0026 sickness.equals(otherAppointment.sickness);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jayjay19630"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jayjay19630"},"content":"        return Objects.hash(appointmentType, appointmentDateTime, personId, medicine, sickness);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jayjay19630"},"content":"    public String toString() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jayjay19630"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jayjay19630"},"content":"                .add(\"appointmentType\", appointmentType)","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jayjay19630"},"content":"                .add(\"appointmentDateTime\", appointmentDateTime)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jayjay19630"},"content":"                .add(\"personId\", personId)","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jayjay19630"},"content":"                .add(\"medicine\", medicine)","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jayjay19630"},"content":"                .add(\"sickness\", sickness)","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jayjay19630"},"content":"                .toString();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jayjay19630"},"content":"}","lastModifiedDate":"2024-10-12","isFullCredit":false}],"authorContributionMap":{"Vangmay":11,"jayjay19630":117}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Vangmay"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Vangmay"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Vangmay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Vangmay"},"content":"import java.util.Objects;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Vangmay"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Vangmay"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Vangmay"},"content":" * Represents an appointment\u0027s details in the address book.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Vangmay"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Vangmay"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Vangmay"},"content":"public class AppointmentDescriptor {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Vangmay"},"content":"    private final AppointmentType appointmentType;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Vangmay"},"content":"    private final LocalDateTime appointmentDateTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Vangmay"},"content":"    private final int personId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Vangmay"},"content":"    // Data fields","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Vangmay"},"content":"    private final Sickness sickness;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Vangmay"},"content":"    private final Medicine medicine;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Vangmay"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Vangmay"},"content":"    public AppointmentDescriptor(","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Vangmay"},"content":"            AppointmentType appointmentType,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Vangmay"},"content":"            LocalDateTime appointmentDateTime,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Vangmay"},"content":"            int personId,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Vangmay"},"content":"            Sickness sickness,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Vangmay"},"content":"            Medicine medicine) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Vangmay"},"content":"        requireAllNonNull(appointmentType, personId, sickness, medicine);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Vangmay"},"content":"        this.appointmentType \u003d appointmentType;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Vangmay"},"content":"        this.appointmentDateTime \u003d appointmentDateTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Vangmay"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Vangmay"},"content":"        this.sickness \u003d sickness;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Vangmay"},"content":"        this.medicine \u003d medicine;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Vangmay"},"content":"    public int getPersonId() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Vangmay"},"content":"        return personId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Vangmay"},"content":"    public AppointmentType getAppointmentType() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Vangmay"},"content":"        return this.appointmentType;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Vangmay"},"content":"    public LocalDateTime getAppointmentDateTime() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Vangmay"},"content":"        return this.appointmentDateTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Vangmay"},"content":"    public Sickness getSickness() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Vangmay"},"content":"        return this.sickness;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Vangmay"},"content":"    public Medicine getMedicine() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Vangmay"},"content":"        return this.medicine;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Vangmay"},"content":"     * Returns true if both appointments have the same personId and appointmentDateTime.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Vangmay"},"content":"     * This defines a weaker notion of equality between two appointments.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Vangmay"},"content":"    public boolean isSameAppointment(AppointmentDescriptor otherAppointment) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Vangmay"},"content":"        if (otherAppointment \u003d\u003d this) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Vangmay"},"content":"            return true;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Vangmay"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Vangmay"},"content":"        return otherAppointment !\u003d null","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Vangmay"},"content":"                \u0026\u0026 otherAppointment.getPersonId() \u003d\u003d getPersonId()","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Vangmay"},"content":"                \u0026\u0026 otherAppointment.getAppointmentDateTime().equals(getAppointmentDateTime());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Vangmay"},"content":"     * Returns true if both appointments have the same name.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Vangmay"},"content":"     * This defines a weaker notion of equality between two appointments.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Vangmay"},"content":"    public boolean isSameAppointment(Appointment otherAppointment) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Vangmay"},"content":"        return otherAppointment !\u003d null","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Vangmay"},"content":"                \u0026\u0026 otherAppointment.getPersonId() \u003d\u003d getPersonId()","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Vangmay"},"content":"                \u0026\u0026 otherAppointment.getAppointmentDateTime().equals(getAppointmentDateTime());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Vangmay"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Vangmay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Vangmay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Vangmay"},"content":"            return true;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Vangmay"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Vangmay"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Vangmay"},"content":"        if (!(other instanceof AppointmentDescriptor)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Vangmay"},"content":"            return false;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Vangmay"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Vangmay"},"content":"        AppointmentDescriptor otherAppointment \u003d (AppointmentDescriptor) other;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Vangmay"},"content":"        return appointmentType.equals(otherAppointment.getAppointmentType())","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Vangmay"},"content":"                \u0026\u0026 appointmentDateTime.equals(otherAppointment.getAppointmentDateTime())","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Vangmay"},"content":"                \u0026\u0026 personId \u003d\u003d otherAppointment.getPersonId()","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Vangmay"},"content":"                \u0026\u0026 sickness.equals(otherAppointment.getSickness())","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Vangmay"},"content":"                \u0026\u0026 medicine.equals(otherAppointment.getMedicine());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Vangmay"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Vangmay"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Vangmay"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Vangmay"},"content":"        return Objects.hash(appointmentType, appointmentDateTime, personId, sickness, medicine);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Vangmay"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Vangmay"},"content":"    public String toString() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Vangmay"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Vangmay"},"content":"                .add(\"Appointment Type\", appointmentType)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Vangmay"},"content":"                .add(\"Appointment Date-Time\", appointmentDateTime)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Vangmay"},"content":"                .add(\"Person Id\", personId)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Vangmay"},"content":"                .add(\"Sickness\", sickness)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Vangmay"},"content":"                .add(\"medicine\", medicine)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Vangmay"},"content":"                .toString();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Vangmay"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"Vangmay":119}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayjay19630"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":"/**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":" * Represents the type of an Appointment in the appointment book.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAppointmentType(String)}","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":" */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"public class AppointmentType {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jayjay19630"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jayjay19630"},"content":"            \"Appointment types can take any values, and it should not be blank\";","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jayjay19630"},"content":"    /*","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jayjay19630"},"content":"     * The first character of the appointment type must not be a whitespace,","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jayjay19630"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jayjay19630"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jayjay19630"},"content":"    public final String value;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jayjay19630"},"content":"     * Constructs an {@code AppointmentType}.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jayjay19630"},"content":"     *","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jayjay19630"},"content":"     * @param appointmentType A valid appointmentType.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jayjay19630"},"content":"    public AppointmentType(String appointmentType) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jayjay19630"},"content":"        requireNonNull(appointmentType);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jayjay19630"},"content":"        checkArgument(isValidAppointmentType(appointmentType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jayjay19630"},"content":"        value \u003d appointmentType;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jayjay19630"},"content":"     * Returns true if a given string is a valid appointment type.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jayjay19630"},"content":"    public static boolean isValidAppointmentType(String test) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jayjay19630"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jayjay19630"},"content":"    public String toString() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jayjay19630"},"content":"        return value;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jayjay19630"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jayjay19630"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jayjay19630"},"content":"            return true;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jayjay19630"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jayjay19630"},"content":"        if (!(other instanceof AppointmentType)) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jayjay19630"},"content":"            return false;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jayjay19630"},"content":"        AppointmentType otherAppointmentType \u003d (AppointmentType) other;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jayjay19630"},"content":"        return value.equals(otherAppointmentType.value);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jayjay19630"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jayjay19630"},"content":"        return value.hashCode();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jayjay19630"},"content":"}","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false}],"authorContributionMap":{"jayjay19630":67}},{"path":"src/main/java/seedu/address/model/appointment/Medicine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayjay19630"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":"/**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":" * Represents an Appointment-related medicine in the appointment book.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMedicine(String)}","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":" */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"public class Medicine {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jayjay19630"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Medicines can take any values, and it should not be blank\";","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":"    /*","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jayjay19630"},"content":"     * The first character of the medicine must not be a whitespace,","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jayjay19630"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jayjay19630"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jayjay19630"},"content":"    public final String value;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jayjay19630"},"content":"     * Constructs an {@code Medicine}.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jayjay19630"},"content":"     *","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jayjay19630"},"content":"     * @param medicine A valid medicine.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jayjay19630"},"content":"    public Medicine(String medicine) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jayjay19630"},"content":"        requireNonNull(medicine);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jayjay19630"},"content":"        checkArgument(isValidMedicine(medicine), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jayjay19630"},"content":"        value \u003d medicine;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jayjay19630"},"content":"     * Returns true if a given string is a valid sickness.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jayjay19630"},"content":"    public static boolean isValidMedicine(String test) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jayjay19630"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jayjay19630"},"content":"    public String toString() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jayjay19630"},"content":"        return value;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jayjay19630"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jayjay19630"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jayjay19630"},"content":"            return true;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jayjay19630"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jayjay19630"},"content":"        if (!(other instanceof Medicine)) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jayjay19630"},"content":"            return false;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jayjay19630"},"content":"        Medicine otherMedicine \u003d (Medicine) other;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jayjay19630"},"content":"        return value.equals(otherMedicine.value);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jayjay19630"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jayjay19630"},"content":"        return value.hashCode();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jayjay19630"},"content":"}","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false}],"authorContributionMap":{"jayjay19630":66}},{"path":"src/main/java/seedu/address/model/appointment/Sickness.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayjay19630"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":"/**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":" * Represents an Appointment-related sickness in the appointment book.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSickness(String)}","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":" */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"public class Sickness {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jayjay19630"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Sicknesses can take any values, and it should not be blank\";","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":"    /*","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jayjay19630"},"content":"     * The first character of the sickness must not be a whitespace,","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jayjay19630"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jayjay19630"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jayjay19630"},"content":"    public final String value;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jayjay19630"},"content":"     * Constructs an {@code Sickness}.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jayjay19630"},"content":"     *","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jayjay19630"},"content":"     * @param sickness A valid sickness.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jayjay19630"},"content":"    public Sickness(String sickness) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jayjay19630"},"content":"        requireNonNull(sickness);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jayjay19630"},"content":"        checkArgument(isValidSickness(sickness), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jayjay19630"},"content":"        value \u003d sickness;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jayjay19630"},"content":"     * Returns true if a given string is a valid sickness.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jayjay19630"},"content":"    public static boolean isValidSickness(String test) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jayjay19630"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jayjay19630"},"content":"    public String toString() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jayjay19630"},"content":"        return value;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jayjay19630"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jayjay19630"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jayjay19630"},"content":"            return true;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jayjay19630"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jayjay19630"},"content":"        if (!(other instanceof Sickness)) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jayjay19630"},"content":"            return false;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jayjay19630"},"content":"        Sickness otherSickness \u003d (Sickness) other;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jayjay19630"},"content":"        return value.equals(otherSickness.value);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jayjay19630"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jayjay19630"},"content":"        return value.hashCode();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jayjay19630"},"content":"}","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false}],"authorContributionMap":{"jayjay19630":66}},{"path":"src/main/java/seedu/address/model/appointment/UniqueAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayjay19630"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":"import java.util.List;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.appointment.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jayjay19630"},"content":"/**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jayjay19630"},"content":" * A list of appointments that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jayjay19630"},"content":" * An appointment is considered unique by comparing using {@code Appointment#isSameAppointment(Appointment)}.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jayjay19630"},"content":" * As such, adding and updating of appointments uses Appointment#isSameAppointment(Appointment) for equality so as","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jayjay19630"},"content":" * to ensure that the appointment being added or updated isunique in terms of identity in the UniqueAppointmentList.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jayjay19630"},"content":" * However, the removal of an appointment uses Appointment#equals(Object) so as to ensure that the appointment with","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jayjay19630"},"content":" * exactly the same fields will be removed.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jayjay19630"},"content":" *","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jayjay19630"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jayjay19630"},"content":" *","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jayjay19630"},"content":" * @see Appointment#isSameAppointment(Appointment)","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jayjay19630"},"content":" */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jayjay19630"},"content":"public class UniqueAppointmentList implements Iterable\u003cAppointment\u003e {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jayjay19630"},"content":"    private final ObservableList\u003cAppointment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jayjay19630"},"content":"    private final ObservableList\u003cAppointment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jayjay19630"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jayjay19630"},"content":"     * Returns true if the list contains an equivalent appointment as the given argument.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jayjay19630"},"content":"    public boolean contains(Appointment toCheck) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jayjay19630"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jayjay19630"},"content":"        return internalList.stream().anyMatch(toCheck::isSameAppointment);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Vangmay"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Vangmay"},"content":"     * Returns true if the list contains an equivalent appointment as the given argument.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Vangmay"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Vangmay"},"content":"    public boolean contains(AppointmentDescriptor toCheck) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Vangmay"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Vangmay"},"content":"        return internalList.stream().anyMatch(toCheck::isSameAppointment);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jayjay19630"},"content":"     * Adds an appointment to the list.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jayjay19630"},"content":"     * The appointment must not already exist in the list.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jayjay19630"},"content":"    public void add(Appointment toAdd) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jayjay19630"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jayjay19630"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jayjay19630"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jayjay19630"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jayjay19630"},"content":"     * Replaces the appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jayjay19630"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jayjay19630"},"content":"     * The appointmnet identity of {@code editedAppointment} must not be the same as another","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jayjay19630"},"content":"     * existing appointment in the list.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jayjay19630"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jayjay19630"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jayjay19630"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jayjay19630"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jayjay19630"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jayjay19630"},"content":"        if (!target.isSameAppointment(editedAppointment) \u0026\u0026 contains(editedAppointment)) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jayjay19630"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jayjay19630"},"content":"        internalList.set(index, editedAppointment);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jayjay19630"},"content":"     * Removes the equivalent appointment from the list.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jayjay19630"},"content":"     * The appointment must exist in the list.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jayjay19630"},"content":"    public void remove(Appointment toRemove) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jayjay19630"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jayjay19630"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jayjay19630"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jayjay19630"},"content":"    public void setAppointments(UniqueAppointmentList replacement) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jayjay19630"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jayjay19630"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jayjay19630"},"content":"     * Replaces the contents of this list with {@code appointments}.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jayjay19630"},"content":"     * {@code appointments} must not contain duplicate appointments.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jayjay19630"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jayjay19630"},"content":"        requireAllNonNull(appointments);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jayjay19630"},"content":"        if (!appointmentsAreUnique(appointments)) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jayjay19630"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jayjay19630"},"content":"        internalList.setAll(appointments);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jayjay19630"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jayjay19630"},"content":"    public ObservableList\u003cAppointment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jayjay19630"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jayjay19630"},"content":"    public Iterator\u003cAppointment\u003e iterator() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jayjay19630"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jayjay19630"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jayjay19630"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jayjay19630"},"content":"            return true;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jayjay19630"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jayjay19630"},"content":"        if (!(other instanceof UniqueAppointmentList)) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jayjay19630"},"content":"            return false;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jayjay19630"},"content":"        UniqueAppointmentList otherUniqueAppointmentList \u003d (UniqueAppointmentList) other;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jayjay19630"},"content":"        return internalList.equals(otherUniqueAppointmentList.internalList);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jayjay19630"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jayjay19630"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jayjay19630"},"content":"    @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jayjay19630"},"content":"    public String toString() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jayjay19630"},"content":"        return internalList.toString();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jayjay19630"},"content":"     * Returns true if {@code appointments} contains only unique appointments.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jayjay19630"},"content":"    private boolean appointmentsAreUnique(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jayjay19630"},"content":"        for (int i \u003d 0; i \u003c appointments.size() - 1; i++) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jayjay19630"},"content":"            for (int j \u003d i + 1; j \u003c appointments.size(); j++) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jayjay19630"},"content":"                if (appointments.get(i).isSameAppointment(appointments.get(j))) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jayjay19630"},"content":"                    return false;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jayjay19630"},"content":"                }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jayjay19630"},"content":"            }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jayjay19630"},"content":"        return true;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jayjay19630"},"content":"}","lastModifiedDate":"2024-10-12","isFullCredit":false}],"authorContributionMap":{"Vangmay":8,"jayjay19630":153}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/AppointmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayjay19630"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"/**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":" * Signals that the operation is unable to find the specified appointment.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":" */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Vangmay"},"content":"public class AppointmentNotFoundException extends RuntimeException {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Vangmay"},"content":"    public AppointmentNotFoundException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Vangmay"},"content":"        super(\"No such appointment found\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Vangmay"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"Vangmay":5,"jayjay19630":5}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/DuplicateAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayjay19630"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"/**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":" * Signals that the operation will result in duplicate Appointments","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":" * (Appointments are considered duplicates if they have the same identity).","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":" */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":"public class DuplicateAppointmentException extends RuntimeException {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":"    public DuplicateAppointmentException() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":"        super(\"Operation would result in duplicate appointments\");","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jayjay19630"},"content":"}","lastModifiedDate":"2024-10-12","isFullCredit":false}],"authorContributionMap":{"jayjay19630":11}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rxchell"},"content":"    private final int personId;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zaidansani"},"content":"    private final PersonDescriptor personDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zaidansani"},"content":"        this.personDescriptor \u003d new PersonDescriptor(","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zaidansani"},"content":"                name, phone, email, address, tags","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zaidansani"},"content":"        );","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rxchell"},"content":"        // Increment the static counter and assign a unique ID to the person","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zaidansani"},"content":"        this.personId \u003d 0;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zaidansani"},"content":"    /**","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zaidansani"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zaidansani"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, int personId) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zaidansani"},"content":"        requireAllNonNull(name, phone, email, address, tags, personId);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zaidansani"},"content":"        this.personDescriptor \u003d new PersonDescriptor(","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zaidansani"},"content":"                name, phone, email, address, tags","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zaidansani"},"content":"        );","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zaidansani"},"content":"        // Increment the static counter and assign a unique ID to the person","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zaidansani"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zaidansani"},"content":"    /**","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zaidansani"},"content":"     * Builds a person given a personId and a personDescriptor.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zaidansani"},"content":"     * @param personId","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zaidansani"},"content":"     * @param personDescriptor","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zaidansani"},"content":"    public Person(int personId, PersonDescriptor personDescriptor) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zaidansani"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zaidansani"},"content":"        this.personDescriptor \u003d personDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zaidansani"},"content":"    public PersonDescriptor getPersonDescriptor() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zaidansani"},"content":"        return personDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rxchell"},"content":"    public int getPersonId() {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rxchell"},"content":"        return personId;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zaidansani"},"content":"        return personDescriptor.getName();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zaidansani"},"content":"        return personDescriptor.getPhone();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zaidansani"},"content":"        return personDescriptor.getEmail();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zaidansani"},"content":"        return personDescriptor.getAddress();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zaidansani"},"content":"        return personDescriptor.getTags();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zaidansani"},"content":"        return personDescriptor.isSamePerson(otherPerson.personDescriptor);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zaidansani"},"content":"    /**","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zaidansani"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zaidansani"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zaidansani"},"content":"    public boolean isSamePerson(PersonDescriptor otherPerson) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zaidansani"},"content":"        return personDescriptor.isSamePerson(otherPerson);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zaidansani"},"content":"        if (!(other instanceof Person otherPerson)) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zaidansani"},"content":"        return personDescriptor.equals(otherPerson.personDescriptor);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zaidansani"},"content":"        return Objects.hash(personId, personDescriptor);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zaidansani"},"content":"        // return personDescriptor.toString();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zaidansani"},"content":"                .add(\"personId\", personId)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zaidansani"},"content":"                .add(\"name\", getName())","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zaidansani"},"content":"                .add(\"phone\", getPhone())","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zaidansani"},"content":"                .add(\"email\", getEmail())","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zaidansani"},"content":"                .add(\"address\", getAddress())","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zaidansani"},"content":"                .add(\"tags\", getTags())","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"rxchell":7,"zaidansani":56,"-":81}},{"path":"src/main/java/seedu/address/model/person/PersonDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zaidansani"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zaidansani"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zaidansani"},"content":"import java.util.Collections;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zaidansani"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zaidansani"},"content":"import java.util.Objects;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zaidansani"},"content":"import java.util.Set;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zaidansani"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zaidansani"},"content":"/**","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zaidansani"},"content":" * Represents person\u0027s details in the address book.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zaidansani"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zaidansani"},"content":" */","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zaidansani"},"content":"public class PersonDescriptor {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zaidansani"},"content":"    // Identity fields","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zaidansani"},"content":"    private final Name name;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zaidansani"},"content":"    private final Phone phone;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zaidansani"},"content":"    private final Email email;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zaidansani"},"content":"    // Data fields","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zaidansani"},"content":"    private final Address address;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zaidansani"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zaidansani"},"content":"    /**","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zaidansani"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zaidansani"},"content":"    public PersonDescriptor(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zaidansani"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zaidansani"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zaidansani"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zaidansani"},"content":"        this.email \u003d email;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zaidansani"},"content":"        this.address \u003d address;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zaidansani"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zaidansani"},"content":"    public Name getName() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zaidansani"},"content":"        return name;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zaidansani"},"content":"    public Phone getPhone() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zaidansani"},"content":"        return phone;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zaidansani"},"content":"    public Email getEmail() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zaidansani"},"content":"        return email;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zaidansani"},"content":"    public Address getAddress() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zaidansani"},"content":"        return address;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zaidansani"},"content":"    /**","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zaidansani"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zaidansani"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zaidansani"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zaidansani"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zaidansani"},"content":"    /**","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zaidansani"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zaidansani"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zaidansani"},"content":"    public boolean isSamePerson(PersonDescriptor otherPerson) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zaidansani"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zaidansani"},"content":"            return true;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zaidansani"},"content":"        }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zaidansani"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zaidansani"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zaidansani"},"content":"    /**","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zaidansani"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zaidansani"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zaidansani"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zaidansani"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zaidansani"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zaidansani"},"content":"    /**","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zaidansani"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zaidansani"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zaidansani"},"content":"    @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zaidansani"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zaidansani"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zaidansani"},"content":"            return true;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zaidansani"},"content":"        }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zaidansani"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zaidansani"},"content":"        if (!(other instanceof PersonDescriptor)) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zaidansani"},"content":"            return false;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zaidansani"},"content":"        }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zaidansani"},"content":"        PersonDescriptor otherPerson \u003d (PersonDescriptor) other;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zaidansani"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zaidansani"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zaidansani"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zaidansani"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zaidansani"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zaidansani"},"content":"    @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zaidansani"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zaidansani"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zaidansani"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zaidansani"},"content":"    @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zaidansani"},"content":"    public String toString() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zaidansani"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zaidansani"},"content":"                .add(\"name\", name)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zaidansani"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zaidansani"},"content":"                .add(\"email\", email)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zaidansani"},"content":"                .add(\"address\", address)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zaidansani"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zaidansani"},"content":"                .toString();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zaidansani"},"content":"}","lastModifiedDate":"2024-10-14","isFullCredit":false}],"authorContributionMap":{"zaidansani":126}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zaidansani"},"content":"    /**","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zaidansani"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zaidansani"},"content":"    public boolean contains(PersonDescriptor toCheck) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zaidansani"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zaidansani"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"zaidansani":8,"-":150}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"choiwab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zaidansani"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zaidansani"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.appointment.AppointmentType;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.appointment.Medicine;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.appointment.Sickness;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.PersonDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zaidansani"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(Model.class);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zaidansani"},"content":"    public static PersonDescriptor[] getSamplePersons() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zaidansani"},"content":"        return new PersonDescriptor[]{","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zaidansani"},"content":"            new PersonDescriptor(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zaidansani"},"content":"            new PersonDescriptor(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zaidansani"},"content":"            new PersonDescriptor(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zaidansani"},"content":"                new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zaidansani"},"content":"            new PersonDescriptor(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zaidansani"},"content":"            new PersonDescriptor(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zaidansani"},"content":"            new PersonDescriptor(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"choiwab"},"content":"    public static Appointment[] getSampleAppointments() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"choiwab"},"content":"        return new Appointment[]{","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"choiwab"},"content":"            new Appointment(new AppointmentType(\"Consultation\"), LocalDateTime.of(2024,","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"choiwab"},"content":"                    10, 20, 9, 30), 1, new Sickness(\"Flu\"),","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"choiwab"},"content":"                    new Medicine(\"Antiviral\")),","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"choiwab"},"content":"            new Appointment(new AppointmentType(\"Follow-up\"), LocalDateTime.of(2024,","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"choiwab"},"content":"                    10, 22, 14, 0), 2, new Sickness(\"Diabetes\"),","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"choiwab"},"content":"                    new Medicine(\"Insulin\")),","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"choiwab"},"content":"            new Appointment(new AppointmentType(\"Emergency\"), LocalDateTime.of(2024,","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"choiwab"},"content":"                    10, 23, 18, 45), 3, new Sickness(\"Asthma\"),","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"choiwab"},"content":"                    new Medicine(\"Inhaler\")),","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"choiwab"},"content":"            new Appointment(new AppointmentType(\"Check-up\"), LocalDateTime.of(2024,","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"choiwab"},"content":"                    10, 25, 11, 15), 4, new Sickness(\"Hypertension\"),","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"choiwab"},"content":"                    new Medicine(\"Beta-blocker\")),","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"choiwab"},"content":"            new Appointment(new AppointmentType(\"Consultation\"), LocalDateTime.of(2024,","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"choiwab"},"content":"                    10, 28, 16, 30), 5, new Sickness(\"Migraine\"),","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"choiwab"},"content":"                    new Medicine(\"Pain reliever\")),","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"choiwab"},"content":"            new Appointment(new AppointmentType(\"Vaccination\"), LocalDateTime.of(2024,","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"choiwab"},"content":"                    11, 1, 10, 0), 6, new Sickness(\"Preventative Care\"),","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"choiwab"},"content":"                    new Medicine(\"Vaccine\"))","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"choiwab"},"content":"        };","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zaidansani"},"content":"        for (PersonDescriptor samplePerson : getSamplePersons()) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zaidansani"},"content":"            int id \u003d sampleAb.addPerson(samplePerson);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zaidansani"},"content":"            logger.finer(\"Added: \" + id);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"choiwab"},"content":"    public static ReadOnlyAppointmentBook getSampleAppointmentBook() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"choiwab"},"content":"        AppointmentBook sampleAppb \u003d new AppointmentBook();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"choiwab"},"content":"        for (Appointment sampleAppointment : getSampleAppointments()) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"choiwab"},"content":"            String app \u003d sampleAppb.addAppointment(sampleAppointment);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"choiwab"},"content":"            logger.finer(\"Added: \" + app);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"choiwab"},"content":"        return sampleAppb;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20","isFullCredit":false}],"authorContributionMap":{"choiwab":41,"zaidansani":19,"-":48}},{"path":"src/main/java/seedu/address/storage/AppointmentBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choiwab"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"choiwab"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"choiwab"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"choiwab"},"content":"import java.util.Optional;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"choiwab"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"choiwab"},"content":"/**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"choiwab"},"content":" * Represents a storage for {@link seedu.address.model.appointment.Appointment}.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"choiwab"},"content":" */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"choiwab"},"content":"public interface AppointmentBookStorage {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"choiwab"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"choiwab"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"choiwab"},"content":"     * Returns Appointment data as a {@link ReadOnlyAppointmentBook}.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"choiwab"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"choiwab"},"content":"     *","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"choiwab"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"choiwab"},"content":"    Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataLoadingException;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"choiwab"},"content":"     * @see #getAppointmentBookFilePath()","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"choiwab"},"content":"    Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"choiwab"},"content":"     * Saves the given {@link ReadOnlyAppointmentBook} to the storage.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"choiwab"},"content":"     * @param appointmentBook cannot be null.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"choiwab"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"choiwab"},"content":"    void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"choiwab"},"content":"     * @see #saveAppointmentBook(ReadOnlyAppointmentBook)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"choiwab"},"content":"    void saveAppointmentBook(ReadOnlyAppointmentBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"choiwab"},"content":"}","lastModifiedDate":"2024-10-13","isFullCredit":false}],"authorContributionMap":{"choiwab":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choiwab"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"choiwab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"choiwab"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"choiwab"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"choiwab"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"choiwab"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"choiwab"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.appointment.AppointmentType;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.appointment.Medicine;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.appointment.Sickness;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"choiwab"},"content":"/**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"choiwab"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"choiwab"},"content":" */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"choiwab"},"content":"public class JsonAdaptedAppointment {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"choiwab"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Appointment\u0027s %s field is missing!\";","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"choiwab"},"content":"    public static final String INTEGER_CHECK_MESSAGE_FORMAT \u003d \"Person ID must be a positive integer.\";","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"choiwab"},"content":"    public static final String DATE_TIME_CONSTRAINTS \u003d","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"choiwab"},"content":"            \"Appointment DateTime must be in the format yyyy-MM-dd\u0027T\u0027HH:mm:ss\";","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"choiwab"},"content":"    private final String appointmentType;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"choiwab"},"content":"    private final String appointmentDateTime;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"choiwab"},"content":"    private final String personId;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"choiwab"},"content":"    private final String sickness;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"choiwab"},"content":"    private final String medicine;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"choiwab"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with the given person details.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"choiwab"},"content":"    @JsonCreator","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"choiwab"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"appointmentType\") String appointmentType,","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"choiwab"},"content":"                                  @JsonProperty(\"appointmentDateTime\") String appointmentDateTime,","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"choiwab"},"content":"                             @JsonProperty(\"personId\") String personId, @JsonProperty(\"sickness\") String sickness,","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"choiwab"},"content":"                                  @JsonProperty(\"medicine\") String medicine) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"choiwab"},"content":"        this.appointmentType \u003d appointmentType;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"choiwab"},"content":"        this.appointmentDateTime \u003d appointmentDateTime;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"choiwab"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"choiwab"},"content":"        this.sickness \u003d sickness;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"choiwab"},"content":"        this.medicine \u003d medicine;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"choiwab"},"content":"     * Converts a given {@code Appointment} into this class for Jackson use.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"choiwab"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"choiwab"},"content":"        appointmentType \u003d source.getAppointmentType().value;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"choiwab"},"content":"        appointmentDateTime \u003d source.getAppointmentDateTime().toString();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"choiwab"},"content":"        personId \u003d String.valueOf(source.getPersonId());","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"choiwab"},"content":"        sickness \u003d source.getSickness().value;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"choiwab"},"content":"        medicine \u003d source.getMedicine().value;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"choiwab"},"content":"     * Checks if a given string is a positive int value","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"choiwab"},"content":"    public static boolean isPositiveInteger(String str) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"choiwab"},"content":"        try {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"choiwab"},"content":"            int number \u003d Integer.parseInt(str);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"choiwab"},"content":"            return number \u003e\u003d 0;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"choiwab"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"choiwab"},"content":"            return false;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"choiwab"},"content":"     * Validates and parse the date-time","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"choiwab"},"content":"    public static LocalDateTime parseDateTime(String dateTimeStr) throws IllegalValueException {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"choiwab"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"choiwab"},"content":"        try {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"choiwab"},"content":"            return LocalDateTime.parse(dateTimeStr, formatter);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"choiwab"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"choiwab"},"content":"            throw new IllegalValueException(DATE_TIME_CONSTRAINTS);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"choiwab"},"content":"     * Converts this Jackson-friendly adapted Appointment object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"choiwab"},"content":"     *","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"choiwab"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"choiwab"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"choiwab"},"content":"        if (appointmentType \u003d\u003d null) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"choiwab"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"choiwab"},"content":"                    AppointmentType.class.getSimpleName()));","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"choiwab"},"content":"        if (!AppointmentType.isValidAppointmentType(appointmentType)) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"choiwab"},"content":"            throw new IllegalValueException(AppointmentType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"choiwab"},"content":"        final AppointmentType modelAppointmentType \u003d new AppointmentType(appointmentType);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"choiwab"},"content":"        if (appointmentDateTime \u003d\u003d null) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"choiwab"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"choiwab"},"content":"                    LocalDateTime.class.getSimpleName()));","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"choiwab"},"content":"        final LocalDateTime modelAppointmentDateTime \u003d parseDateTime(appointmentDateTime);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"choiwab"},"content":"        if (personId \u003d\u003d null) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"choiwab"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"choiwab"},"content":"                    Integer.class.getSimpleName()));","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"choiwab"},"content":"        if (!isPositiveInteger(personId)) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"choiwab"},"content":"            throw new IllegalValueException(INTEGER_CHECK_MESSAGE_FORMAT);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"choiwab"},"content":"        final int modelPersonId \u003d Integer.parseInt(personId);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"choiwab"},"content":"        if (sickness \u003d\u003d null) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"choiwab"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"choiwab"},"content":"                    Sickness.class.getSimpleName()));","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"choiwab"},"content":"        if (!Sickness.isValidSickness(sickness)) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"choiwab"},"content":"            throw new IllegalValueException(Sickness.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"choiwab"},"content":"        final Sickness modelSickness \u003d new Sickness(sickness);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"choiwab"},"content":"        if (medicine \u003d\u003d null) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"choiwab"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"choiwab"},"content":"                    Medicine.class.getSimpleName()));","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"choiwab"},"content":"        if (!Medicine.isValidMedicine(medicine)) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"choiwab"},"content":"            throw new IllegalValueException(Sickness.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"choiwab"},"content":"        final Medicine modelMedicine \u003d new Medicine(medicine);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"choiwab"},"content":"        return new Appointment(modelAppointmentType, modelAppointmentDateTime, modelPersonId,","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"choiwab"},"content":"                modelSickness, modelMedicine);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"choiwab"},"content":"}","lastModifiedDate":"2024-10-13","isFullCredit":false}],"authorContributionMap":{"choiwab":132}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Vangmay"},"content":" * Json-friendly version of {@link Person}.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zaidansani"},"content":"    private final int personId;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zaidansani"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"personId\") int personId,","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zaidansani"},"content":"                             @JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"choiwab"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Vangmay"},"content":"     * Converts a given {@code Person} into this class for Json use.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zaidansani"},"content":"        personId \u003d source.getPersonId();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"choiwab"},"content":"     * Checks if a given string is a positive int value","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"choiwab"},"content":"    public static boolean isPositiveInteger(String str) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"choiwab"},"content":"        try {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"choiwab"},"content":"            int number \u003d Integer.parseInt(str);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"choiwab"},"content":"            return number \u003e\u003d 0;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"choiwab"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"choiwab"},"content":"            return false;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Vangmay"},"content":"     * Converts this Json-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zaidansani"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, personId);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"Vangmay":3,"choiwab":11,"zaidansani":6,"-":101}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Vangmay"},"content":"     * Converts a given {@code Tag} into this class for Json use.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"Vangmay":1,"-":47}},{"path":"src/main/java/seedu/address/storage/JsonAppointmentBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choiwab"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"choiwab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"choiwab"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"choiwab"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"choiwab"},"content":"import java.util.Optional;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"choiwab"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"choiwab"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"choiwab"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"choiwab"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"choiwab"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"choiwab"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"choiwab"},"content":"/**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"choiwab"},"content":" * A class to access Appointment data stored as a json file on the hard disk.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"choiwab"},"content":" */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"choiwab"},"content":"public class JsonAppointmentBookStorage implements AppointmentBookStorage {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"choiwab"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAppointmentBookStorage.class);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"choiwab"},"content":"    private Path filePath;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"choiwab"},"content":"    public JsonAppointmentBookStorage(Path filePath) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"choiwab"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"choiwab"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"choiwab"},"content":"        return filePath;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"choiwab"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataLoadingException {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"choiwab"},"content":"        return readAppointmentBook(filePath);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"choiwab"},"content":"     * Similar to {@link #readAppointmentBook(Path)}.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"choiwab"},"content":"     *","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"choiwab"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"choiwab"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"choiwab"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"choiwab"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"choiwab"},"content":"        Optional\u003cJsonSerializableAppointmentBook\u003e jsonAppointmentBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"choiwab"},"content":"                filePath, JsonSerializableAppointmentBook.class);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"choiwab"},"content":"        if (!jsonAppointmentBook.isPresent()) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"choiwab"},"content":"            return Optional.empty();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"choiwab"},"content":"        try {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"choiwab"},"content":"            return Optional.of(jsonAppointmentBook.get().toModelType());","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"choiwab"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"choiwab"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"choiwab"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"choiwab"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"choiwab"},"content":"        saveAppointmentBook(appointmentBook, filePath);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"choiwab"},"content":"     * Similar to {@link #saveAppointmentBook(ReadOnlyAppointmentBook)}.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"choiwab"},"content":"     *","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"choiwab"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"choiwab"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"choiwab"},"content":"        requireNonNull(appointmentBook);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"choiwab"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"choiwab"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"choiwab"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAppointmentBook(appointmentBook), filePath);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"choiwab"},"content":"}","lastModifiedDate":"2024-10-13","isFullCredit":false}],"authorContributionMap":{"choiwab":78}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zaidansani"},"content":"    private final int counter;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zaidansani"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zaidansani"},"content":"                                       @JsonProperty(\"counter\") int counter) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zaidansani"},"content":"        this.counter \u003d counter;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zaidansani"},"content":"        counter \u003d source.getCounter();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zaidansani"},"content":"        addressBook.setCounter(counter);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"zaidansani":6,"-":59}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAppointmentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choiwab"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"choiwab"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"choiwab"},"content":"import java.util.List;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"choiwab"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"choiwab"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"choiwab"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"choiwab"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"choiwab"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"choiwab"},"content":"/**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"choiwab"},"content":" * An Immutable AppointmentBook that is serializable to JSON format.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"choiwab"},"content":" */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"choiwab"},"content":"@JsonRootName(value \u003d \"appointmentbook\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"choiwab"},"content":"public class JsonSerializableAppointmentBook {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"choiwab"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"Appointment list contains duplicate appointment(s).\";","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"choiwab"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"choiwab"},"content":"     * Constructs a {@code JsonSerializableAppointmentBook} with the given persons.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"choiwab"},"content":"    @JsonCreator","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"choiwab"},"content":"    public JsonSerializableAppointmentBook(@JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"choiwab"},"content":"        this.appointments.addAll(appointments);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"choiwab"},"content":"     * Converts a given {@code ReadOnlyAppointmentBook} into this class for Jackson use.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"choiwab"},"content":"     *","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"choiwab"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAppointmentBook}.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"choiwab"},"content":"    public JsonSerializableAppointmentBook(ReadOnlyAppointmentBook source) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"choiwab"},"content":"        appointments.addAll(source.getAppointmentList().stream().map(JsonAdaptedAppointment::new)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"choiwab"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"choiwab"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"choiwab"},"content":"     * Converts this address book into the model\u0027s {@code AppointmentBook} object.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"choiwab"},"content":"     *","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"choiwab"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"choiwab"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"choiwab"},"content":"    public AppointmentBook toModelType() throws IllegalValueException {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"choiwab"},"content":"        AppointmentBook appointmentBook \u003d new AppointmentBook();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"choiwab"},"content":"        for (JsonAdaptedAppointment jsonAdaptedAppointment : appointments) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"choiwab"},"content":"            Appointment appointment \u003d jsonAdaptedAppointment.toModelType();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"choiwab"},"content":"            if (appointmentBook.hasAppointment(appointment)) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"choiwab"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"choiwab"},"content":"            }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"choiwab"},"content":"            appointmentBook.addAppointment(appointment);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"choiwab"},"content":"        }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"choiwab"},"content":"        return appointmentBook;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"choiwab"},"content":"}","lastModifiedDate":"2024-10-13","isFullCredit":false}],"authorContributionMap":{"choiwab":60}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"choiwab"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, AppointmentBookStorage {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"choiwab"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"choiwab"},"content":"    Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataLoadingException;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"choiwab"},"content":"    void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25","isFullCredit":false}],"authorContributionMap":{"choiwab":11,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"choiwab"},"content":"    private AppointmentBookStorage appointmentBookStorage;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"choiwab"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"choiwab"},"content":"                          AppointmentBookStorage appointmentBookStorage) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"choiwab"},"content":"        this.appointmentBookStorage \u003d appointmentBookStorage;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"choiwab"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointnmentBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"choiwab"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"choiwab"},"content":"        return appointmentBookStorage.getAppointmentBookFilePath();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"choiwab"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataLoadingException {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"choiwab"},"content":"        return readAppointmentBook(appointmentBookStorage.getAppointmentBookFilePath());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"choiwab"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"choiwab"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"choiwab"},"content":"        return appointmentBookStorage.readAppointmentBook(filePath);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"choiwab"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"choiwab"},"content":"        saveAppointmentBook(appointmentBook, appointmentBookStorage.getAppointmentBookFilePath());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"choiwab"},"content":"    @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"choiwab"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"choiwab"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"choiwab"},"content":"        appointmentBookStorage.saveAppointmentBook(appointmentBook, filePath);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"choiwab"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"choiwab":33,"-":77}},{"path":"src/test/java/seedu/address/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zaidansani"},"content":"        assertEquals(defaultConfig, defaultConfig);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30","isFullCredit":false}],"authorContributionMap":{"zaidansani":1,"-":25}},{"path":"src/test/java/seedu/address/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zaidansani"},"content":"        assertTrue(version.isEarlyAccess());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zaidansani"},"content":"        assertEquals(0, one.compareTo(another));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zaidansani"},"content":"        assertEquals(0, one.compareTo(another));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zaidansani"},"content":"        assertEquals(one, another);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zaidansani"},"content":"        assertEquals(one, another);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                                              int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"zaidansani":5,"-":130}},{"path":"src/test/java/seedu/address/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-12-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zaidansani"},"content":"        List\u003cObject\u003e containingNull \u003d Collections.singletonList((Object) null);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zaidansani"},"content":"        assertNullPointerExceptionThrown(Collections.singletonList((Object) null));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zaidansani"},"content":"        assertNullPointerExceptionNotThrown(List.of(new Object()));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zaidansani"},"content":"        List\u003cObject\u003e containingNull \u003d Collections.singletonList((Object) null);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22","isFullCredit":false}],"authorContributionMap":{"zaidansani":4,"-":104}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PERSON_ENTITY_STRING;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rxchell"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"choiwab"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.PersonDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"choiwab"},"content":"import seedu.address.storage.JsonAppointmentBookStorage;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zaidansani"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"choiwab"},"content":"        JsonAppointmentBookStorage appointmentBookStorage \u003d new JsonAppointmentBookStorage((temporaryFolder.resolve(","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"choiwab"},"content":"                \"appointmentBook.json\")));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"choiwab"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, appointmentBookStorage);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zaidansani"},"content":"        String deleteCommand \u003d \"delete person 9\";","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rxchell"},"content":"        String listCommand \u003d ListPersonCommand.COMMAND_WORD + \" \" + PERSON_ENTITY_STRING;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rxchell"},"content":"        assertCommandSuccess(listCommand, ListPersonCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zaidansani"},"content":"     *","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zaidansani"},"content":"     *","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zaidansani"},"content":"     *","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zaidansani"},"content":"     *","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jayjay19630"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getAppointmentBook(), new UserPrefs());","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zaidansani"},"content":"     *","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @param e               the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"zaidansani"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"choiwab"},"content":"        JsonAppointmentBookStorage appointmentBookStorage \u003d new JsonAppointmentBookStorage(prefPath) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"choiwab"},"content":"            @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"choiwab"},"content":"            public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"choiwab"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"choiwab"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, appointmentBookStorage);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jayjay19630"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + \" \" + PERSON_ENTITY_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"            + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"zaidansani"},"content":"        PersonDescriptor expectedPerson \u003d new PersonBuilder(AMY).withTags().buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21","isFullCredit":false}],"authorContributionMap":{"jayjay19630":3,"rxchell":3,"choiwab":10,"zaidansani":10,"-":168}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zaidansani"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zaidansani"},"content":"import java.util.List;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.PersonDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jayjay19630"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jayjay19630"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zaidansani"},"content":"        PersonDescriptor validPersonDescriptor \u003d new PersonBuilder().buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zaidansani"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPersonDescriptor).execute(modelStub);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zaidansani"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, Messages.formatPerson(validPersonDescriptor)),","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zaidansani"},"content":"        assertEquals(List.of(validPersonDescriptor), modelStub.personsAdded);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zaidansani"},"content":"        PersonDescriptor validPersonDescriptor \u003d new PersonBuilder().buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zaidansani"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(validPersonDescriptor);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jayjay19630"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jayjay19630"},"content":"            AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addPersonCommand.execute(modelStub));","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zaidansani"},"content":"        PersonDescriptor alice \u003d new PersonBuilder().withName(\"Alice\").buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zaidansani"},"content":"        PersonDescriptor bob \u003d new PersonBuilder().withName(\"Bob\").buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jayjay19630"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jayjay19630"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zaidansani"},"content":"        assertEquals(addAliceCommand, addAliceCommand);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jayjay19630"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zaidansani"},"content":"        assertEquals(addAliceCommand, addAliceCommandCopy);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(1, addAliceCommand);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(null, addAliceCommand);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(addAliceCommand, addBobCommand);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jayjay19630"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(ALICE);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jayjay19630"},"content":"        String expected \u003d AddPersonCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jayjay19630"},"content":"        assertEquals(expected, addPersonCommand.toString());","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zaidansani"},"content":"        public int addPerson(PersonDescriptor person) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zaidansani"},"content":"        @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zaidansani"},"content":"        public boolean hasPerson(PersonDescriptor person) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zaidansani"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zaidansani"},"content":"        }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jayjay19630"},"content":"        @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jayjay19630"},"content":"        public void setAppointmentBook(ReadOnlyAppointmentBook appointmentBook) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jayjay19630"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jayjay19630"},"content":"        @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jayjay19630"},"content":"        public ReadOnlyAppointmentBook getAppointmentBook() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jayjay19630"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jayjay19630"},"content":"        @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jayjay19630"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jayjay19630"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jayjay19630"},"content":"        @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jayjay19630"},"content":"        public void deleteAppointment(Appointment target) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jayjay19630"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jayjay19630"},"content":"        @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jayjay19630"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jayjay19630"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"jayjay19630"},"content":"        @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"jayjay19630"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"jayjay19630"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"jayjay19630"},"content":"        @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"jayjay19630"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jayjay19630"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"jayjay19630"},"content":"        @Override","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"jayjay19630"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"jayjay19630"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"zaidansani"},"content":"        final ArrayList\u003cPersonDescriptor\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"zaidansani"},"content":"        public int addPerson(PersonDescriptor person) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"zaidansani"},"content":"            // Todo: implement proper test stub","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"zaidansani"},"content":"            return 0;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12","isFullCredit":false}],"authorContributionMap":{"jayjay19630":52,"zaidansani":27,"-":177}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zaidansani"},"content":"        assertCommandSuccess(new ClearPersonCommand(), model, ClearPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jayjay19630"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jayjay19630"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zaidansani"},"content":"        assertCommandSuccess(new ClearPersonCommand(), model, ClearPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08","isFullCredit":false}],"authorContributionMap":{"jayjay19630":3,"zaidansani":2,"-":28}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_TYPE;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICINE;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SICKNESS;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zaidansani"},"content":"import java.util.Collections;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jayjay19630"},"content":"    public static final String PERSON_ENTITY_STRING \u003d \"person \";","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jayjay19630"},"content":"    public static final String PERSON_APPOINTMENT_STRING \u003d \"appt \";","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"choiwab"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"choiwab"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jayjay19630"},"content":"    public static final String VALID_APPOINTMENT_TYPE_AMY \u003d \"Health Checkup\";","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jayjay19630"},"content":"    public static final String VALID_APPOINTMENT_TYPE_BOB \u003d \"Dental Checkup\";","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jayjay19630"},"content":"    public static final String VALID_MEDICINE_AMY \u003d \"Panadol\";","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jayjay19630"},"content":"    public static final String VALID_MEDICINE_BOB \u003d \"Ibuprofen\";","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jayjay19630"},"content":"    public static final String VALID_SICKNESS_AMY \u003d \"Flu\";","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jayjay19630"},"content":"    public static final String VALID_SICKNESS_BOB \u003d \"Toothache\";","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jayjay19630"},"content":"    public static final String APPOINTMENT_TYPE_DESC_AMY \u003d \" \" + PREFIX_APPOINTMENT_TYPE + VALID_APPOINTMENT_TYPE_AMY;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jayjay19630"},"content":"    public static final String APPOINTMENT_TYPE_DESC_BOB \u003d \" \" + PREFIX_APPOINTMENT_TYPE + VALID_APPOINTMENT_TYPE_BOB;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jayjay19630"},"content":"    public static final String MEDICINE_DESC_AMY \u003d \" \" + PREFIX_MEDICINE + VALID_MEDICINE_AMY;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jayjay19630"},"content":"    public static final String MEDICINE_DESC_BOB \u003d \" \" + PREFIX_MEDICINE + VALID_MEDICINE_BOB;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jayjay19630"},"content":"    public static final String SICKNESS_DESC_AMY \u003d \" \" + PREFIX_SICKNESS + VALID_SICKNESS_AMY;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jayjay19630"},"content":"    public static final String SICKNESS_DESC_BOB \u003d \" \" + PREFIX_SICKNESS + VALID_SICKNESS_BOB;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zaidansani"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Collections.singletonList(splitName[0])));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05","isFullCredit":false}],"authorContributionMap":{"jayjay19630":20,"choiwab":2,"zaidansani":3,"-":124}},{"path":"src/test/java/seedu/address/logic/commands/DeleteAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rxchell"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rxchell"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rxchell"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rxchell"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rxchell"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rxchell"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rxchell"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rxchell"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rxchell"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_APPOINTMENT;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rxchell"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rxchell"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rxchell"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rxchell"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rxchell"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rxchell"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rxchell"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rxchell"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rxchell"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rxchell"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rxchell"},"content":" * {@code DeleteAppointmentCommand}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rxchell"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rxchell"},"content":"public class DeleteAppointmentCommandTest {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rxchell"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rxchell"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rxchell"},"content":"        Appointment appointmentToDelete \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rxchell"},"content":"                .get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rxchell"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rxchell"},"content":"        String expectedMessage \u003d String.format(DeleteAppointmentCommand.MESSAGE_DELETE_APPOINTMENT_SUCCESS,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rxchell"},"content":"                Messages.formatAppointment(appointmentToDelete));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rxchell"},"content":"        ModelManager expectedModel \u003d new ModelManager(","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rxchell"},"content":"                model.getAddressBook(), getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rxchell"},"content":"        expectedModel.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rxchell"},"content":"        assertCommandSuccess(deleteAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rxchell"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rxchell"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAppointmentList().size() + 1);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rxchell"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(outOfBoundIndex);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rxchell"},"content":"        assertCommandFailure(deleteAppointmentCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rxchell"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rxchell"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rxchell"},"content":"        Appointment appointmentToDelete \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rxchell"},"content":"                .get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rxchell"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rxchell"},"content":"        String expectedMessage \u003d String.format(DeleteAppointmentCommand.MESSAGE_DELETE_APPOINTMENT_SUCCESS,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rxchell"},"content":"                Messages.formatAppointment(appointmentToDelete));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rxchell"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rxchell"},"content":"        expectedModel.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rxchell"},"content":"        showNoAppointment(expectedModel);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rxchell"},"content":"        assertCommandSuccess(deleteAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rxchell"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rxchell"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rxchell"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_APPOINTMENT;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rxchell"},"content":"        // ensures that outOfBoundIndex is still in bounds of appointment book list","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rxchell"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAppointmentBook().getAppointmentList().size());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rxchell"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(outOfBoundIndex);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rxchell"},"content":"        assertCommandFailure(deleteAppointmentCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rxchell"},"content":"    public void equals() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rxchell"},"content":"        DeleteAppointmentCommand deleteFirstCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rxchell"},"content":"        DeleteAppointmentCommand deleteSecondCommand \u003d new DeleteAppointmentCommand(INDEX_SECOND_APPOINTMENT);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rxchell"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rxchell"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rxchell"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rxchell"},"content":"        DeleteAppointmentCommand deleteFirstCommandCopy \u003d new DeleteAppointmentCommand(INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rxchell"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rxchell"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rxchell"},"content":"        assertNotEquals(1, deleteFirstCommand);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rxchell"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rxchell"},"content":"        assertNotEquals(null, deleteFirstCommand);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rxchell"},"content":"        // different appointment -\u003e returns false","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rxchell"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rxchell"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rxchell"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rxchell"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(targetIndex);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rxchell"},"content":"        String expected \u003d DeleteAppointmentCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rxchell"},"content":"        assertEquals(expected, deleteAppointmentCommand.toString());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rxchell"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rxchell"},"content":"     * Updates {@code model}\u0027s filtered list to show no appointments.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rxchell"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rxchell"},"content":"    private void showNoAppointment(Model model) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rxchell"},"content":"        model.updateFilteredAppointmentList(a -\u003e false);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rxchell"},"content":"        assertTrue(model.getFilteredAppointmentList().isEmpty());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rxchell"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rxchell"},"content":"     * Updates {@code model}\u0027s filtered list to show only the appointment at the given {@code index}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rxchell"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rxchell"},"content":"    private void showAppointmentAtIndex(Model model, Index index) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rxchell"},"content":"        model.updateFilteredAppointmentList(a -\u003e a.equals(model.getAppointmentBook().getAppointmentList()","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rxchell"},"content":"                .get(index.getZeroBased())));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rxchell"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"rxchell":131}},{"path":"src/test/java/seedu/address/logic/commands/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zaidansani"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zaidansani"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zaidansani"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zaidansani"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zaidansani"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jayjay19630"},"content":"            Messages.formatPerson(personToDelete));","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jayjay19630"},"content":"        ModelManager expectedModel \u003d new ModelManager(","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jayjay19630"},"content":"            model.getAddressBook(), getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zaidansani"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zaidansani"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zaidansani"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zaidansani"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zaidansani"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jayjay19630"},"content":"            Messages.formatPerson(personToDelete));","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jayjay19630"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zaidansani"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zaidansani"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zaidansani"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zaidansani"},"content":"        DeletePersonCommand deleteFirstCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zaidansani"},"content":"        DeletePersonCommand deleteSecondCommand \u003d new DeletePersonCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zaidansani"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zaidansani"},"content":"        DeletePersonCommand deleteFirstCommandCopy \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zaidansani"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(1, deleteFirstCommand);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(null, deleteFirstCommand);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zaidansani"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(targetIndex);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zaidansani"},"content":"        String expected \u003d DeletePersonCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zaidansani"},"content":"        assertEquals(expected, deletePersonCommand.toString());","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05","isFullCredit":false}],"authorContributionMap":{"jayjay19630":6,"zaidansani":24,"-":92}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zaidansani"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"choiwab"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"choiwab"},"content":"public class EditPersonCommandTest {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zaidansani"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"choiwab"},"content":"        EditCommand editCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jayjay19630"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jayjay19630"},"content":"            EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.formatPerson(editedPerson));","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jayjay19630"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jayjay19630"},"content":"            new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jayjay19630"},"content":"            getTypicalAppointmentBook(),","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jayjay19630"},"content":"            new UserPrefs());","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"choiwab"},"content":"        EditCommand editCommand \u003d new EditPersonCommand(indexLastPerson, descriptor);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jayjay19630"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jayjay19630"},"content":"            EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.formatPerson(editedPerson));","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jayjay19630"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jayjay19630"},"content":"            new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jayjay19630"},"content":"            getTypicalAppointmentBook(),","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jayjay19630"},"content":"            new UserPrefs());","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"choiwab"},"content":"        EditCommand editCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jayjay19630"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jayjay19630"},"content":"            EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.formatPerson(editedPerson));","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jayjay19630"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jayjay19630"},"content":"            new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jayjay19630"},"content":"            getTypicalAppointmentBook(),","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jayjay19630"},"content":"            new UserPrefs());","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"choiwab"},"content":"        EditCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jayjay19630"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jayjay19630"},"content":"            EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.formatPerson(editedPerson));","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jayjay19630"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jayjay19630"},"content":"            new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jayjay19630"},"content":"            getTypicalAppointmentBook(),","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jayjay19630"},"content":"            new UserPrefs());","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"choiwab"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"choiwab"},"content":"        EditCommand editCommand \u003d new EditPersonCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"choiwab"},"content":"        EditCommand editCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"            new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"choiwab"},"content":"        EditCommand editCommand \u003d new EditPersonCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"choiwab"},"content":"        EditCommand editCommand \u003d new EditPersonCommand(outOfBoundIndex,","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"choiwab"},"content":"        final EditCommand standardCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"choiwab"},"content":"        EditCommand commandWithSameValues \u003d new EditPersonCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"zaidansani"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"zaidansani"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(standardCommand, new ClearPersonCommand());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(standardCommand, new EditPersonCommand(INDEX_SECOND_PERSON, DESC_AMY));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(standardCommand, new EditPersonCommand(INDEX_FIRST_PERSON, DESC_BOB));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"choiwab"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"choiwab"},"content":"        String expected \u003d EditPersonCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"            + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"choiwab"},"content":"        assertEquals(expected, editPersonCommand.toString());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08","isFullCredit":false}],"authorContributionMap":{"jayjay19630":25,"choiwab":16,"zaidansani":8,"-":152}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zaidansani"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"choiwab"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zaidansani"},"content":"        assertEquals(DESC_AMY, descriptorWithSameValues);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zaidansani"},"content":"        assertEquals(DESC_AMY, DESC_AMY);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(null, DESC_AMY);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(5, DESC_AMY);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(DESC_AMY, DESC_BOB);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05","isFullCredit":false}],"authorContributionMap":{"choiwab":1,"zaidansani":11,"-":58}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zaidansani"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zaidansani"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08","isFullCredit":false}],"authorContributionMap":{"zaidansani":2,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zaidansani"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zaidansani"},"content":"import java.util.List;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zaidansani"},"content":"    private final Model model \u003d new ModelManager(","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jayjay19630"},"content":"        getTypicalAddressBook(),","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jayjay19630"},"content":"        getTypicalAppointmentBook(),","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jayjay19630"},"content":"        new UserPrefs());","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zaidansani"},"content":"    private final Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jayjay19630"},"content":"        getTypicalAddressBook(),","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jayjay19630"},"content":"        getTypicalAppointmentBook(),","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jayjay19630"},"content":"        new UserPrefs());","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Vangmay"},"content":"        FindCommand findFirstCommand \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Vangmay"},"content":"        FindCommand findSecondCommand \u003d new FindPersonCommand(secondPredicate);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zaidansani"},"content":"        assertEquals(findFirstCommand, findFirstCommand);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Vangmay"},"content":"        FindCommand findFirstCommandCopy \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zaidansani"},"content":"        assertEquals(findFirstCommand, findFirstCommandCopy);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(1, findFirstCommand);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(null, findFirstCommand);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(findFirstCommand, findSecondCommand);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Vangmay"},"content":"        FindCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Vangmay"},"content":"        FindCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zaidansani"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(List.of(\"keyword\"));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Vangmay"},"content":"        FindPersonCommand findCommand \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Vangmay"},"content":"        String expected \u003d FindPersonCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12","isFullCredit":false}],"authorContributionMap":{"Vangmay":7,"jayjay19630":7,"zaidansani":10,"-":74}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zaidansani"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zaidansani"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08","isFullCredit":false}],"authorContributionMap":{"zaidansani":2,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jayjay19630"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jayjay19630"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rxchell"},"content":"        assertCommandSuccess(new ListPersonCommand(), model, ListPersonCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rxchell"},"content":"            expectedModel);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rxchell"},"content":"        assertCommandSuccess(new ListPersonCommand(), model, ListPersonCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rxchell"},"content":"            expectedModel);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12","isFullCredit":false}],"authorContributionMap":{"jayjay19630":3,"rxchell":4,"-":35}},{"path":"src/test/java/seedu/address/logic/parser/AddPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PERSON_ENTITY_STRING;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.PersonDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jayjay19630"},"content":"public class AddPersonCommandParserTest {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zaidansani"},"content":"    private final AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zaidansani"},"content":"        PersonDescriptor expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jayjay19630"},"content":"        // whitespace before person entity string in preamble","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jayjay19630"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + PERSON_ENTITY_STRING + NAME_DESC_BOB","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jayjay19630"},"content":"            + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jayjay19630"},"content":"            + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zaidansani"},"content":"        PersonDescriptor expectedPersonMultipleTags \u003d new PersonBuilder(BOB)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zaidansani"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zaidansani"},"content":"                .buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jayjay19630"},"content":"            PERSON_ENTITY_STRING + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jayjay19630"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jayjay19630"},"content":"            new AddPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jayjay19630"},"content":"            PERSON_ENTITY_STRING + validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jayjay19630"},"content":"                + ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zaidansani"},"content":"        PersonDescriptor expectedPerson \u003d new PersonBuilder(AMY).withTags().buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jayjay19630"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jayjay19630"},"content":"            PERSON_ENTITY_STRING + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jayjay19630"},"content":"            new AddPersonCommand(expectedPerson));","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jayjay19630"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jayjay19630"},"content":"            parser,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jayjay19630"},"content":"            PERSON_ENTITY_STRING + VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jayjay19630"},"content":"            parser,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jayjay19630"},"content":"            PERSON_ENTITY_STRING + NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jayjay19630"},"content":"            parser,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jayjay19630"},"content":"            PERSON_ENTITY_STRING + NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jayjay19630"},"content":"            parser,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jayjay19630"},"content":"            PERSON_ENTITY_STRING + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jayjay19630"},"content":"            parser,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jayjay19630"},"content":"            PERSON_ENTITY_STRING + VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jayjay19630"},"content":"            + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jayjay19630"},"content":"            + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jayjay19630"},"content":"            PERSON_ENTITY_STRING + NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"jayjay19630"},"content":"            PERSON_ENTITY_STRING + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jayjay19630"},"content":"            PERSON_ENTITY_STRING + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"jayjay19630"},"content":"            PERSON_ENTITY_STRING + INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"jayjay19630"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"jayjay19630"},"content":"            PREAMBLE_NON_EMPTY + PERSON_ENTITY_STRING + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"jayjay19630"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15","isFullCredit":false}],"authorContributionMap":{"jayjay19630":59,"zaidansani":7,"-":151}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PERSON_ENTITY_STRING;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zaidansani"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"choiwab"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"choiwab"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Vangmay"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.PersonDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jayjay19630"},"content":"    public void parseCommand_addPerson() throws Exception {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zaidansani"},"content":"        PersonDescriptor person \u003d new PersonBuilder().buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jayjay19630"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser.parseCommand(PersonUtil.getAddPersonCommand(person));","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jayjay19630"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zaidansani"},"content":"    public void parseCommand_clearPersonCommand() throws Exception {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zaidansani"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zaidansani"},"content":"            +","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zaidansani"},"content":"            \" \"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zaidansani"},"content":"            + ParserUtil.PERSON_ENTITY_STRING) instanceof ClearCommand);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zaidansani"},"content":"        /* ToDo: Make this work","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zaidansani"},"content":"             assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD +","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zaidansani"},"content":"                \" \" + ParserUtil.PERSON_ENTITY_STRING + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zaidansani"},"content":"                */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zaidansani"},"content":"        DeletePersonCommand command \u003d (DeletePersonCommand) parser.parseCommand(","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jayjay19630"},"content":"            DeletePersonCommand.COMMAND_WORD + \" \" + PERSON_ENTITY_STRING + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zaidansani"},"content":"        assertEquals(new DeletePersonCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"choiwab"},"content":"    public void parseCommand_editPerson() throws Exception {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"choiwab"},"content":"        EditPersonCommand command \u003d (EditPersonCommand) parser.parseCommand(","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"choiwab"},"content":"            EditPersonCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"choiwab"},"content":"                + PERSON_ENTITY_STRING + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"choiwab"},"content":"                + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"choiwab"},"content":"        assertEquals(new EditPersonCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zaidansani"},"content":"        // assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Vangmay"},"content":"            FindCommand.COMMAND_WORD + \" \" + PERSON_ENTITY_STRING + \" \" + \"foo bar baz\");","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Vangmay"},"content":"        assertEquals(new FindPersonCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rxchell"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rxchell"},"content":"            + ParserUtil.PERSON_ENTITY_STRING) instanceof ListCommand);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rxchell"},"content":"        // TODO: assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24","isFullCredit":false}],"authorContributionMap":{"Vangmay":3,"jayjay19630":6,"rxchell":3,"choiwab":8,"zaidansani":15,"-":77}},{"path":"src/test/java/seedu/address/logic/parser/DeleteAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rxchell"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rxchell"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rxchell"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rxchell"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rxchell"},"content":"import static seedu.address.logic.parser.ParserUtil.APPOINTMENT_ENTITY_STRING;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rxchell"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rxchell"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rxchell"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rxchell"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rxchell"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rxchell"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rxchell"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rxchell"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rxchell"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rxchell"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rxchell"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rxchell"},"content":"public class DeleteAppointmentCommandParserTest {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rxchell"},"content":"    private final DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rxchell"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rxchell"},"content":"        assertParseSuccess(parser, APPOINTMENT_ENTITY_STRING + \" 1\",","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rxchell"},"content":"                new DeleteAppointmentCommand(INDEX_FIRST_APPOINTMENT));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rxchell"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rxchell"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rxchell"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rxchell"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"rxchell":36}},{"path":"src/test/java/seedu/address/logic/parser/DeletePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PERSON_ENTITY_STRING;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zaidansani"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zaidansani"},"content":"public class DeletePersonCommandParserTest {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zaidansani"},"content":"    private final DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jayjay19630"},"content":"        assertParseSuccess(parser, PERSON_ENTITY_STRING + \"1\", new DeletePersonCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zaidansani"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jayjay19630"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09","isFullCredit":false}],"authorContributionMap":{"jayjay19630":3,"zaidansani":4,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/EditPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"choiwab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PERSON_ENTITY_STRING;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"choiwab"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"choiwab"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"choiwab"},"content":"public class EditPersonCommandParserTest {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zaidansani"},"content":"    private final EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"choiwab"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"choiwab"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"choiwab"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"choiwab"},"content":"        assertParseFailure(parser, PERSON_ENTITY_STRING + \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"choiwab"},"content":"        String userInput \u003d PERSON_ENTITY_STRING + targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"choiwab"},"content":"        EditCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04","isFullCredit":false}],"authorContributionMap":{"choiwab":10,"zaidansani":1,"-":57}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Vangmay"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zaidansani"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Vangmay"},"content":"            new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Vangmay"},"content":"        assertParseSuccess(parser, \"person Alice Bob\", expectedFindCommand);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Vangmay"},"content":"        assertParseSuccess(parser, \"person \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27","isFullCredit":false}],"authorContributionMap":{"Vangmay":4,"zaidansani":1,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zaidansani"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName(null));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zaidansani"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone(null));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zaidansani"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress(null));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zaidansani"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail(null));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22","isFullCredit":false}],"authorContributionMap":{"zaidansani":4,"-":192}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.PersonDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zaidansani"},"content":"        PersonDescriptor editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zaidansani"},"content":"            .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zaidansani"},"content":"            .buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zaidansani"},"content":"        List\u003cPersonDescriptor\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zaidansani"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson((Person) null));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zaidansani"},"content":"        AddressBookStub(Collection\u003cPersonDescriptor\u003e persons) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zaidansani"},"content":"            this.persons.setAll(persons.stream().map(p -\u003e new Person(0, p)).toList());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zaidansani"},"content":"        @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zaidansani"},"content":"        public int getCounter() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zaidansani"},"content":"            return persons.size();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zaidansani"},"content":"        }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24","isFullCredit":false}],"authorContributionMap":{"zaidansani":13,"-":102}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zaidansani"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zaidansani"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_P;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zaidansani"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON_P;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zaidansani"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson((Person) null));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jayjay19630"},"content":"    public void equals_checkAddressBooks_returnsCorrectEquality() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zaidansani"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE_P).withPerson(BENSON_P).build();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jayjay19630"},"content":"        modelManager \u003d new ModelManager(addressBook, getTypicalAppointmentBook(), userPrefs);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jayjay19630"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, getTypicalAppointmentBook(), userPrefs);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zaidansani"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zaidansani"},"content":"        assertEquals(modelManager, modelManager);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(null, modelManager);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(5, modelManager);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(modelManager, new ModelManager(","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jayjay19630"},"content":"            differentAddressBook,","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jayjay19630"},"content":"            getTypicalAppointmentBook(),","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zaidansani"},"content":"            userPrefs));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, getTypicalAppointmentBook(), userPrefs));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(modelManager, new ModelManager(","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jayjay19630"},"content":"            addressBook,","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jayjay19630"},"content":"            getTypicalAppointmentBook(),","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zaidansani"},"content":"            differentUserPrefs));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31","isFullCredit":false}],"authorContributionMap":{"jayjay19630":8,"zaidansani":15,"-":119}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Vangmay"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Vangmay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Vangmay"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Vangmay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Vangmay"},"content":"public class AppointmentTest {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Vangmay"},"content":"    private Appointment appointment1;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Vangmay"},"content":"    private Appointment appointment2;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Vangmay"},"content":"    private Appointment appointment3;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Vangmay"},"content":"    private LocalDateTime dateTime1;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Vangmay"},"content":"    private LocalDateTime dateTime2;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Vangmay"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Vangmay"},"content":"    void setUp() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Vangmay"},"content":"        dateTime1 \u003d LocalDateTime.of(2024, 1, 1, 10, 0);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Vangmay"},"content":"        dateTime2 \u003d LocalDateTime.of(2024, 1, 1, 11, 0);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Vangmay"},"content":"        appointment1 \u003d new Appointment(new AppointmentType(\"Checkup\"), dateTime1, 1,","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Vangmay"},"content":"                new Sickness(\"Cold\"), new Medicine(\"Aspirin\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Vangmay"},"content":"        appointment2 \u003d new Appointment(new AppointmentType(\"Checkup\"), dateTime1, 1,","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Vangmay"},"content":"                new Sickness(\"Cold\"), new Medicine(\"Aspirin\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Vangmay"},"content":"        appointment3 \u003d new Appointment(new AppointmentType(\"Followup\"), dateTime2, 2,","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Vangmay"},"content":"                new Sickness(\"Flu\"), new Medicine(\"Tamiflu\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Vangmay"},"content":"    public void getAppointmentType_multipleAppointments_returnsCorrectAppointmentTypes() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Vangmay"},"content":"        assertEquals(new AppointmentType(\"Checkup\"), appointment1.getAppointmentType());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Vangmay"},"content":"        assertEquals(new AppointmentType(\"Checkup\"), appointment2.getAppointmentType());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Vangmay"},"content":"        assertEquals(new AppointmentType(\"Followup\"), appointment3.getAppointmentType());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Vangmay"},"content":"    public void getPersonId_multipleAppointments_returnsCorrectIds() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Vangmay"},"content":"        assertEquals(1, appointment1.getPersonId());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Vangmay"},"content":"        assertEquals(1, appointment2.getPersonId());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Vangmay"},"content":"        assertEquals(2, appointment3.getPersonId());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Vangmay"},"content":"    public void execute_testGetSickness_success() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Vangmay"},"content":"        assertEquals(new Sickness(\"Cold\"), appointment1.getSickness());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Vangmay"},"content":"        assertEquals(new Sickness(\"Cold\"), appointment2.getSickness());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Vangmay"},"content":"        assertEquals(new Sickness(\"Flu\"), appointment3.getSickness());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Vangmay"},"content":"    public void getAppointmentDateTime_multipleAppointments_returnsCorrectDateTime() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Vangmay"},"content":"        assertEquals(dateTime1, appointment1.getAppointmentDateTime());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Vangmay"},"content":"        assertEquals(dateTime1, appointment2.getAppointmentDateTime());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Vangmay"},"content":"        assertEquals(dateTime2, appointment3.getAppointmentDateTime());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Vangmay"},"content":"    public void getMedicine_multipleAppointments_returnsCorrectMedicine() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Vangmay"},"content":"        assertEquals(new Medicine(\"Aspirin\"), appointment1.getMedicine());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Vangmay"},"content":"        assertEquals(new Medicine(\"Aspirin\"), appointment2.getMedicine());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Vangmay"},"content":"        assertEquals(new Medicine(\"Tamiflu\"), appointment3.getMedicine());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Vangmay"},"content":"    public void isSameAppointment_compareIdenticalAndDifferentAppointments_returnsCorrectComparison() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Vangmay"},"content":"        assertTrue(appointment1.isSameAppointment(appointment2));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Vangmay"},"content":"        assertTrue(appointment1.isSameAppointment(appointment1));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Vangmay"},"content":"        assertFalse(appointment1.isSameAppointment(appointment3));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Vangmay"},"content":"    public void equals_compareIdenticalAndDifferentAppointments_returnsCorrectEquality() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Vangmay"},"content":"        assertEquals(appointment1, appointment1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Vangmay"},"content":"        assertEquals(appointment1, appointment2);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Vangmay"},"content":"        assertNotEquals(appointment1, appointment3);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Vangmay"},"content":"    public void hashCode_compareIdenticalAndDifferentAppointments_returnsConsistentHashes() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Vangmay"},"content":"        assertEquals(appointment1.hashCode(), appointment2.hashCode());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Vangmay"},"content":"        assertEquals(appointment2.hashCode(), appointment2.hashCode());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Vangmay"},"content":"        assertNotEquals(appointment1.hashCode(), appointment3.hashCode());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Vangmay"},"content":"    public void toString_validAppointments_returnsFormattedString() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Vangmay"},"content":"        String appointment1String \u003d \"seedu.address.model.appointment.Appointment\"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Vangmay"},"content":"                + \"{appointmentType\u003dCheckup, appointmentDateTime\u003d2024-01-01T10:00,\"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Vangmay"},"content":"                + \" personId\u003d1, medicine\u003dAspirin, sickness\u003dCold}\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Vangmay"},"content":"        String appointment3String \u003d \"seedu.address.model.appointment.Appointment{appointmentType\u003dFollowup,\"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Vangmay"},"content":"                + \" appointmentDateTime\u003d2024-01-01T11:00, personId\u003d2, medicine\u003dTamiflu, sickness\u003dFlu}\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Vangmay"},"content":"        assertEquals(appointment1String, appointment1.toString());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Vangmay"},"content":"        assertEquals(appointment3String, appointment3.toString());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Vangmay"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"Vangmay":104}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Vangmay"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Vangmay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Vangmay"},"content":"public class AppointmentTypeTest {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Vangmay"},"content":"    public void isValidAppointmentType_validTypes_returnsTrue() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Vangmay"},"content":"        assertTrue(AppointmentType.isValidAppointmentType(\"Check Up\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Vangmay"},"content":"        assertTrue(AppointmentType.isValidAppointmentType(\"Follow Up\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Vangmay"},"content":"    public void isValidAppointmentType_invalidTypes_returnsFalse() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Vangmay"},"content":"        assertFalse(AppointmentType.isValidAppointmentType(\" Check Up\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Vangmay"},"content":"        assertFalse(AppointmentType.isValidAppointmentType(\"\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Vangmay"},"content":"        assertFalse(AppointmentType.isValidAppointmentType(\" \"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Vangmay"},"content":"    public void constructor_validType_createsAppointmentType() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Vangmay"},"content":"        AppointmentType appointmentType \u003d new AppointmentType(\"Check Up\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Vangmay"},"content":"        assertEquals(\"Check Up\", appointmentType.value);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Vangmay"},"content":"    public void constructor_invalidType_throwsIllegalArgumentException() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Vangmay"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new AppointmentType(\"\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Vangmay"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new AppointmentType(\" \"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Vangmay"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new AppointmentType(\" CheckUp\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Vangmay"},"content":"    public void toString_validAppointmentType_returnsFormattedString() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Vangmay"},"content":"        AppointmentType appointmentType \u003d new AppointmentType(\"Checkup\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Vangmay"},"content":"        assertEquals(\"Checkup\", appointmentType.toString());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Vangmay"},"content":"    public void equals_compareIdenticalAndDifferentTypes_returnsCorrectEquality() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Vangmay"},"content":"        AppointmentType appointmentType1 \u003d new AppointmentType(\"Checkup\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Vangmay"},"content":"        AppointmentType appointmentType2 \u003d new AppointmentType(\"Checkup\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Vangmay"},"content":"        AppointmentType appointmentType3 \u003d new AppointmentType(\"Followup\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Vangmay"},"content":"        assertEquals(appointmentType1, appointmentType2);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Vangmay"},"content":"        assertNotEquals(appointmentType1, appointmentType3);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Vangmay"},"content":"        assertNotEquals(null, appointmentType1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Vangmay"},"content":"        assertNotEquals(\"Checkup\", appointmentType1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Vangmay"},"content":"        assertEquals(appointmentType1, appointmentType1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Vangmay"},"content":"    public void hashCode_compareIdenticalAndDifferentTypes_returnsConsistentHashes() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Vangmay"},"content":"        AppointmentType appointmentType1 \u003d new AppointmentType(\"Checkup\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Vangmay"},"content":"        AppointmentType appointmentType2 \u003d new AppointmentType(\"Checkup\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Vangmay"},"content":"        AppointmentType appointmentType3 \u003d new AppointmentType(\"Followup\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Vangmay"},"content":"        assertEquals(appointmentType1.hashCode(), appointmentType2.hashCode());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Vangmay"},"content":"        assertNotEquals(appointmentType1.hashCode(), appointmentType3.hashCode());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Vangmay"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"Vangmay":68}},{"path":"src/test/java/seedu/address/model/appointment/MedicineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Vangmay"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Vangmay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Vangmay"},"content":"public class MedicineTest {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Vangmay"},"content":"    public void isValidMedicine_validMedicineNames_returnsTrue() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Vangmay"},"content":"        assertTrue(Medicine.isValidMedicine(\"Aspirin\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Vangmay"},"content":"        assertTrue(Medicine.isValidMedicine(\"Tamiflu\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Vangmay"},"content":"        assertTrue(Medicine.isValidMedicine(\"Paracetamol\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Vangmay"},"content":"        assertTrue(Medicine.isValidMedicine(\"Neoprofen\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Vangmay"},"content":"    public void isValidMedicine_invalidMedicineNames_returnsFalse() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Vangmay"},"content":"        assertFalse(Medicine.isValidMedicine(\"\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Vangmay"},"content":"        assertFalse(Medicine.isValidMedicine(\" \"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Vangmay"},"content":"        assertFalse(Medicine.isValidMedicine(\" Aspirin\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Vangmay"},"content":"    public void constructor_validMedicineName_createsMedicine() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Vangmay"},"content":"        Medicine medicine \u003d new Medicine(\"Aspirin\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Vangmay"},"content":"        assertEquals(\"Aspirin\", medicine.value);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Vangmay"},"content":"    public void constructor_invalidMedicineName_throwsIllegalArgumentException() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Vangmay"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Medicine(\"\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Vangmay"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Medicine(\" \"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Vangmay"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Medicine(\" Aspirin\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Vangmay"},"content":"    public void constructor_nullInput_throwsNullPointerException() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Vangmay"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Sickness(null));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Vangmay"},"content":"    public void toString_validMedicine_returnsFormattedString() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Vangmay"},"content":"        Medicine medicine \u003d new Medicine(\"Aspirin\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Vangmay"},"content":"        assertEquals(\"Aspirin\", medicine.toString());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Vangmay"},"content":"        assertNotEquals(\"aspirin\", medicine.toString());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Vangmay"},"content":"    public void equals_compareIdenticalAndDifferentMedicines_returnsCorrectEquality() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Vangmay"},"content":"        Medicine medicine1 \u003d new Medicine(\"Aspirin\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Vangmay"},"content":"        Medicine medicine2 \u003d new Medicine(\"Aspirin\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Vangmay"},"content":"        Medicine medicine3 \u003d new Medicine(\"Tamiflu\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Vangmay"},"content":"        assertEquals(medicine1, medicine2);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Vangmay"},"content":"        assertNotEquals(medicine1, medicine3);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Vangmay"},"content":"        assertNotEquals(null, medicine1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Vangmay"},"content":"        assertNotEquals(\"Aspirin\", medicine1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Vangmay"},"content":"        assertEquals(medicine1, medicine1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Vangmay"},"content":"    public void hashCode_compareIdenticalAndDifferentMedicines_returnsConsistentHashes() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Vangmay"},"content":"        Medicine medicine1 \u003d new Medicine(\"Aspirin\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Vangmay"},"content":"        Medicine medicine2 \u003d new Medicine(\"Aspirin\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Vangmay"},"content":"        Medicine medicine3 \u003d new Medicine(\"Tamiflu\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Vangmay"},"content":"        assertEquals(medicine1.hashCode(), medicine2.hashCode());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Vangmay"},"content":"        assertNotEquals(medicine1.hashCode(), medicine3.hashCode());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Vangmay"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"Vangmay":74}},{"path":"src/test/java/seedu/address/model/appointment/SicknessTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Vangmay"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Vangmay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Vangmay"},"content":"public class SicknessTest {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Vangmay"},"content":"    void isValidSickness_validSicknessNames_returnsTrue() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Vangmay"},"content":"        assertTrue(Sickness.isValidSickness(\"Common cold\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Vangmay"},"content":"        assertTrue(Sickness.isValidSickness(\"Flu\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Vangmay"},"content":"        assertTrue(Sickness.isValidSickness(\"COVID-19\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Vangmay"},"content":"        assertTrue(Sickness.isValidSickness(\"Migraine\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Vangmay"},"content":"        assertTrue(Sickness.isValidSickness(\"A\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Vangmay"},"content":"    void isValidSickness_invalidSicknessNames_returnsFalse() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Vangmay"},"content":"        assertFalse(Sickness.isValidSickness(\"\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Vangmay"},"content":"        assertFalse(Sickness.isValidSickness(\" \"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Vangmay"},"content":"        assertFalse(Sickness.isValidSickness(\" Headache\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Vangmay"},"content":"    void constructor_validSicknessName_createsSickness() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Vangmay"},"content":"        Sickness sickness \u003d new Sickness(\"Fever\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Vangmay"},"content":"        assertEquals(\"Fever\", sickness.value);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Vangmay"},"content":"    void constructor_invalidSicknessName_throwsIllegalArgumentException() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Vangmay"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Sickness(\"\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Vangmay"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Sickness(\" \"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Vangmay"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Sickness(\" Cough\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Vangmay"},"content":"    void constructor_nullInput_throwsNullPointerException() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Vangmay"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Sickness(null));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Vangmay"},"content":"    void toString_validSickness_returnsFormattedString() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Vangmay"},"content":"        Sickness sickness \u003d new Sickness(\"Allergies\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Vangmay"},"content":"        assertEquals(\"Allergies\", sickness.toString());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Vangmay"},"content":"    void equals_compareIdenticalAndDifferentSicknesses_returnsCorrectEquality() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Vangmay"},"content":"        Sickness sickness1 \u003d new Sickness(\"Asthma\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Vangmay"},"content":"        Sickness sickness2 \u003d new Sickness(\"Asthma\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Vangmay"},"content":"        Sickness sickness3 \u003d new Sickness(\"Bronchitis\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Vangmay"},"content":"        assertEquals(sickness1, sickness2);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Vangmay"},"content":"        assertNotEquals(sickness1, sickness3);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Vangmay"},"content":"        assertNotEquals(null, sickness1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Vangmay"},"content":"        assertNotEquals(\"Asthma\", sickness1); // Different type","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Vangmay"},"content":"        assertEquals(sickness1, sickness1); // Same object","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Vangmay"},"content":"    void hashCode_compareIdenticalAndDifferentSicknesses_returnsConsistentHashes() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Vangmay"},"content":"        Sickness sickness1 \u003d new Sickness(\"Diabetes\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Vangmay"},"content":"        Sickness sickness2 \u003d new Sickness(\"Diabetes\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Vangmay"},"content":"        Sickness sickness3 \u003d new Sickness(\"Hypertension\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Vangmay"},"content":"        assertEquals(sickness1.hashCode(), sickness2.hashCode());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Vangmay"},"content":"        assertNotEquals(sickness1.hashCode(), sickness3.hashCode());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Vangmay"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"Vangmay":76}},{"path":"src/test/java/seedu/address/model/appointment/UniqueAppointmentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Vangmay"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Vangmay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Vangmay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Vangmay"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Vangmay"},"content":"import java.util.List;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Vangmay"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Vangmay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Vangmay"},"content":"import seedu.address.model.appointment.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Vangmay"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Vangmay"},"content":"public class UniqueAppointmentListTest {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Vangmay"},"content":"    private UniqueAppointmentList uniqueAppointmentList;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Vangmay"},"content":"    private Appointment appointment1;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Vangmay"},"content":"    private Appointment appointment2;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Vangmay"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Vangmay"},"content":"    void setUp() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Vangmay"},"content":"        uniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Vangmay"},"content":"        appointment1 \u003d new Appointment(new AppointmentType(\"Checkup\"), LocalDateTime.of(2024, 1, 1, 10, 0), 1,","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Vangmay"},"content":"                new Sickness(\"Cold\"), new Medicine(\"Aspirin\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Vangmay"},"content":"        appointment2 \u003d new Appointment(new AppointmentType(\"Followup\"), LocalDateTime.of(2024, 1, 2, 11, 0), 2,","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Vangmay"},"content":"                new Sickness(\"Flu\"), new Medicine(\"Tamiflu\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Vangmay"},"content":"    public void contains_existingAndNonExistingAppointment_returnsCorrect() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Vangmay"},"content":"        assertFalse(uniqueAppointmentList.contains(appointment1));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Vangmay"},"content":"        uniqueAppointmentList.add(appointment1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Vangmay"},"content":"        assertTrue(uniqueAppointmentList.contains(appointment1));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Vangmay"},"content":"    public void add_newAppointment_addsSuccessfully() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Vangmay"},"content":"        uniqueAppointmentList.add(appointment1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Vangmay"},"content":"        assertTrue(uniqueAppointmentList.contains(appointment1));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Vangmay"},"content":"        assertThrows(DuplicateAppointmentException.class, () -\u003e uniqueAppointmentList.add(appointment1));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Vangmay"},"content":"    public void setAppointment_existingAppointment_updatesSuccessfully() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Vangmay"},"content":"        uniqueAppointmentList.add(appointment1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Vangmay"},"content":"        Appointment editedAppointment \u003d new Appointment(new AppointmentType(\"Checkup\"),","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Vangmay"},"content":"                LocalDateTime.of(2024, 1, 1, 10, 0), 1,","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Vangmay"},"content":"                new Sickness(\"Fever\"), new Medicine(\"Paracetamol\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Vangmay"},"content":"        uniqueAppointmentList.setAppointment(appointment1, editedAppointment);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Vangmay"},"content":"        assertTrue(uniqueAppointmentList.contains(editedAppointment));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Vangmay"},"content":"        assertFalse(uniqueAppointmentList.contains(appointment1));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Vangmay"},"content":"    public void setAppointment_nonExistingAppointment_throwsAppointmentNotFoundException() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Vangmay"},"content":"        assertThrows(AppointmentNotFoundException.class, () -\u003e {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Vangmay"},"content":"            uniqueAppointmentList.setAppointment(appointment1, appointment2);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Vangmay"},"content":"        });","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Vangmay"},"content":"    public void remove_existingAppointment_removesSuccessfully() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Vangmay"},"content":"        uniqueAppointmentList.add(appointment1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Vangmay"},"content":"        uniqueAppointmentList.remove(appointment1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Vangmay"},"content":"        assertFalse(uniqueAppointmentList.contains(appointment1));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Vangmay"},"content":"    public void setAppointments_validList_replacesExistingList() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Vangmay"},"content":"        uniqueAppointmentList.setAppointments(Arrays.asList(appointment1, appointment2));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Vangmay"},"content":"        assertTrue(uniqueAppointmentList.contains(appointment1));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Vangmay"},"content":"        assertTrue(uniqueAppointmentList.contains(appointment2));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Vangmay"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Vangmay"},"content":"        uniqueAppointmentList.add(appointment1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Vangmay"},"content":"        uniqueAppointmentList.add(appointment2);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Vangmay"},"content":"        List\u003cAppointment\u003e unmodifiableList \u003d uniqueAppointmentList.asUnmodifiableObservableList();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Vangmay"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e unmodifiableList.remove(0));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Vangmay"},"content":"    public void equals_differentAndSameAppointments_returnsCorrectEquality() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Vangmay"},"content":"        UniqueAppointmentList list1 \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Vangmay"},"content":"        UniqueAppointmentList list2 \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Vangmay"},"content":"        list1.add(appointment1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Vangmay"},"content":"        list2.add(appointment1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Vangmay"},"content":"        assertEquals(list1, list2);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Vangmay"},"content":"        list2.add(appointment2);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Vangmay"},"content":"        assertNotEquals(list1, list2);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Vangmay"},"content":"    public void hashCode_differentAndSameAppointments_returnsCorrectHashCodeEquality() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Vangmay"},"content":"        UniqueAppointmentList list1 \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Vangmay"},"content":"        UniqueAppointmentList list2 \u003d new UniqueAppointmentList();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Vangmay"},"content":"        list1.add(appointment1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Vangmay"},"content":"        list2.add(appointment1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Vangmay"},"content":"        assertEquals(list1.hashCode(), list2.hashCode());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Vangmay"},"content":"        list2.add(appointment2);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Vangmay"},"content":"        assertNotEquals(list1.hashCode(), list2.hashCode());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Vangmay"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Vangmay"},"content":"    public void toString_multipleAppointments_returnsFormattedString() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Vangmay"},"content":"        uniqueAppointmentList.add(appointment1);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Vangmay"},"content":"        uniqueAppointmentList.add(appointment2);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Vangmay"},"content":"        String expectedString \u003d \"[\" + appointment1.toString() + \", \" + appointment2.toString() + \"]\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Vangmay"},"content":"        assertEquals(expectedString, uniqueAppointmentList.toString());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Vangmay"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"Vangmay":117}},{"path":"src/test/java/seedu/address/model/appointment/exceptions/AppointmentNotFoundException.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Vangmay"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Vangmay"},"content":"/**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Vangmay"},"content":" * Signals that the operation is unable to find the specified appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Vangmay"},"content":" */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Vangmay"},"content":"public class AppointmentNotFoundException extends RuntimeException {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Vangmay"},"content":"    public AppointmentNotFoundException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Vangmay"},"content":"        super(\"No such appointment found\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Vangmay"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"Vangmay":10}},{"path":"src/test/java/seedu/address/model/appointment/exceptions/DuplicateAppointmentException.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Vangmay"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Vangmay"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Vangmay"},"content":"/**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Vangmay"},"content":" * Signals that the operation will result in duplicate Appointments","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Vangmay"},"content":" * (Appointments are considered duplicates if they have the same identity).","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Vangmay"},"content":" */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Vangmay"},"content":"public class DuplicateAppointmentException extends RuntimeException {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Vangmay"},"content":"    public DuplicateAppointmentException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Vangmay"},"content":"        super(\"Operation would result in duplicate appointments\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Vangmay"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Vangmay"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"Vangmay":11}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zaidansani"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zaidansani"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zaidansani"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(1, firstPredicate);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zaidansani"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(List.of(\"Carol\"));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12","isFullCredit":false}],"authorContributionMap":{"zaidansani":7,"-":79}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zaidansani"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zaidansani"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_P;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zaidansani"},"content":"        // todo: check if this makes sense","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zaidansani"},"content":"        assertFalse(ALICE.isSamePerson((PersonDescriptor) null));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zaidansani"},"content":"        assertEquals(ALICE_P, aliceCopy);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zaidansani"},"content":"        assertEquals(ALICE_P, ALICE_P);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(null, ALICE_P);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(5, ALICE_P);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(ALICE_P, BOB);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zaidansani"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE_P).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(ALICE_P, editedAlice);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zaidansani"},"content":"        editedAlice \u003d new PersonBuilder(ALICE_P).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(ALICE_P, editedAlice);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(ALICE_P, editedAlice);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zaidansani"},"content":"        editedAlice \u003d new PersonBuilder(ALICE_P).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(ALICE_P, editedAlice);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zaidansani"},"content":"        editedAlice \u003d new PersonBuilder(ALICE_P).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zaidansani"},"content":"        assertNotEquals(ALICE_P, editedAlice);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01","isFullCredit":false}],"authorContributionMap":{"zaidansani":18,"-":84}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zaidansani"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_P;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zaidansani"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains((Person) null));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zaidansani"},"content":"        uniquePersonList.add(ALICE_P);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zaidansani"},"content":"        assertTrue(uniquePersonList.contains(ALICE_P));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zaidansani"},"content":"        uniquePersonList.add(ALICE_P);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zaidansani"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE_P).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zaidansani"},"content":"        uniquePersonList.add(ALICE_P);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zaidansani"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE_P));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zaidansani"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE_P));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zaidansani"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE_P, null));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zaidansani"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE_P, ALICE_P));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zaidansani"},"content":"        uniquePersonList.add(ALICE_P);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zaidansani"},"content":"        uniquePersonList.setPerson(ALICE_P, ALICE_P);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zaidansani"},"content":"        expectedUniquePersonList.add(ALICE_P);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zaidansani"},"content":"        uniquePersonList.add(ALICE_P);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zaidansani"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE_P).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zaidansani"},"content":"        uniquePersonList.setPerson(ALICE_P, editedAlice);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zaidansani"},"content":"        uniquePersonList.add(ALICE_P);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zaidansani"},"content":"        uniquePersonList.setPerson(ALICE_P, BOB);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zaidansani"},"content":"        uniquePersonList.add(ALICE_P);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zaidansani"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE_P, BOB));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zaidansani"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE_P));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zaidansani"},"content":"        uniquePersonList.add(ALICE_P);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zaidansani"},"content":"        uniquePersonList.remove(ALICE_P);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zaidansani"},"content":"        uniquePersonList.add(ALICE_P);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"zaidansani"},"content":"        uniquePersonList.add(ALICE_P);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"zaidansani"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE_P, ALICE_P);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01","isFullCredit":false}],"authorContributionMap":{"zaidansani":27,"-":149}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedAppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rxchell"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rxchell"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rxchell"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rxchell"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rxchell"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rxchell"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rxchell"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rxchell"},"content":"class JsonAdaptedAppointmentTest {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rxchell"},"content":"    private static final String VALID_APPOINTMENT_TYPE \u003d \"Consultation\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rxchell"},"content":"    private static final String VALID_APPOINTMENT_DATE_TIME \u003d \"2024-10-15T10:30:00\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rxchell"},"content":"    private static final String VALID_PERSON_ID \u003d \"123\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rxchell"},"content":"    private static final String VALID_SICKNESS \u003d \"Flu\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rxchell"},"content":"    private static final String VALID_MEDICINE \u003d \"Paracetamol\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rxchell"},"content":"    private static final String INVALID_APPOINTMENT_TYPE \u003d \" \";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rxchell"},"content":"    private static final String INVALID_DATE_TIME \u003d \"2024-15-10T10:30:00\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rxchell"},"content":"    private static final String INVALID_PERSON_ID \u003d \"-1\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rxchell"},"content":"    private static final String INVALID_SICKNESS \u003d \"\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rxchell"},"content":"    private static final String INVALID_MEDICINE \u003d \"\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rxchell"},"content":"    void toModelType_validAppointmentDetails_returnsAppointment() throws Exception {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rxchell"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rxchell"},"content":"                VALID_APPOINTMENT_TYPE, VALID_APPOINTMENT_DATE_TIME, VALID_PERSON_ID, VALID_SICKNESS, VALID_MEDICINE);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rxchell"},"content":"        Appointment modelAppointment \u003d appointment.toModelType();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rxchell"},"content":"        assertEquals(VALID_APPOINTMENT_TYPE, modelAppointment.getAppointmentType().value);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rxchell"},"content":"        assertEquals(LocalDateTime.parse(VALID_APPOINTMENT_DATE_TIME), modelAppointment.getAppointmentDateTime());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rxchell"},"content":"        assertEquals(Integer.parseInt(VALID_PERSON_ID), modelAppointment.getPersonId());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rxchell"},"content":"        assertEquals(VALID_SICKNESS, modelAppointment.getSickness().value);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rxchell"},"content":"        assertEquals(VALID_MEDICINE, modelAppointment.getMedicine().value);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rxchell"},"content":"    void toModelType_nullAppointmentType_throwsIllegalValueException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rxchell"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rxchell"},"content":"                null, VALID_APPOINTMENT_DATE_TIME, VALID_PERSON_ID, VALID_SICKNESS, VALID_MEDICINE);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rxchell"},"content":"        assertThrows(IllegalValueException.class, appointment::toModelType);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rxchell"},"content":"    void toModelType_invalidAppointmentType_throwsIllegalValueException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rxchell"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rxchell"},"content":"                INVALID_APPOINTMENT_TYPE, VALID_APPOINTMENT_DATE_TIME, VALID_PERSON_ID, VALID_SICKNESS, VALID_MEDICINE);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rxchell"},"content":"        assertThrows(IllegalValueException.class, appointment::toModelType);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rxchell"},"content":"    void toModelType_nullAppointmentDateTime_throwsIllegalValueException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rxchell"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rxchell"},"content":"                VALID_APPOINTMENT_TYPE, null, VALID_PERSON_ID, VALID_SICKNESS, VALID_MEDICINE);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rxchell"},"content":"        assertThrows(IllegalValueException.class, appointment::toModelType);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rxchell"},"content":"    void toModelType_invalidAppointmentDateTime_throwsIllegalValueException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rxchell"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rxchell"},"content":"                VALID_APPOINTMENT_TYPE, INVALID_DATE_TIME, VALID_PERSON_ID, VALID_SICKNESS, VALID_MEDICINE);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rxchell"},"content":"        assertThrows(IllegalValueException.class, appointment::toModelType);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rxchell"},"content":"    void toModelType_nullPersonId_throwsIllegalValueException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rxchell"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rxchell"},"content":"                VALID_APPOINTMENT_TYPE, VALID_APPOINTMENT_DATE_TIME, null, VALID_SICKNESS, VALID_MEDICINE);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rxchell"},"content":"        assertThrows(IllegalValueException.class, appointment::toModelType);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rxchell"},"content":"    void toModelType_invalidPersonId_throwsIllegalValueException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rxchell"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rxchell"},"content":"                VALID_APPOINTMENT_TYPE, VALID_APPOINTMENT_DATE_TIME, INVALID_PERSON_ID, VALID_SICKNESS, VALID_MEDICINE);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rxchell"},"content":"        assertThrows(IllegalValueException.class, appointment::toModelType);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rxchell"},"content":"    void toModelType_nullSickness_throwsIllegalValueException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rxchell"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rxchell"},"content":"                VALID_APPOINTMENT_TYPE, VALID_APPOINTMENT_DATE_TIME, VALID_PERSON_ID, null, VALID_MEDICINE);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rxchell"},"content":"        assertThrows(IllegalValueException.class, appointment::toModelType);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rxchell"},"content":"    void toModelType_invalidSickness_throwsIllegalValueException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rxchell"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rxchell"},"content":"                VALID_APPOINTMENT_TYPE, VALID_APPOINTMENT_DATE_TIME, VALID_PERSON_ID, INVALID_SICKNESS, VALID_MEDICINE);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rxchell"},"content":"        assertThrows(IllegalValueException.class, appointment::toModelType);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rxchell"},"content":"    void toModelType_nullMedicine_throwsIllegalValueException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rxchell"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rxchell"},"content":"                VALID_APPOINTMENT_TYPE, VALID_APPOINTMENT_DATE_TIME, VALID_PERSON_ID, VALID_SICKNESS, null);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rxchell"},"content":"        assertThrows(IllegalValueException.class, appointment::toModelType);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rxchell"},"content":"    void toModelType_invalidMedicine_throwsIllegalValueException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rxchell"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rxchell"},"content":"                VALID_APPOINTMENT_TYPE, VALID_APPOINTMENT_DATE_TIME, VALID_PERSON_ID, VALID_SICKNESS, INVALID_MEDICINE);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rxchell"},"content":"        assertThrows(IllegalValueException.class, appointment::toModelType);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rxchell"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"rxchell":109}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zaidansani"},"content":"    private static final int INVALID_PERSON_ID \u003d -1;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zaidansani"},"content":"        // todo: fix this to make it less hacky","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zaidansani"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(new Person(0, BENSON));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zaidansani"},"content":"        assertEquals(BENSON, person.toModelType().getPersonDescriptor());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zaidansani"},"content":"            new JsonAdaptedPerson(INVALID_PERSON_ID, INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zaidansani"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_PERSON_ID, null,","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zaidansani"},"content":"            VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zaidansani"},"content":"            new JsonAdaptedPerson(INVALID_PERSON_ID, VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zaidansani"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_PERSON_ID, VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zaidansani"},"content":"            VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zaidansani"},"content":"            new JsonAdaptedPerson(INVALID_PERSON_ID, VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zaidansani"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_PERSON_ID, VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zaidansani"},"content":"            VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zaidansani"},"content":"            new JsonAdaptedPerson(INVALID_PERSON_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zaidansani"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_PERSON_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zaidansani"},"content":"            null, VALID_TAGS);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zaidansani"},"content":"            new JsonAdaptedPerson(INVALID_PERSON_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"zaidansani":19,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            : null;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zaidansani"},"content":"        // todo","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zaidansani"},"content":"        // original.removePerson(ALICE);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"zaidansani":3,"-":108}},{"path":"src/test/java/seedu/address/storage/JsonAppointmentBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rxchell"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rxchell"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rxchell"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rxchell"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rxchell"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rxchell"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rxchell"},"content":"import java.util.Optional;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rxchell"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rxchell"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rxchell"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rxchell"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rxchell"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rxchell"},"content":"public class JsonAppointmentBookStorageTest {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rxchell"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAppointmentBookStorageTest\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rxchell"},"content":"    @TempDir","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rxchell"},"content":"    public Path testFolder;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rxchell"},"content":"    public void readAppointmentBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rxchell"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAppointmentBook(null));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rxchell"},"content":"    private Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(String filePath) throws Exception {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rxchell"},"content":"        return new JsonAppointmentBookStorage(Paths.get(filePath))","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rxchell"},"content":"                .readAppointmentBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rxchell"},"content":"    private Path addToTestDataPathIfNotNull(String filePath) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rxchell"},"content":"        return filePath !\u003d null","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rxchell"},"content":"                ? TEST_DATA_FOLDER.resolve(filePath)","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rxchell"},"content":"                : null;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rxchell"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rxchell"},"content":"        assertFalse(readAppointmentBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rxchell"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rxchell"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAppointmentBook(\"notJsonFormatAppointmentBook.json\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rxchell"},"content":"    public void readAppointmentBook_invalidAppointmentBook_throwDataLoadingException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rxchell"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAppointmentBook(\"invalidAppointmentBook.json\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rxchell"},"content":"    public void readAppointmentBook_invalidAndValidAppointmentBook_throwDataLoadingException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rxchell"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAppointmentBook(\"invalidAndValidAppointmentBook.json\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rxchell"},"content":"    public void saveAppointmentBook_nullAppointmentBook_throwsNullPointerException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rxchell"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAppointmentBook(null, \"SomeFile.json\"));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rxchell"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rxchell"},"content":"     * Saves {@code appointmentBook} at the specified {@code filePath}.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rxchell"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rxchell"},"content":"    private void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, String filePath) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rxchell"},"content":"        try {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rxchell"},"content":"            new JsonAppointmentBookStorage(Paths.get(filePath))","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rxchell"},"content":"                    .saveAppointmentBook(appointmentBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rxchell"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rxchell"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rxchell"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rxchell"},"content":"    public void saveAppointmentBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rxchell"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAppointmentBook(new AppointmentBook(), null));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rxchell"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"rxchell":82}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAppointmentBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rxchell"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rxchell"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rxchell"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rxchell"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rxchell"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rxchell"},"content":"import java.util.Collections;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rxchell"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rxchell"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rxchell"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rxchell"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rxchell"},"content":"import seedu.address.testutil.TypicalAppointments;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rxchell"},"content":"public class JsonSerializableAppointmentBookTest {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rxchell"},"content":"    private static final Path TEST_DATA_FOLDER \u003d","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rxchell"},"content":"            Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAppointmentBookTest\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rxchell"},"content":"    private static final Path TYPICAL_APPOINTMENTS_FILE \u003d","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rxchell"},"content":"            TEST_DATA_FOLDER.resolve(\"typicalAppointmentsAppointmentBook.json\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rxchell"},"content":"    private static final Path INVALID_APPOINTMENT_FILE \u003d","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rxchell"},"content":"            TEST_DATA_FOLDER.resolve(\"invalidAppointmentAppointmentBook.json\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rxchell"},"content":"    private static final Path DUPLICATE_APPOINTMENT_FILE \u003d","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rxchell"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicateAppointmentAppointmentBook.json\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rxchell"},"content":"    void toModelType_typicalAppointmentsFile_success() throws Exception {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rxchell"},"content":"        JsonSerializableAppointmentBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_APPOINTMENTS_FILE,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rxchell"},"content":"                JsonSerializableAppointmentBook.class).get();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rxchell"},"content":"        AppointmentBook appointmentBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rxchell"},"content":"        AppointmentBook typicalAppointmentsAppointmentBook \u003d TypicalAppointments.getTypicalAppointmentBook();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rxchell"},"content":"        assertEquals(appointmentBookFromFile, typicalAppointmentsAppointmentBook);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rxchell"},"content":"    void toModelType_invalidAppointmentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rxchell"},"content":"        JsonSerializableAppointmentBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_APPOINTMENT_FILE,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rxchell"},"content":"                JsonSerializableAppointmentBook.class).get();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rxchell"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rxchell"},"content":"    void toModelType_duplicateAppointments_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rxchell"},"content":"        JsonSerializableAppointmentBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_APPOINTMENT_FILE,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rxchell"},"content":"                JsonSerializableAppointmentBook.class).get();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rxchell"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAppointmentBook.MESSAGE_DUPLICATE_APPOINTMENT,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rxchell"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rxchell"},"content":"    @Test","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rxchell"},"content":"    void toModelType_emptyAppointmentList_noExceptionThrown() throws IllegalValueException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rxchell"},"content":"        JsonSerializableAppointmentBook jsonSerializableAppointmentBook \u003d","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rxchell"},"content":"                new JsonSerializableAppointmentBook(Collections.emptyList());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rxchell"},"content":"        AppointmentBook appointmentBook \u003d jsonSerializableAppointmentBook.toModelType();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rxchell"},"content":"        assertEquals(0, appointmentBook.getAppointmentList().size());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rxchell"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rxchell"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rxchell"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"rxchell":60}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"choiwab"},"content":"        JsonAppointmentBookStorage appointmentBookStorage \u003d new JsonAppointmentBookStorage(","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"choiwab"},"content":"                getTempFilePath(\"appb\"));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"choiwab"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, appointmentBookStorage);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"choiwab":3,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zaidansani"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"zaidansani":1,"-":33}},{"path":"src/test/java/seedu/address/testutil/AppointmentBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jayjay19630"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":"/**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":" * A utility class to help with building AppointmentBook objects.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":" * {@code AppointmentBook ab \u003d new AppointmentBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":" */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jayjay19630"},"content":"public class AppointmentBookBuilder {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zaidansani"},"content":"    private final AppointmentBook appointmentBook;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jayjay19630"},"content":"    public AppointmentBookBuilder() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jayjay19630"},"content":"        appointmentBook \u003d new AppointmentBook();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jayjay19630"},"content":"    public AppointmentBookBuilder(AppointmentBook appointmentBook) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jayjay19630"},"content":"        this.appointmentBook \u003d appointmentBook;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jayjay19630"},"content":"     * Adds a new {@code Appointment} to the {@code Appointment} that we are building.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jayjay19630"},"content":"    public AppointmentBookBuilder withAppointment(Appointment appointment) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jayjay19630"},"content":"        appointmentBook.addAppointment(appointment);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jayjay19630"},"content":"        return this;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jayjay19630"},"content":"    public AppointmentBook build() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jayjay19630"},"content":"        return appointmentBook;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jayjay19630"},"content":"}","lastModifiedDate":"2024-10-12","isFullCredit":false}],"authorContributionMap":{"jayjay19630":33,"zaidansani":1}},{"path":"src/test/java/seedu/address/testutil/AppointmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jayjay19630"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.appointment.AppointmentType;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.appointment.Medicine;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.appointment.Sickness;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"/**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jayjay19630"},"content":" * A utility class to help with building Appointment objects.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jayjay19630"},"content":" */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jayjay19630"},"content":"public class AppointmentBuilder {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jayjay19630"},"content":"    public static final String DEFAULT_APPOINTMENT_TYPE \u003d \"Health Checkup\";","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jayjay19630"},"content":"    public static final LocalDateTime DEFAULT_APPOINTMENT_DATE_TIME \u003d","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jayjay19630"},"content":"        LocalDateTime.of(2024, 10, 15, 10, 30);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jayjay19630"},"content":"    public static final int DEFAULT_PERSON_ID \u003d 1;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jayjay19630"},"content":"    public static final String DEFAULT_MEDICINE \u003d \"Panadol\";","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jayjay19630"},"content":"    public static final String DEFAULT_SICKNESS \u003d \"Flu\";","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jayjay19630"},"content":"    private AppointmentType appointmentType;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jayjay19630"},"content":"    private LocalDateTime appointmentDateTime;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jayjay19630"},"content":"    private int personId;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jayjay19630"},"content":"    private Medicine medicine;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jayjay19630"},"content":"    private Sickness sickness;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jayjay19630"},"content":"     * Creates a {@code AppointmentBuilder} with the default details.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jayjay19630"},"content":"    public AppointmentBuilder() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jayjay19630"},"content":"        appointmentType \u003d new AppointmentType(DEFAULT_APPOINTMENT_TYPE);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jayjay19630"},"content":"        appointmentDateTime \u003d DEFAULT_APPOINTMENT_DATE_TIME;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jayjay19630"},"content":"        personId \u003d DEFAULT_PERSON_ID;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jayjay19630"},"content":"        medicine \u003d new Medicine(DEFAULT_MEDICINE);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jayjay19630"},"content":"        sickness \u003d new Sickness(DEFAULT_SICKNESS);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jayjay19630"},"content":"     * Initializes the AppointmentBuilder with the data of {@code appointmentToCopy}.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jayjay19630"},"content":"    public AppointmentBuilder(Appointment appointmentToCopy) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jayjay19630"},"content":"        appointmentType \u003d appointmentToCopy.getAppointmentType();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jayjay19630"},"content":"        appointmentDateTime \u003d appointmentToCopy.getAppointmentDateTime();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jayjay19630"},"content":"        personId \u003d appointmentToCopy.getPersonId();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jayjay19630"},"content":"        medicine \u003d appointmentToCopy.getMedicine();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jayjay19630"},"content":"        sickness \u003d appointmentToCopy.getSickness();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jayjay19630"},"content":"     * Sets the {@code AppointmentType} of the {@code Appointment} that we are building.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jayjay19630"},"content":"    public AppointmentBuilder withAppointmentType(String appointmentType) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jayjay19630"},"content":"        this.appointmentType \u003d new AppointmentType(appointmentType);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jayjay19630"},"content":"        return this;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jayjay19630"},"content":"     * Sets the {@code personId} of the {@code Appointment} that we are building.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jayjay19630"},"content":"    public AppointmentBuilder withPersonId(int personId) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jayjay19630"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jayjay19630"},"content":"        return this;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jayjay19630"},"content":"     * Sets the {@code Medicine} of the {@code Appointment} that we are building.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jayjay19630"},"content":"    public AppointmentBuilder withMedicine(String medicine) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jayjay19630"},"content":"        this.medicine \u003d new Medicine(medicine);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jayjay19630"},"content":"        return this;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jayjay19630"},"content":"     * Sets the {@code appointmentDateTime} of the {@code LocalDateTime} that we are building.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jayjay19630"},"content":"    public AppointmentBuilder withDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jayjay19630"},"content":"        this.appointmentDateTime \u003d dateTime;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jayjay19630"},"content":"        return this;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jayjay19630"},"content":"     * Sets the {@code Sickness} of the {@code Appointment} that we are building.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jayjay19630"},"content":"    public AppointmentBuilder withSickness(String sickness) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jayjay19630"},"content":"        this.sickness \u003d new Sickness(sickness);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jayjay19630"},"content":"        return this;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jayjay19630"},"content":"     * Builds the {@code Appointment} object.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jayjay19630"},"content":"    public Appointment build() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jayjay19630"},"content":"        return new Appointment(appointmentType, appointmentDateTime, personId, sickness, medicine);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jayjay19630"},"content":"}","lastModifiedDate":"2024-10-12","isFullCredit":false}],"authorContributionMap":{"jayjay19630":97}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"choiwab"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zaidansani"},"content":"    private final EditPersonDescriptor descriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05","isFullCredit":false}],"authorContributionMap":{"choiwab":1,"zaidansani":1,"-":85}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.PersonDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zaidansani"},"content":"        this(personToCopy.getPersonDescriptor());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zaidansani"},"content":"    /**","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zaidansani"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zaidansani"},"content":"     */","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zaidansani"},"content":"    public PersonBuilder(PersonDescriptor personToCopy) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zaidansani"},"content":"    public PersonDescriptor buildDescriptor() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zaidansani"},"content":"        return new PersonDescriptor(name, phone, email, address, tags);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03","isFullCredit":false}],"authorContributionMap":{"zaidansani":12,"-":96}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.parser.ParserUtil.PERSON_ENTITY_STRING;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"choiwab"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.PersonDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zaidansani"},"content":"    public static String getAddPersonCommand(PersonDescriptor person) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jayjay19630"},"content":"        return AddCommand.COMMAND_WORD + \" \" + PERSON_ENTITY_STRING + \" \" + getPersonDetails(person);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zaidansani"},"content":"    public static String getPersonDetails(PersonDescriptor person) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05","isFullCredit":false}],"authorContributionMap":{"jayjay19630":2,"choiwab":1,"zaidansani":3,"-":57}},{"path":"src/test/java/seedu/address/testutil/TypicalAppointments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jayjay19630"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_TYPE_AMY;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_TYPE_BOB;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICINE_AMY;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICINE_BOB;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SICKNESS_AMY;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jayjay19630"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SICKNESS_BOB;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jayjay19630"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jayjay19630"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jayjay19630"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jayjay19630"},"content":"import java.util.List;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jayjay19630"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jayjay19630"},"content":"/**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jayjay19630"},"content":" * A utility class containing a list of {@code Appointment} objects to be used in tests.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jayjay19630"},"content":" */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jayjay19630"},"content":"public class TypicalAppointments {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jayjay19630"},"content":"    // Set default dates and times for the appointments","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jayjay19630"},"content":"    public static final LocalDateTime DEFAULT_DATE_TIME_1 \u003d LocalDateTime.of(2024, 10, 15, 10, 30);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jayjay19630"},"content":"    public static final LocalDateTime DEFAULT_DATE_TIME_2 \u003d LocalDateTime.of(2024, 11, 10, 14, 0);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jayjay19630"},"content":"    public static final LocalDateTime DEFAULT_DATE_TIME_3 \u003d LocalDateTime.of(2024, 12, 5, 9, 0);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jayjay19630"},"content":"    public static final LocalDateTime DEFAULT_DATE_TIME_4 \u003d LocalDateTime.of(2024, 10, 20, 11, 15);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jayjay19630"},"content":"    public static final LocalDateTime DEFAULT_DATE_TIME_5 \u003d LocalDateTime.of(2024, 11, 25, 16, 0);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jayjay19630"},"content":"    public static final LocalDateTime DEFAULT_DATE_TIME_6 \u003d LocalDateTime.of(2024, 12, 1, 8, 30);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jayjay19630"},"content":"    public static final LocalDateTime DEFAULT_DATE_TIME_7 \u003d LocalDateTime.of(2024, 10, 30, 15, 45);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jayjay19630"},"content":"    public static final Appointment APPOINTMENT_1 \u003d new AppointmentBuilder()","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jayjay19630"},"content":"        .withAppointmentType(\"Health Checkup\").withPersonId(1)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jayjay19630"},"content":"        .withSickness(\"Flu\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jayjay19630"},"content":"        .withMedicine(\"Panadol\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jayjay19630"},"content":"        .withDateTime(DEFAULT_DATE_TIME_1)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jayjay19630"},"content":"        .build();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jayjay19630"},"content":"    public static final Appointment APPOINTMENT_2 \u003d new AppointmentBuilder()","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jayjay19630"},"content":"        .withAppointmentType(\"Dental Checkup\").withPersonId(2)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jayjay19630"},"content":"        .withSickness(\"Toothache\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jayjay19630"},"content":"        .withMedicine(\"Ibuprofen\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jayjay19630"},"content":"        .withDateTime(DEFAULT_DATE_TIME_2)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jayjay19630"},"content":"        .build();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jayjay19630"},"content":"    public static final Appointment APPOINTMENT_3 \u003d new AppointmentBuilder()","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jayjay19630"},"content":"        .withAppointmentType(\"Eye Exam\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jayjay19630"},"content":"        .withPersonId(3)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jayjay19630"},"content":"        .withSickness(\"Eye Strain\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jayjay19630"},"content":"        .withMedicine(\"Eye Drops\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jayjay19630"},"content":"        .withDateTime(DEFAULT_DATE_TIME_3)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jayjay19630"},"content":"        .build();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jayjay19630"},"content":"    public static final Appointment APPOINTMENT_4 \u003d new AppointmentBuilder()","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jayjay19630"},"content":"        .withAppointmentType(\"Physical Therapy\").withPersonId(4)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jayjay19630"},"content":"        .withSickness(\"Back Pain\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jayjay19630"},"content":"        .withMedicine(\"Paracetamol\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jayjay19630"},"content":"        .withDateTime(DEFAULT_DATE_TIME_4)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jayjay19630"},"content":"        .build();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jayjay19630"},"content":"    public static final Appointment APPOINTMENT_5 \u003d new AppointmentBuilder()","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jayjay19630"},"content":"        .withAppointmentType(\"Vaccination\").withPersonId(5)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jayjay19630"},"content":"        .withSickness(\"None\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jayjay19630"},"content":"        .withMedicine(\"Vaccine\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jayjay19630"},"content":"        .withDateTime(DEFAULT_DATE_TIME_5)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jayjay19630"},"content":"        .build();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jayjay19630"},"content":"    public static final Appointment APPOINTMENT_6 \u003d new AppointmentBuilder()","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jayjay19630"},"content":"        .withAppointmentType(\"Routine Checkup\").withPersonId(6)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jayjay19630"},"content":"        .withSickness(\"None\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jayjay19630"},"content":"        .withMedicine(\"None\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jayjay19630"},"content":"        .withDateTime(DEFAULT_DATE_TIME_6)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jayjay19630"},"content":"        .build();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jayjay19630"},"content":"    public static final Appointment APPOINTMENT_7 \u003d new AppointmentBuilder()","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jayjay19630"},"content":"        .withAppointmentType(\"Consultation\").withPersonId(7)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jayjay19630"},"content":"        .withSickness(\"Headache\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jayjay19630"},"content":"        .withMedicine(\"Aspirin\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jayjay19630"},"content":"        .withDateTime(DEFAULT_DATE_TIME_7)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jayjay19630"},"content":"        .build();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jayjay19630"},"content":"    // Manually added","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jayjay19630"},"content":"    public static final Appointment APPOINTMENT_8 \u003d new AppointmentBuilder()","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jayjay19630"},"content":"        .withAppointmentType(\"Emergency Room\").withPersonId(8)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jayjay19630"},"content":"        .withSickness(\"Injury\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jayjay19630"},"content":"        .withMedicine(\"Morphine\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jayjay19630"},"content":"        .withDateTime(DEFAULT_DATE_TIME_4)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jayjay19630"},"content":"        .build();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jayjay19630"},"content":"    public static final Appointment APPOINTMENT_9 \u003d new AppointmentBuilder()","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jayjay19630"},"content":"        .withAppointmentType(\"Surgery Consultation\").withPersonId(9)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jayjay19630"},"content":"        .withSickness(\"Pre-Surgery\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jayjay19630"},"content":"        .withMedicine(\"Pre-Meds\")","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jayjay19630"},"content":"        .withDateTime(DEFAULT_DATE_TIME_5)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jayjay19630"},"content":"        .build();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jayjay19630"},"content":"    // Manually added - Appointment\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jayjay19630"},"content":"    public static final Appointment APPOINTMENT_AMY \u003d new AppointmentBuilder()","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jayjay19630"},"content":"        .withAppointmentType(VALID_APPOINTMENT_TYPE_AMY)","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jayjay19630"},"content":"        .withSickness(VALID_SICKNESS_AMY)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jayjay19630"},"content":"        .withMedicine(VALID_MEDICINE_AMY)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jayjay19630"},"content":"        .withDateTime(DEFAULT_DATE_TIME_6)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jayjay19630"},"content":"        .build();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jayjay19630"},"content":"    public static final Appointment APPOINTMENT_BOB \u003d new AppointmentBuilder()","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jayjay19630"},"content":"        .withAppointmentType(VALID_APPOINTMENT_TYPE_BOB)","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jayjay19630"},"content":"        .withSickness(VALID_SICKNESS_BOB)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jayjay19630"},"content":"        .withMedicine(VALID_MEDICINE_BOB)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jayjay19630"},"content":"        .withDateTime(DEFAULT_DATE_TIME_7)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jayjay19630"},"content":"        .build();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jayjay19630"},"content":"    public static final String KEYWORD_MATCHING_CHECKUP \u003d \"Checkup\"; // A keyword that matches Checkup","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zaidansani"},"content":"    private TypicalAppointments() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zaidansani"},"content":"    } // prevents instantiation","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jayjay19630"},"content":"    /**","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jayjay19630"},"content":"     * Returns an {@code AppointmentBook} with all the typical appointments.","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jayjay19630"},"content":"     */","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jayjay19630"},"content":"    public static AppointmentBook getTypicalAppointmentBook() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jayjay19630"},"content":"        AppointmentBook ab \u003d new AppointmentBook();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jayjay19630"},"content":"        for (Appointment appointment : getTypicalAppointments()) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jayjay19630"},"content":"            ab.addAppointment(appointment);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jayjay19630"},"content":"        }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jayjay19630"},"content":"        return ab;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jayjay19630"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jayjay19630"},"content":"    public static List\u003cAppointment\u003e getTypicalAppointments() {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jayjay19630"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jayjay19630"},"content":"            APPOINTMENT_1,","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jayjay19630"},"content":"            APPOINTMENT_2,","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jayjay19630"},"content":"            APPOINTMENT_3,","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jayjay19630"},"content":"            APPOINTMENT_4,","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jayjay19630"},"content":"            APPOINTMENT_5,","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jayjay19630"},"content":"            APPOINTMENT_6,","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jayjay19630"},"content":"            APPOINTMENT_7));","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jayjay19630"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jayjay19630"},"content":"}","lastModifiedDate":"2024-10-12","isFullCredit":false}],"authorContributionMap":{"jayjay19630":135,"zaidansani":2}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rxchell"},"content":"    public static final Index INDEX_FIRST_APPOINTMENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rxchell"},"content":"    public static final Index INDEX_SECOND_APPOINTMENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05","isFullCredit":false}],"authorContributionMap":{"rxchell":2,"-":11}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zaidansani"},"content":"import seedu.address.model.person.PersonDescriptor;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zaidansani"},"content":"    // todo: duplicate because of UniquePersonListTest.","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zaidansani"},"content":"    public static final Person ALICE_P \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zaidansani"},"content":"    public static final Person BENSON_P \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zaidansani"},"content":"    public static final Person CARL_P \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zaidansani"},"content":"    public static final Person DANIEL_P \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zaidansani"},"content":"    public static final Person ELLE_P \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zaidansani"},"content":"    public static final Person FIONA_P \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zaidansani"},"content":"    public static final Person GEORGE_P \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zaidansani"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zaidansani"},"content":"    public static final PersonDescriptor ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zaidansani"},"content":"        .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zaidansani"},"content":"        .withPhone(\"94351253\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zaidansani"},"content":"        .withTags(\"friends\").buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zaidansani"},"content":"    public static final PersonDescriptor BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zaidansani"},"content":"        .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zaidansani"},"content":"        .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zaidansani"},"content":"        .withTags(\"owesMoney\", \"friends\").buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zaidansani"},"content":"    public static final PersonDescriptor CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zaidansani"},"content":"        .withEmail(\"heinz@example.com\").withAddress(\"wall street\").buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zaidansani"},"content":"    public static final PersonDescriptor DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zaidansani"},"content":"        .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zaidansani"},"content":"    public static final PersonDescriptor ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zaidansani"},"content":"        .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zaidansani"},"content":"    public static final PersonDescriptor FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zaidansani"},"content":"        .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zaidansani"},"content":"    public static final PersonDescriptor GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zaidansani"},"content":"        .withEmail(\"anna@example.com\").withAddress(\"4th street\").buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zaidansani"},"content":"    public static final PersonDescriptor HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zaidansani"},"content":"        .withEmail(\"stefan@example.com\").withAddress(\"little india\").buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zaidansani"},"content":"    public static final PersonDescriptor IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zaidansani"},"content":"        .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").buildDescriptor();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        .build();","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zaidansani"},"content":"    private TypicalPersons() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zaidansani"},"content":"    } // prevents instantiation","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zaidansani"},"content":"        for (PersonDescriptor person : getTypicalPersons()) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zaidansani"},"content":"    public static List\u003cPersonDescriptor\u003e getTypicalPersons() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13","isFullCredit":false}],"authorContributionMap":{"zaidansani":36,"-":63}},{"path":"src/test/java/seedu/address/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zaidansani"},"content":"    public TestFxmlObject() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zaidansani"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zaidansani"},"content":"        if (!(other instanceof TestFxmlObject otherTestFxmlObject)) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21","isFullCredit":false}],"authorContributionMap":{"zaidansani":3,"-":42}}]
