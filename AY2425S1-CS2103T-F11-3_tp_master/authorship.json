[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jaynon"},"content":"[![CI Status](https://github.com/AY2425S1-CS2103T-F11-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2425S1-CS2103T-F11-3/tp/actions)","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jaynon"},"content":"# ClinicBuddy","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jaynon"},"content":"---","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jaynon"},"content":"ClinicBuddy aims to enhance the patient management process for small clinics, creating a platform to track patient information such as their treatment, contact information, visit records and future appointments.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jaynon"},"content":"---","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jaynon"},"content":"## Features","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jaynon"},"content":"\u003cb\u003eClinicBuddy\u003c/b\u003e allows you to","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jaynon"},"content":"1. \u003cb\u003eCreate\u003c/b\u003e patient records ","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jaynon"},"content":"2. \u003cb\u003eUpdate\u003c/b\u003e patient records ","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jaynon"},"content":"3. \u003cb\u003eDelete\u003c/b\u003e patient records ","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jaynon"},"content":"4. \u003cb\u003eSearch\u003c/b\u003e patient by ID or name ","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jaynon"},"content":"5. \u003cb\u003eBackup\u003cb\u003e patient records ","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jaynon"},"content":"---","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jaynon"},"content":"## Sample of User Interface","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jaynon"},"content":"![Ui](docs/images/Ui.png?)","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jaynon"},"content":"---","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jaynon"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-10-04","isFullCredit":false}],"authorContributionMap":{"Jaynon":25,"-":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](https://www.comp.nus.edu.sg).","lastModifiedDate":"2024-07-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Al-ez"},"content":"### Alez","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Al-ez"},"content":"\u003cimg src\u003d\"images/al-ez.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Al-ez"},"content":"[[github](https://github.com/Al-ez)]","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Al-ez"},"content":"[[portfolio](team/al-ez.md)]","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Al-ez"},"content":"* Responsibilities: [Backend, Testing]","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"colinac"},"content":"### Chiang Kai Jing Colin Adam","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"colinac"},"content":"\u003cimg src\u003d\"images/colinac.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"colinac"},"content":"[[github](https://github.com/colinac)]","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"colinac"},"content":"[[portfolio](team/colinac.md)]","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jaynon"},"content":"* Role: Developer","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"colinac"},"content":"### Sun Weiyang","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"colinac"},"content":"\u003cimg src\u003d\"images/artillerysun.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"colinac"},"content":"[[github](https://github.com/ArtillerySun)]","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"colinac"},"content":"[[portfolio](team/artillerysun.md)]","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"colinac"},"content":"### Tea Li Hao","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JellyPenguinnn"},"content":"\u003cimg src\u003d\"images/jellypenguinnn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JellyPenguinnn"},"content":"[[github](http://github.com/jellypenguinnn)]","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JellyPenguinnn"},"content":"[[portfolio](team/jellypenguinnn.md)]","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jaynon"},"content":"### Jaynon","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jaynon"},"content":"\u003cimg src\u003d\"images/jaynon.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jaynon"},"content":"[[github](http://github.com/Jaynon)]","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jaynon"},"content":"[[portfolio](team/jaynon.md)]","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jaynon"},"content":"* Responsibilities: Data","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Al-ez"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"colinac":9,"Jaynon":6,"JellyPenguinnn":3,"-":37,"Al-ez":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"colinac"},"content":"* Administrative staff in small clinics","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"colinac"},"content":"* has a need an organized system for managing patient data","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"colinac"},"content":"* has a need to manage a significant number of patient data entries","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"colinac"},"content":"**Value proposition**:","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"colinac"},"content":"Small, private clinics do not have access to advanced administration systems to manage patients as they are expensive and meant for bigger hospitals.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"colinac"},"content":"ClinicBuddy enhances the patient management process for small clinics, creating a platform to track patient information such as contact information, address and other basic personal data.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"| Priority | As a …​                    | I want to …​                       | So that I can…​                                                                                                   |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"colinac"},"content":"|----------|----------------------------|------------------------------------|-------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"colinac"},"content":"| `* * *`  | user                       | add a new patient                  | I can create new patient records                                                                                  |","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"colinac"},"content":"| `* * *`  | user                       | edit a record after submitting it  | I can make modifications to erroneous records which may have been submitted after keying a command in too quickly |","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"colinac"},"content":"| `* * *`  | user                       | delete a patient\u0027s record          | remove entries that I no longer need                                                                              |","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"colinac"},"content":"| `* * *`  | user                       | search for a patient by name or ID | I can quickly access their information when needed                                                                |","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"colinac"},"content":"| `* * *`  | user                       | backup data \t                      | Patients data can be restored should the records be corrupted                                                     |","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"colinac"},"content":"| `* * `   | user who may make mistakes | undo commands                      | I can reverse recently executed commands if the command should not have been executed                             |","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"colinac"},"content":"(For all use cases below, the **System** is the `ClinicBuddy` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"colinac"},"content":"**Use case: Add a new patient**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"colinac"},"content":"**MSS**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"colinac"},"content":"1. User chooses to add a patient record.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"colinac"},"content":"2. ClinicBuddy adds a record.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"colinac"},"content":"Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"colinac"},"content":"Extensions:","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"colinac"},"content":"- 1a. Patient information contains fields with incorrect format.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"colinac"},"content":"  - 1a1. ClinicBuddy provides an error message informing the user of the error. ","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"colinac"},"content":"  - Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"colinac"},"content":"**Use case: Delete a person**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"colinac"},"content":"**MSS**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"colinac"},"content":"1. User inputs the NRIC of the patient whose record they want to delete to request for ClinicBuddy to delete that record.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"colinac"},"content":"2. ClinicBuddy deletes the record.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"colinac"},"content":"Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"colinac"},"content":"**Extensions**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"colinac"},"content":"* 1a. The NRIC is not of the correct format","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"colinac"},"content":"  - 1a1. ClinicBuddy shows an error message. ","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"ArtillerySun"},"content":"  - Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"colinac"},"content":"* 2a. The NRIC is not in the records.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"colinac"},"content":"  - 2a1. ClinicBuddy provides an error message informing the user of the error. ","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"colinac"},"content":"  - Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"colinac"},"content":" ","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"ArtillerySun"},"content":"**Use case: Edit a patient record**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"ArtillerySun"},"content":"**MSS**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"ArtillerySun"},"content":"1. User inputs the NRIC of the patient and the parameters to update.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"ArtillerySun"},"content":"2. ClinicBuddy update the record.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"ArtillerySun"},"content":"Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"ArtillerySun"},"content":"**Extensions**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"ArtillerySun"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"ArtillerySun"},"content":"* 1a. The NRIC is not of the correct format","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"ArtillerySun"},"content":"    - 1a1. ClinicBuddy shows an error message.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"ArtillerySun"},"content":"    - Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"ArtillerySun"},"content":"* 1b. The NRIC is not in the records.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"ArtillerySun"},"content":"    - 1b1. ClinicBuddy provides an error message informing the user of the error.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"ArtillerySun"},"content":"    - Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"ArtillerySun"},"content":"* 1c. The parameter format is invalid.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"ArtillerySun"},"content":"    - 1c1. ClinicBuddy provides an error message informing the user of the error.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"ArtillerySun"},"content":"    - Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"ArtillerySun"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"ArtillerySun"},"content":"**Use case: Search a record**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"ArtillerySun"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"ArtillerySun"},"content":"**MSS**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"ArtillerySun"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"ArtillerySun"},"content":"1. User inputs the NRIC or the name of the patient to search for.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"ArtillerySun"},"content":"2. ClinicBuddy search and return the record.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"ArtillerySun"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"ArtillerySun"},"content":"Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"ArtillerySun"},"content":"**Extensions**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"ArtillerySun"},"content":"* 1a. The NRIC is not of the correct format","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"ArtillerySun"},"content":"    - 1a1. ClinicBuddy shows an error message.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"ArtillerySun"},"content":"    - Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"ArtillerySun"},"content":"* 1b. No matching patient records are found.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"ArtillerySun"},"content":"    - 1b1. ClinicBuddy displays a message indicating no matches were found.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"ArtillerySun"},"content":"    - Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"colinac"},"content":"**Use case: Backup data**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"ArtillerySun"},"content":"**MSS**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"ArtillerySun"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"ArtillerySun"},"content":"1. User inputs the command with the destination path to store the file.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"ArtillerySun"},"content":"2. ClinicBuddy creates a backup file in the destination path.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"ArtillerySun"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"ArtillerySun"},"content":"Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"ArtillerySun"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"ArtillerySun"},"content":"**Extensions**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"ArtillerySun"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"ArtillerySun"},"content":"* 1a. The destination path is invalid","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"ArtillerySun"},"content":"    - 1a1. ClinicBuddy displays an error message to inform the user.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"ArtillerySun"},"content":"    - Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"ArtillerySun"},"content":"* 1b. Backup failure due to system issues","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"ArtillerySun"},"content":"    - 1b1. ClinicBuddy displays an error message to inform the user.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"ArtillerySun"},"content":"    - Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"ArtillerySun"},"content":"* 2a. Backup file with the same name already exists","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"ArtillerySun"},"content":"    - 2a1. ClinicBuddy prompts the user to confirm if they want to overwrite the existing file.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"ArtillerySun"},"content":"        If Yes: The backup file is overwritten.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"ArtillerySun"},"content":"        If No: The user is prompted to provide a new destination path or filename.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"ArtillerySun"},"content":"    - Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"ArtillerySun"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"colinac"},"content":"**Use case: Undo a command**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"ArtillerySun"},"content":"**MSS**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"ArtillerySun"},"content":"1. User requests to undo the last command.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"ArtillerySun"},"content":"2. ClinicBuddy reverts the system state to before the last command.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"ArtillerySun"},"content":"Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"ArtillerySun"},"content":"**Extensions**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"ArtillerySun"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"ArtillerySun"},"content":"* 1a. There are no commands to undo.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"ArtillerySun"},"content":"    - 1a1. ClinicBuddy informs the user that there is no action to undo.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"ArtillerySun"},"content":"    - Use case ends.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"colinac"},"content":"Example","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"JellyPenguinnn"},"content":"### **Non-Functional Requirements**","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"JellyPenguinnn"},"content":"1. **Compatibility**: ","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"JellyPenguinnn"},"content":"    - Should work on any _mainstream OS_ (e.g., **Windows, macOS, Linux**) as long as it has **Java 17** or above installed.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"JellyPenguinnn"},"content":"2. **Performance**:","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"JellyPenguinnn"},"content":"    - Should be able to hold up to **1,000 patient records** within 2 seconds for typical usage.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"JellyPenguinnn"},"content":"    - The system must support up to **10,000 patient records** without performance degradation under heavy load.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"JellyPenguinnn"},"content":"3. **User Efficiency**:","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"JellyPenguinnn"},"content":"    - A user with typing speed above **40 words per minute** for regular English text (i.e., not code, not system admin commands) should be able to accomplish most tasks faster using commands than the mouse.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"JellyPenguinnn"},"content":"4. **Scalability**: ","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"JellyPenguinnn"},"content":"    - The system should be able to scale to handle **up to 10,000 patient records** without performance degradation.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"JellyPenguinnn"},"content":"5. **Security**:","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"JellyPenguinnn"},"content":"    - **Sensitive patient information** (e.g., medical records, contact details) must be accessible only by **authorized personnel** (e.g., clinic staff, administrators).","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"JellyPenguinnn"},"content":"6. **Data Processing**:","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"JellyPenguinnn"},"content":"    - The system must process and display patient information (e.g., patient records) within **2 seconds** of a user request under normal operating conditions (up to **1,000 records**).","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"JellyPenguinnn"},"content":"7. **Usability**:","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"JellyPenguinnn"},"content":"    - New users, such as clinic staff, should be able to learn basic operations (e.g., create, update, search, delete records) within **6 hours of hands-on training**.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"JellyPenguinnn"},"content":"    - The system must be accessible to users with basic computer skills, ensuring that text and interface elements are **clear and easy to understand**.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"JellyPenguinnn"},"content":"8. **Error Handling**:","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"JellyPenguinnn"},"content":"    - The system must provide **clear error messages** in case of invalid input and revert to a stable state in the event of system errors.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"JellyPenguinnn"},"content":"9. **Data Recovery**:","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"JellyPenguinnn"},"content":"    - In the event of a system crash, patient data should not be lost. ","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"JellyPenguinnn"},"content":"    - The system must recover data from the **last automatic backup**, with no more than **5% data loss** in the worst-case scenario.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"JellyPenguinnn"},"content":"10. **Maintainability and Extensibility**:","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"JellyPenguinnn"},"content":"    - The system should be designed in a way that future updates (e.g., adding new features or fixing bugs) can be made **easily** and **without extensive rewrites** to existing code.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"JellyPenguinnn"},"content":"    - The codebase should follow **industry-standard practices** such as **modular design**, **consistent naming conventions**, and **proper documentation** to facilitate maintenance and future feature additions.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"Al-ez"},"content":"* **API (Application Programming Interface)**: A set of rules and protocols for building and interacting with software applications, specifying how components communicate","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"Al-ez"},"content":"* **Parser**: A component that interprets user commands and translates them into Command objects for execution","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"Al-ez"},"content":"* **AddressBook**: A digital record that stores contact information for individuals including names, addresses, phone numbers, and other relevant details","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"Al-ez"},"content":"* **Command**: A directive issued by a user to a software application to perform a specific action or operation","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"Al-ez"},"content":"* **CommandResult**: An object that encapsulates the result of executing a command, including success status and any output messages","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"colinac":62,"JellyPenguinnn":33,"-":367,"ArtillerySun":63,"Al-ez":5}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jaynon"},"content":"ClinicBuddy aims to enhance the patient management process for small clinics, creating a platform to track patient information such as their treatment, contact information, visit records and future appointments while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `17` or above installed in your Computer.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Download the latest `.jar` file from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"Jaynon":1,"-":198}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jaynon"},"content":"title: ClinicBuddy","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jaynon"},"content":"[![CI Status](https://github.com/AY2425S1-CS2103T-F11-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2425S1-CS2103T-F11-3/tp/actions)","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jaynon"},"content":"**ClinicBuddy aims to enhance the patient management process for small clinics**, creating a platform to track patient information such as their treatment, contact information, visit records and future appointments while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jaynon"},"content":"* If you are interested in using ClinicBuddy, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jaynon"},"content":"* If you are interested about developing ClinicBuddy, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"Jaynon":5,"-":14}},{"path":"docs/team/al-ez.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Al-ez"},"content":"---","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Al-ez"},"content":"layout: page","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Al-ez"},"content":"title: al-ez\u0027s Project Portfolio Page","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Al-ez"},"content":"---","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Al-ez"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Al-ez"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Al-ez"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Al-ez"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Al-ez"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Al-ez"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Al-ez"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Al-ez"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Al-ez"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Al-ez"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Al-ez"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Al-ez"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Al-ez"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Al-ez"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Al-ez"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Al-ez"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Al-ez"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Al-ez"},"content":"* **Project management**:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Al-ez"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Al-ez"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Al-ez"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Al-ez"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Al-ez"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Al-ez"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Al-ez"},"content":"* **Documentation**:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Al-ez"},"content":"    * User Guide:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Al-ez"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Al-ez"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Al-ez"},"content":"    * Developer Guide:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Al-ez"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Al-ez"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Al-ez"},"content":"* **Community**:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Al-ez"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Al-ez"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Al-ez"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Al-ez"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Al-ez"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Al-ez"},"content":"* **Tools**:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Al-ez"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Al-ez"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Al-ez"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Al-ez"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"Al-ez":46}},{"path":"docs/team/colinac.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"colinac"},"content":"---","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"colinac"},"content":"layout: page","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"colinac"},"content":"title: Colin\u0027s Project Portfolio Page","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"colinac"},"content":"---","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"colinac"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"colinac"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"colinac"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"colinac":9}},{"path":"docs/team/jaynon.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jaynon"},"content":"---","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jaynon"},"content":"layout: page","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jaynon"},"content":"title: Jaynon\u0027s Project Portfolio Page","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jaynon"},"content":"---","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jaynon"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jaynon"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jaynon"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jaynon"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jaynon"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jaynon"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jaynon"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jaynon"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jaynon"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jaynon"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jaynon"},"content":"* **Project management**:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jaynon"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jaynon"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jaynon"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jaynon"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jaynon"},"content":"* **Documentation**:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jaynon"},"content":"    * User Guide:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jaynon"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jaynon"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jaynon"},"content":"    * Developer Guide:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jaynon"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jaynon"},"content":"* **Community**:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jaynon"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jaynon"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jaynon"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jaynon"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jaynon"},"content":"* **Tools**:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jaynon"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jaynon"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jaynon"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jaynon"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"Jaynon":46}},{"path":"docs/team/jellypenguinnn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JellyPenguinnn"},"content":"title: JellyPenguinnn\u0027s Project Portfolio Page","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":1,"-":45}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JellyPenguinnn"},"content":"     * Initializes the application.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JellyPenguinnn"},"content":"     *","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JellyPenguinnn"},"content":"     * @throws Exception if initialization fails.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JellyPenguinnn"},"content":"    protected Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JellyPenguinnn"},"content":"        return new ModelManager(initialData, userPrefs, storage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JellyPenguinnn"},"content":"     * Starts the application UI.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JellyPenguinnn"},"content":"     *","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JellyPenguinnn"},"content":"     * @param primaryStage The primary stage for the application.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"JellyPenguinnn"},"content":"     * Stops the application and saves user preferences.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping AddressBook ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":16,"-":184}},{"path":"src/main/java/seedu/address/logic/commands/BackupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JellyPenguinnn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JellyPenguinnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JellyPenguinnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JellyPenguinnn"},"content":"import java.util.Objects;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JellyPenguinnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JellyPenguinnn"},"content":"/**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JellyPenguinnn"},"content":" * Backs up the current address book to a user-specified destination.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JellyPenguinnn"},"content":" */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JellyPenguinnn"},"content":"public class BackupCommand extends Command {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JellyPenguinnn"},"content":"    public static final String COMMAND_WORD \u003d \"backup\";","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JellyPenguinnn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JellyPenguinnn"},"content":"            + \": Backs up the current data to the specified file path.\\n\"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JellyPenguinnn"},"content":"            + \"Parameters: DESTINATION_PATH (must be a valid path)\\n\"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JellyPenguinnn"},"content":"            + \"Example: \" + COMMAND_WORD + \" /path/to/backup.json\";","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JellyPenguinnn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Backup successful at %s\";","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JellyPenguinnn"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Backup failed due to: %s\";","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JellyPenguinnn"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(BackupCommand.class);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JellyPenguinnn"},"content":"    private final String destinationPath;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JellyPenguinnn"},"content":"     * Constructs a {@code BackupCommand} with the given destination path.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JellyPenguinnn"},"content":"     *","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JellyPenguinnn"},"content":"     * @param destinationPath The path where the backup will be stored. Must not be null.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JellyPenguinnn"},"content":"     * @throws NullPointerException if the destination path is null.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JellyPenguinnn"},"content":"    public BackupCommand(String destinationPath) {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JellyPenguinnn"},"content":"        requireNonNull(destinationPath, \"Destination path must not be null.\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JellyPenguinnn"},"content":"        this.destinationPath \u003d destinationPath;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JellyPenguinnn"},"content":"     * Executes the backup command to save the current state of the address book.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JellyPenguinnn"},"content":"     *","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JellyPenguinnn"},"content":"     * @param model The model containing the current state of the address book. Must not be null.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JellyPenguinnn"},"content":"     * @return The result of the command execution.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JellyPenguinnn"},"content":"     * @throws CommandException if the backup operation fails.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JellyPenguinnn"},"content":"    @Override","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JellyPenguinnn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JellyPenguinnn"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JellyPenguinnn"},"content":"        if (model.getStorage() \u003d\u003d null) {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JellyPenguinnn"},"content":"            logger.warning(\"Storage is not initialized, cannot proceed with backup.\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JellyPenguinnn"},"content":"            throw new CommandException(String.format(MESSAGE_FAILURE, \"Storage is not initialized!\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JellyPenguinnn"},"content":"        }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JellyPenguinnn"},"content":"        try {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JellyPenguinnn"},"content":"            logger.info(\"Starting backup to path: \" + destinationPath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JellyPenguinnn"},"content":"            model.backupData(destinationPath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JellyPenguinnn"},"content":"            logger.info(\"Backup successful.\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JellyPenguinnn"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, destinationPath));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JellyPenguinnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JellyPenguinnn"},"content":"            logger.severe(\"Backup failed: \" + e.getMessage());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JellyPenguinnn"},"content":"            throw new CommandException(String.format(MESSAGE_FAILURE, e.getMessage()));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JellyPenguinnn"},"content":"        }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JellyPenguinnn"},"content":"    @Override","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JellyPenguinnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JellyPenguinnn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JellyPenguinnn"},"content":"            return true;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JellyPenguinnn"},"content":"        }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JellyPenguinnn"},"content":"        if (!(other instanceof BackupCommand)) {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JellyPenguinnn"},"content":"            return false;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JellyPenguinnn"},"content":"        }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JellyPenguinnn"},"content":"        BackupCommand otherCommand \u003d (BackupCommand) other;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JellyPenguinnn"},"content":"        return Objects.equals(destinationPath, otherCommand.destinationPath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JellyPenguinnn"},"content":"    @Override","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JellyPenguinnn"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JellyPenguinnn"},"content":"        return Objects.hash(destinationPath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JellyPenguinnn"},"content":"    public String getDestinationPath() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JellyPenguinnn"},"content":"        return destinationPath;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JellyPenguinnn"},"content":"}","lastModifiedDate":"2024-10-06","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":90}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.logic.commands.BackupCommand;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JellyPenguinnn"},"content":"        case BackupCommand.COMMAND_WORD:","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JellyPenguinnn"},"content":"            return new BackupCommandParser().parse(arguments);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":4,"-":82}},{"path":"src/main/java/seedu/address/logic/parser/BackupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JellyPenguinnn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.logic.commands.BackupCommand;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JellyPenguinnn"},"content":"/**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JellyPenguinnn"},"content":" * Parses input arguments and creates a new BackupCommand object","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JellyPenguinnn"},"content":" */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JellyPenguinnn"},"content":"public class BackupCommandParser implements Parser\u003cBackupCommand\u003e {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JellyPenguinnn"},"content":"     * Parses the given {@code String} of arguments to create a new {@code BackupCommand} object.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JellyPenguinnn"},"content":"     *","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JellyPenguinnn"},"content":"     * @param args User-provided arguments for the backup command.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JellyPenguinnn"},"content":"     * @return A new BackupCommand object containing the parsed arguments.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JellyPenguinnn"},"content":"     * @throws ParseException if the user input does not match the expected format.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JellyPenguinnn"},"content":"    @Override","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JellyPenguinnn"},"content":"    public BackupCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JellyPenguinnn"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JellyPenguinnn"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JellyPenguinnn"},"content":"            throw new ParseException(BackupCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JellyPenguinnn"},"content":"        }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JellyPenguinnn"},"content":"        return new BackupCommand(trimmedArgs);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JellyPenguinnn"},"content":"}","lastModifiedDate":"2024-10-06","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":26}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JellyPenguinnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JellyPenguinnn"},"content":"     * Backs up the data to the specified file path.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JellyPenguinnn"},"content":"     *","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JellyPenguinnn"},"content":"     * @param filePath The file path where the backup data will be saved. Must not be null.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JellyPenguinnn"},"content":"     * @throws IOException if an error occurs during saving the data.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JellyPenguinnn"},"content":"    void backupData(String filePath) throws IOException;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JellyPenguinnn"},"content":"     * Returns the Storage object associated with the model.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JellyPenguinnn"},"content":"    Storage getStorage();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":15,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JellyPenguinnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JellyPenguinnn"},"content":"    private final Storage storage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JellyPenguinnn"},"content":"     * Initializes a ModelManager with the given address book and user preferences.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JellyPenguinnn"},"content":"     *","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JellyPenguinnn"},"content":"     * @param addressBook The address book data to initialize the model with.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JellyPenguinnn"},"content":"     * @param userPrefs The user preferences to initialize the model with.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JellyPenguinnn"},"content":"     * @param storage The storage to be used by the model.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JellyPenguinnn"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, Storage storage) {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JellyPenguinnn"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JellyPenguinnn"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JellyPenguinnn"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JellyPenguinnn"},"content":"                + \", user prefs \" + userPrefs","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JellyPenguinnn"},"content":"                + \" and storage \" + storage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JellyPenguinnn"},"content":"        this.storage \u003d storage; // Storage can be null now.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JellyPenguinnn"},"content":"        this(new AddressBook(), new UserPrefs(), null);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JellyPenguinnn"},"content":"     * Backs up the data to the specified file path.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JellyPenguinnn"},"content":"     *","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JellyPenguinnn"},"content":"     * @param filePath The file path where the backup data will be saved. Must not be null.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JellyPenguinnn"},"content":"     * @throws IOException if an error occurs during saving the data.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JellyPenguinnn"},"content":"    @Override","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JellyPenguinnn"},"content":"    public void backupData(String filePath) throws IOException {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JellyPenguinnn"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JellyPenguinnn"},"content":"        if (storage !\u003d null) {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JellyPenguinnn"},"content":"            storage.saveAddressBook(this.getAddressBook(), Path.of(filePath));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JellyPenguinnn"},"content":"        } else {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JellyPenguinnn"},"content":"            throw new IOException(\"Storage is not initialized!\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JellyPenguinnn"},"content":"        }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JellyPenguinnn"},"content":"    @Override","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JellyPenguinnn"},"content":"    public Storage getStorage() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JellyPenguinnn"},"content":"        return storage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":37,"-":142}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JellyPenguinnn"},"content":"     * Saves the address book to the specified file path.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JellyPenguinnn"},"content":"     *","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JellyPenguinnn"},"content":"     * @param addressBook The address book data to save.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JellyPenguinnn"},"content":"     * @param filePath The file path where the address book will be saved.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JellyPenguinnn"},"content":"     * @throws IOException if there is an error saving the address book.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JellyPenguinnn"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":9,"-":32}},{"path":"src/test/java/seedu/address/MainAppTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JellyPenguinnn"},"content":"package seedu.address;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JellyPenguinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JellyPenguinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JellyPenguinnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JellyPenguinnn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JellyPenguinnn"},"content":"public class MainAppTest {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JellyPenguinnn"},"content":"    @TempDir","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JellyPenguinnn"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JellyPenguinnn"},"content":"    private MainApp mainApp;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JellyPenguinnn"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JellyPenguinnn"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JellyPenguinnn"},"content":"        mainApp \u003d new MainApp();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JellyPenguinnn"},"content":"    public void initModelManager_validStorageAndUserPrefs_doesNotThrow() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JellyPenguinnn"},"content":"        Path addressBookPath \u003d temporaryFolder.resolve(\"addressbook.json\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JellyPenguinnn"},"content":"        Path userPrefsPath \u003d temporaryFolder.resolve(\"userprefs.json\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(addressBookPath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(userPrefsPath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JellyPenguinnn"},"content":"        Storage storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JellyPenguinnn"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JellyPenguinnn"},"content":"        userPrefs.setAddressBookFilePath(addressBookPath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JellyPenguinnn"},"content":"        // Test that initModelManager does not throw any exceptions","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JellyPenguinnn"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JellyPenguinnn"},"content":"            Model model \u003d mainApp.initModelManager(storage, userPrefs);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JellyPenguinnn"},"content":"            assertNotNull(model);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JellyPenguinnn"},"content":"        });","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JellyPenguinnn"},"content":"    public void initModelManager_storageWithoutAddressBook_usesSampleData() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JellyPenguinnn"},"content":"        Path addressBookPath \u003d temporaryFolder.resolve(\"non_existent_addressbook.json\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JellyPenguinnn"},"content":"        Path userPrefsPath \u003d temporaryFolder.resolve(\"userprefs.json\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(addressBookPath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(userPrefsPath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JellyPenguinnn"},"content":"        Storage storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JellyPenguinnn"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JellyPenguinnn"},"content":"        userPrefs.setAddressBookFilePath(addressBookPath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JellyPenguinnn"},"content":"        // Test that the model is initialized even if the address book file is not present","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JellyPenguinnn"},"content":"        Model model \u003d mainApp.initModelManager(storage, userPrefs);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JellyPenguinnn"},"content":"        assertNotNull(model);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JellyPenguinnn"},"content":"    public void initModelManager_storageWithAddressBook_loadsAddressBook() throws IOException, DataLoadingException {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JellyPenguinnn"},"content":"        Path addressBookPath \u003d temporaryFolder.resolve(\"addressbook.json\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JellyPenguinnn"},"content":"        Path userPrefsPath \u003d temporaryFolder.resolve(\"userprefs.json\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(addressBookPath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(userPrefsPath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JellyPenguinnn"},"content":"        Storage storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JellyPenguinnn"},"content":"        // Create a sample address book file","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JellyPenguinnn"},"content":"        ReadOnlyAddressBook sampleAddressBook \u003d seedu.address.model.util.SampleDataUtil.getSampleAddressBook();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JellyPenguinnn"},"content":"        addressBookStorage.saveAddressBook(sampleAddressBook);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JellyPenguinnn"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JellyPenguinnn"},"content":"        userPrefs.setAddressBookFilePath(addressBookPath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JellyPenguinnn"},"content":"        // Test that the model is initialized with the sample address book","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JellyPenguinnn"},"content":"        Model model \u003d mainApp.initModelManager(storage, userPrefs);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JellyPenguinnn"},"content":"        assertNotNull(model);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JellyPenguinnn"},"content":"}","lastModifiedDate":"2024-10-06","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":89}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JellyPenguinnn"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JellyPenguinnn"},"content":"/**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JellyPenguinnn"},"content":" * Tests for the LogicManager class.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JellyPenguinnn"},"content":" */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JellyPenguinnn"},"content":"    private Model model;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JellyPenguinnn"},"content":"     * Sets up the test environment with the required model and storage.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JellyPenguinnn"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JellyPenguinnn"},"content":"     * Tests the execution of an invalid command format, expecting a ParseException.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JellyPenguinnn"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JellyPenguinnn"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage)","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JellyPenguinnn"},"content":"            throws CommandException, ParseException {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JellyPenguinnn"},"content":"     * Executes the command and confirms that the specified","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JellyPenguinnn"},"content":"     * {@code expectedException} is thrown and the message is correct.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JellyPenguinnn"},"content":"        // Create a snapshot of key model attributes before injecting faulty storage","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JellyPenguinnn"},"content":"        ReadOnlyAddressBook initialAddressBook \u003d model.getAddressBook();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JellyPenguinnn"},"content":"        UserPrefs initialUserPrefs \u003d new UserPrefs(model.getUserPrefs());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JellyPenguinnn"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e logic.execute(addCommand));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JellyPenguinnn"},"content":"        // Verify that the model\u0027s state remains unchanged after the failure","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JellyPenguinnn"},"content":"        assertEquals(initialAddressBook, model.getAddressBook());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JellyPenguinnn"},"content":"        assertEquals(initialUserPrefs, model.getUserPrefs());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":27,"-":142}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JellyPenguinnn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JellyPenguinnn"},"content":"    @TempDir","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JellyPenguinnn"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JellyPenguinnn"},"content":"     * Sets up the test environment with the required model and storage.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JellyPenguinnn"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JellyPenguinnn"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JellyPenguinnn"},"content":"     * Tests the successful execution of adding a new person.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"expectedAddressBook.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"expectedUserPrefs.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JellyPenguinnn"},"content":"        StorageManager expectedStorage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JellyPenguinnn"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), expectedStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JellyPenguinnn"},"content":"     * Tests the command failure when trying to add a duplicate person.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":28,"-":46}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JellyPenguinnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JellyPenguinnn"},"content":"/**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JellyPenguinnn"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JellyPenguinnn"},"content":" */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JellyPenguinnn"},"content":"        @Override","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JellyPenguinnn"},"content":"        public void backupData(String filePath) throws IOException {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JellyPenguinnn"},"content":"        }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JellyPenguinnn"},"content":"        @Override","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JellyPenguinnn"},"content":"        public Storage getStorage() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JellyPenguinnn"},"content":"            return null;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JellyPenguinnn"},"content":"        }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":14,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/BackupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JellyPenguinnn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JellyPenguinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JellyPenguinnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JellyPenguinnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JellyPenguinnn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JellyPenguinnn"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JellyPenguinnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JellyPenguinnn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JellyPenguinnn"},"content":"import java.util.Optional;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JellyPenguinnn"},"content":"/**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JellyPenguinnn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code BackupCommand}.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JellyPenguinnn"},"content":" */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JellyPenguinnn"},"content":"public class BackupCommandTest {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JellyPenguinnn"},"content":"    @TempDir","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JellyPenguinnn"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JellyPenguinnn"},"content":"    private Model model;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JellyPenguinnn"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JellyPenguinnn"},"content":"     * Sets up the test environment with the required model and storage.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JellyPenguinnn"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JellyPenguinnn"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JellyPenguinnn"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JellyPenguinnn"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookExpectedStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBookExpected.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsExpectedStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefsExpected.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JellyPenguinnn"},"content":"        StorageManager expectedStorage \u003d new StorageManager(addressBookExpectedStorage, userPrefsExpectedStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JellyPenguinnn"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), expectedStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JellyPenguinnn"},"content":"     * Tests the successful backup command execution with added patients.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JellyPenguinnn"},"content":"     *","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JellyPenguinnn"},"content":"     * @throws Exception if the execution of the command fails.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JellyPenguinnn"},"content":"    public void executeBackupCommand_withAddedPatients_success() throws Exception {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JellyPenguinnn"},"content":"        // Step 1: Add new patient records using AddCommand","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JellyPenguinnn"},"content":"        Person newPerson \u003d new PersonBuilder().withName(\"John Doe\").withPhone(\"98765432\")","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JellyPenguinnn"},"content":"                .withAddress(\"123 Baker Street\").withEmail(\"john.doe@example.com\").build();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JellyPenguinnn"},"content":"        AddCommand addCommand \u003d new AddCommand(newPerson);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JellyPenguinnn"},"content":"        addCommand.execute(model); // Add to the actual model","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JellyPenguinnn"},"content":"        // Also add to the expected model","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JellyPenguinnn"},"content":"        expectedModel.addPerson(newPerson);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JellyPenguinnn"},"content":"        // Step 2: Execute BackupCommand","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JellyPenguinnn"},"content":"        String backupFilePath \u003d temporaryFolder.resolve(\"backup.json\").toString();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JellyPenguinnn"},"content":"        BackupCommand backupCommand \u003d new BackupCommand(backupFilePath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JellyPenguinnn"},"content":"        String expectedMessage \u003d String.format(BackupCommand.MESSAGE_SUCCESS, backupFilePath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JellyPenguinnn"},"content":"        // Step 3: Verify backup command success","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JellyPenguinnn"},"content":"        assertCommandSuccess(backupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JellyPenguinnn"},"content":"        // Step 4: Verify that the backup file has been created","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JellyPenguinnn"},"content":"        assertTrue(Path.of(backupFilePath).toFile().exists());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JellyPenguinnn"},"content":"     * Tests the failure of the backup command when the path is null.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JellyPenguinnn"},"content":"    public void executeBackupCommand_nullPath_throwsNullPointerException() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JellyPenguinnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new BackupCommand(null));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JellyPenguinnn"},"content":"     * Tests the failure of the backup command when an IOException occurs.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JellyPenguinnn"},"content":"    public void executeBackupCommand_ioException_throwsCommandException() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JellyPenguinnn"},"content":"        // Use a storage that always throws IOException","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JellyPenguinnn"},"content":"        Storage storageStub \u003d createStorageStubForIoException();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JellyPenguinnn"},"content":"        Model modelWithFailingStorage \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), storageStub);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JellyPenguinnn"},"content":"        String backupFilePath \u003d temporaryFolder.resolve(\"backup.json\").toString();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JellyPenguinnn"},"content":"        BackupCommand backupCommand \u003d new BackupCommand(backupFilePath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JellyPenguinnn"},"content":"        assertCommandFailure(backupCommand, modelWithFailingStorage, String.format(","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JellyPenguinnn"},"content":"                BackupCommand.MESSAGE_FAILURE, \"Simulated IOException\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JellyPenguinnn"},"content":"    private Storage createStorageStubForIoException() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JellyPenguinnn"},"content":"        return new Storage() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JellyPenguinnn"},"content":"            @Override","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JellyPenguinnn"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JellyPenguinnn"},"content":"                throw new IOException(\"Simulated IOException\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JellyPenguinnn"},"content":"            }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JellyPenguinnn"},"content":"            @Override","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JellyPenguinnn"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JellyPenguinnn"},"content":"                // No-op","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JellyPenguinnn"},"content":"            }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JellyPenguinnn"},"content":"            @Override","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JellyPenguinnn"},"content":"            public Optional\u003cUserPrefs\u003e readUserPrefs() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JellyPenguinnn"},"content":"                return Optional.empty();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JellyPenguinnn"},"content":"            }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JellyPenguinnn"},"content":"            @Override","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JellyPenguinnn"},"content":"            public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JellyPenguinnn"},"content":"                // No-op","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JellyPenguinnn"},"content":"            }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JellyPenguinnn"},"content":"            @Override","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JellyPenguinnn"},"content":"            public Path getAddressBookFilePath() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JellyPenguinnn"},"content":"                return null;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JellyPenguinnn"},"content":"            }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JellyPenguinnn"},"content":"            @Override","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JellyPenguinnn"},"content":"            public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JellyPenguinnn"},"content":"                return Optional.empty();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JellyPenguinnn"},"content":"            }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JellyPenguinnn"},"content":"            @Override","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JellyPenguinnn"},"content":"            public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JellyPenguinnn"},"content":"                return Optional.empty();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JellyPenguinnn"},"content":"            }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JellyPenguinnn"},"content":"            @Override","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JellyPenguinnn"},"content":"            public Path getUserPrefsFilePath() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JellyPenguinnn"},"content":"                return null;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JellyPenguinnn"},"content":"            }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"JellyPenguinnn"},"content":"        };","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JellyPenguinnn"},"content":"    public void executeBackupCommand_success() throws Exception {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JellyPenguinnn"},"content":"        String backupFilePath \u003d temporaryFolder.resolve(\"backup.json\").toString();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JellyPenguinnn"},"content":"        BackupCommand backupCommand \u003d new BackupCommand(backupFilePath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JellyPenguinnn"},"content":"        String expectedMessage \u003d String.format(BackupCommand.MESSAGE_SUCCESS, backupFilePath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JellyPenguinnn"},"content":"        assertCommandSuccess(backupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JellyPenguinnn"},"content":"        // Step to validate that backupData() was called","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JellyPenguinnn"},"content":"        assertTrue(Path.of(backupFilePath).toFile().exists(), \"Backup file should have been created.\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JellyPenguinnn"},"content":"}","lastModifiedDate":"2024-10-06","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":170}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JellyPenguinnn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JellyPenguinnn"},"content":"/**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JellyPenguinnn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code ClearCommand}.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JellyPenguinnn"},"content":" */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JellyPenguinnn"},"content":"    @TempDir","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JellyPenguinnn"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JellyPenguinnn"},"content":"    private StorageManager storage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JellyPenguinnn"},"content":"     * Sets up the test environment with the required model and storage.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JellyPenguinnn"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JellyPenguinnn"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JellyPenguinnn"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JellyPenguinnn"},"content":"    private Model createModelWithAddressBook(AddressBook addressBook) {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JellyPenguinnn"},"content":"        return new ModelManager(addressBook, new UserPrefs(), storage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JellyPenguinnn"},"content":"     * Tests the successful execution of clearing an empty address book.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JellyPenguinnn"},"content":"        Model model \u003d createModelWithAddressBook(new AddressBook());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JellyPenguinnn"},"content":"        Model expectedModel \u003d createModelWithAddressBook(new AddressBook());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JellyPenguinnn"},"content":"     * Tests the successful execution of clearing a non-empty address book.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JellyPenguinnn"},"content":"        Model model \u003d createModelWithAddressBook(getTypicalAddressBook());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JellyPenguinnn"},"content":"        Model expectedModel \u003d createModelWithAddressBook(getTypicalAddressBook());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":41,"-":28}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JellyPenguinnn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JellyPenguinnn"},"content":"    @TempDir","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JellyPenguinnn"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JellyPenguinnn"},"content":"    private Model model;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JellyPenguinnn"},"content":"     * Sets up the test environment with the required model and storage.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JellyPenguinnn"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JellyPenguinnn"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JellyPenguinnn"},"content":"        StorageManager storage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JellyPenguinnn"},"content":"                new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JellyPenguinnn"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JellyPenguinnn"},"content":"     * Tests the successful deletion of a person given a valid index.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JellyPenguinnn"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getStorage());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JellyPenguinnn"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getStorage());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":30,"-":118}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JellyPenguinnn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JellyPenguinnn"},"content":"    @TempDir","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JellyPenguinnn"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JellyPenguinnn"},"content":"    private Model model;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JellyPenguinnn"},"content":"     * Sets up the test environment with the required model and storage.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JellyPenguinnn"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JellyPenguinnn"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JellyPenguinnn"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JellyPenguinnn"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JellyPenguinnn"},"content":"     * Tests the successful execution of editing all fields in an unfiltered list.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JellyPenguinnn"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JellyPenguinnn"},"content":"                new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(), model.getStorage());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JellyPenguinnn"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JellyPenguinnn"},"content":"                new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(), model.getStorage());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JellyPenguinnn"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JellyPenguinnn"},"content":"                new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(), model.getStorage());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JellyPenguinnn"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JellyPenguinnn"},"content":"                new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(), model.getStorage());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":33,"-":180}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JellyPenguinnn"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JellyPenguinnn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JellyPenguinnn"},"content":"    @TempDir","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JellyPenguinnn"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JellyPenguinnn"},"content":"    private Model model;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JellyPenguinnn"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JellyPenguinnn"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JellyPenguinnn"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JellyPenguinnn"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JellyPenguinnn"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookExpectedStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsExpectedStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JellyPenguinnn"},"content":"        StorageManager expectedStorage \u003d new StorageManager(addressBookExpectedStorage, userPrefsExpectedStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JellyPenguinnn"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), expectedStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":32,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JellyPenguinnn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JellyPenguinnn"},"content":"    @TempDir","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JellyPenguinnn"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JellyPenguinnn"},"content":"    private Model model;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JellyPenguinnn"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JellyPenguinnn"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JellyPenguinnn"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JellyPenguinnn"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JellyPenguinnn"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookExpectedStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsExpectedStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JellyPenguinnn"},"content":"        StorageManager expectedStorage \u003d new StorageManager(addressBookExpectedStorage, userPrefsExpectedStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JellyPenguinnn"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), expectedStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":29,"-":89}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JellyPenguinnn"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JellyPenguinnn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JellyPenguinnn"},"content":"    @TempDir","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JellyPenguinnn"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JellyPenguinnn"},"content":"    private Model model;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JellyPenguinnn"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JellyPenguinnn"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JellyPenguinnn"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JellyPenguinnn"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JellyPenguinnn"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookExpectedStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsExpectedStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JellyPenguinnn"},"content":"        StorageManager expectedStorage \u003d new StorageManager(addressBookExpectedStorage, userPrefsExpectedStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JellyPenguinnn"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), expectedStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":32,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JellyPenguinnn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JellyPenguinnn"},"content":"    @TempDir","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JellyPenguinnn"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JellyPenguinnn"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JellyPenguinnn"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookExpectedStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsExpectedStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JellyPenguinnn"},"content":"        StorageManager expectedStorage \u003d new StorageManager(addressBookExpectedStorage, userPrefsExpectedStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JellyPenguinnn"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), expectedStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":23,"-":37}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.logic.commands.BackupCommand;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JellyPenguinnn"},"content":"    public void parseCommand_backup() throws Exception {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JellyPenguinnn"},"content":"        String backupPath \u003d \"/path/to/backup.json\";","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JellyPenguinnn"},"content":"        BackupCommand command \u003d (BackupCommand) parser.parseCommand(BackupCommand.COMMAND_WORD + \" \" + backupPath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JellyPenguinnn"},"content":"        assertEquals(new BackupCommand(backupPath), command);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":8,"-":101}},{"path":"src/test/java/seedu/address/logic/parser/BackupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JellyPenguinnn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JellyPenguinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JellyPenguinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JellyPenguinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JellyPenguinnn"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.logic.commands.BackupCommand;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JellyPenguinnn"},"content":"/**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JellyPenguinnn"},"content":" * Contains unit tests for {@code BackupCommandParser}.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JellyPenguinnn"},"content":" */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JellyPenguinnn"},"content":"public class BackupCommandParserTest {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JellyPenguinnn"},"content":"    private final BackupCommandParser parser \u003d new BackupCommandParser();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JellyPenguinnn"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JellyPenguinnn"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JellyPenguinnn"},"content":"    public void parse_whitespaceArgs_throwsParseException() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JellyPenguinnn"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"   \"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JellyPenguinnn"},"content":"    public void parse_nullArgs_throwsNullPointerException() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JellyPenguinnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JellyPenguinnn"},"content":"    public void parseCommandBackupInvalidArgsThrowsParseException() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JellyPenguinnn"},"content":"        BackupCommandParser parser \u003d new BackupCommandParser();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JellyPenguinnn"},"content":"        String invalidArgs \u003d \"\"; // Empty argument","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JellyPenguinnn"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(invalidArgs));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JellyPenguinnn"},"content":"    public void parse_validArgument_returnsBackupCommand() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JellyPenguinnn"},"content":"        BackupCommandParser parser \u003d new BackupCommandParser();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JellyPenguinnn"},"content":"        BackupCommand command \u003d null;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JellyPenguinnn"},"content":"        try {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JellyPenguinnn"},"content":"            command \u003d parser.parse(\"backup/validPath.json\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JellyPenguinnn"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JellyPenguinnn"},"content":"            fail(\"Parsing failed for valid input: \" + e.getMessage());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JellyPenguinnn"},"content":"        }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JellyPenguinnn"},"content":"        assertNotNull(command);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JellyPenguinnn"},"content":"        assertEquals(\"backup/validPath.json\", command.getDestinationPath());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JellyPenguinnn"},"content":"    public void parse_emptyArgument_throwsParseException() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JellyPenguinnn"},"content":"        BackupCommandParser parser \u003d new BackupCommandParser();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JellyPenguinnn"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"), \"Expected ParseException for empty input\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JellyPenguinnn"},"content":"}","lastModifiedDate":"2024-10-06","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":62}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JellyPenguinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JellyPenguinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JellyPenguinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JellyPenguinnn"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JellyPenguinnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JellyPenguinnn"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JellyPenguinnn"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JellyPenguinnn"},"content":"/**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JellyPenguinnn"},"content":" * Contains unit tests for {@code ModelManager}.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JellyPenguinnn"},"content":" */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JellyPenguinnn"},"content":"    @TempDir","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JellyPenguinnn"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JellyPenguinnn"},"content":"    private ModelManager modelManager;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JellyPenguinnn"},"content":"     * Sets up the test environment with the required storage.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JellyPenguinnn"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JellyPenguinnn"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JellyPenguinnn"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JellyPenguinnn"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JellyPenguinnn"},"content":"        modelManager \u003d new ModelManager(new AddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JellyPenguinnn"},"content":"     * Tests whether the constructor initializes the model correctly.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JellyPenguinnn"},"content":"        ModelManager modelManagerCopy \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JellyPenguinnn"},"content":"                new ModelManager(addressBook, userPrefs, modelManager.getStorage());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JellyPenguinnn"},"content":"        ModelManager modelManagerWithSameValues \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JellyPenguinnn"},"content":"                new ModelManager(addressBook, userPrefs, modelManager.getStorage());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JellyPenguinnn"},"content":"        assertEquals(modelManagerCopy, modelManagerWithSameValues);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JellyPenguinnn"},"content":"        assertEquals(modelManagerCopy, modelManagerCopy);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JellyPenguinnn"},"content":"        assertNotEquals(null, modelManagerCopy);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JellyPenguinnn"},"content":"        assertNotEquals(5, modelManagerCopy);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JellyPenguinnn"},"content":"        assertNotEquals(modelManagerCopy,","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JellyPenguinnn"},"content":"                new ModelManager(differentAddressBook, userPrefs, modelManager.getStorage()));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JellyPenguinnn"},"content":"        modelManagerCopy.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JellyPenguinnn"},"content":"        ModelManager modelWithFilteredPersons \u003d","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JellyPenguinnn"},"content":"                new ModelManager(addressBook, userPrefs, modelManager.getStorage());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JellyPenguinnn"},"content":"        assertNotEquals(modelManagerCopy, modelWithFilteredPersons);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JellyPenguinnn"},"content":"        modelManagerCopy.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JellyPenguinnn"},"content":"        assertNotEquals(modelManagerCopy,","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JellyPenguinnn"},"content":"                new ModelManager(addressBook, differentUserPrefs, modelManager.getStorage()));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JellyPenguinnn"},"content":"    public void backupData_validPath_success() throws Exception {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JellyPenguinnn"},"content":"        Path backupPath \u003d temporaryFolder.resolve(\"backup.json\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JellyPenguinnn"},"content":"        modelManager.backupData(backupPath.toString());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JellyPenguinnn"},"content":"        // Assert that the file was created successfully.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JellyPenguinnn"},"content":"        assertTrue(backupPath.toFile().exists(), \"Backup file should have been created successfully.\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JellyPenguinnn"},"content":"    public void modelManager_initialization_validStorage() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(Paths.get(\"data/addressBook.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(Paths.get(\"data/userPrefs.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"JellyPenguinnn"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"JellyPenguinnn"},"content":"        ModelManager modelManager \u003d new ModelManager(new AddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"JellyPenguinnn"},"content":"        assertNotNull(modelManager.getStorage(), \"Storage should not be null.\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"JellyPenguinnn"},"content":"        assertEquals(storage, modelManager.getStorage(), \"Storage should be initialized properly.\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"JellyPenguinnn"},"content":"    public void backupData_withValidStorage_noException() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(Paths.get(\"data/addressBook.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"JellyPenguinnn"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(Paths.get(\"data/userPrefs.json\"));","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"JellyPenguinnn"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"JellyPenguinnn"},"content":"        ModelManager modelManager \u003d new ModelManager(new AddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"JellyPenguinnn"},"content":"        String backupPath \u003d \"data/backup.json\";","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"JellyPenguinnn"},"content":"        try {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"JellyPenguinnn"},"content":"            modelManager.backupData(backupPath);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"JellyPenguinnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"JellyPenguinnn"},"content":"            fail(\"Backup should not throw IOException with valid storage: \" + e.getMessage());","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"JellyPenguinnn"},"content":"        }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"JellyPenguinnn"},"content":"    public void getStorage_returnsValidStorage() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"JellyPenguinnn"},"content":"        assertNotNull(modelManager.getStorage(), \"Storage should not be null.\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"JellyPenguinnn"},"content":"        assertEquals(modelManager.getStorage().getClass(),","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"JellyPenguinnn"},"content":"                StorageManager.class, \"Storage should be an instance of StorageManager.\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"JellyPenguinnn"},"content":"     * Tests the constructor that initializes ModelManager with null storage.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"JellyPenguinnn"},"content":"    public void constructor_nullStorage_success() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"JellyPenguinnn"},"content":"        ModelManager modelManagerWithoutStorage \u003d new ModelManager(new AddressBook(), new UserPrefs(), null);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"JellyPenguinnn"},"content":"        assertNotNull(modelManagerWithoutStorage,","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"JellyPenguinnn"},"content":"                \"ModelManager should be created successfully even with null storage.\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"JellyPenguinnn"},"content":"    /**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"JellyPenguinnn"},"content":"     * Tests the backupData method when storage is null.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"JellyPenguinnn"},"content":"     */","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"JellyPenguinnn"},"content":"    @Test","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"JellyPenguinnn"},"content":"    public void backupData_nullStorage_throwsIoException() {","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"JellyPenguinnn"},"content":"        ModelManager modelManagerWithoutStorage \u003d new ModelManager(new AddressBook(), new UserPrefs(), null);","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"JellyPenguinnn"},"content":"        String backupPath \u003d temporaryFolder.resolve(\"backup.json\").toString();","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"JellyPenguinnn"},"content":"        assertThrows(IOException.class, () -\u003e modelManagerWithoutStorage.backupData(backupPath),","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"JellyPenguinnn"},"content":"                \"Expected IOException when trying to back up with null storage.\");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"JellyPenguinnn"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"JellyPenguinnn"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31","isFullCredit":false}],"authorContributionMap":{"JellyPenguinnn":115,"-":120}}]
