[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nigeltzy"},"content":"* MedDict is **a project based on a sample project for Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nigeltzy"},"content":"* The original project MedDict was based on simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"* It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nigeltzy"},"content":"* MedDict is a desktop application designed for physiotherapists who manage a large number of patients. It simplifies data entry and retrieval, allowing quick access to contact details, patient conditions, and the progress of recurring or long-term patients. The application supports a streamlined process for tracking medical history, patient appointments, and treatment progress.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nigeltzy"},"content":"* MedDict provides a specialized, all-in-one solution for physiotherapists to manage patient-related information, including medical history, treatment plans, and appointment tracking. The app is optimized for frequent use in clinical settings where speed and accuracy are essential.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nigeltzy"},"content":"* While MedDict offers a graphical interface, most user interactions happen using a Command Line Interface (CLI), tailored for physiotherapists who prefer typing over mouse interactions and prioritize efficiency in managing patient information.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nigeltzy"},"content":"* In other words, MedDict is formulated for physiotherapists who need quick and reliable access to patient information, prefer minimal time spent on data entry, and are comfortable using CLI-based apps for faster updates during consultations.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nigeltzy"},"content":"* For the detailed documentation of this project, see the **[MedDict Product Website](https://ay2425s1-cs2103t-t08-3.github.io/tp/)**.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org/#contributing-to-se-edu) for more info.","lastModifiedDate":"2024-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nigeltzy"},"content":"* * This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-10-07","isFullCredit":false}],"authorContributionMap":{"Nigeltzy":15,"-":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](https://www.comp.nus.edu.sg).","lastModifiedDate":"2024-07-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nigeltzy"},"content":"### Sandy Kristian Waluyo","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nigeltzy"},"content":"\u003cimg src\u003d\"images/sandyk0105.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nigeltzy"},"content":"[[github](https://github.com/sandyk0105)]","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nigeltzy"},"content":"[[portfolio](team/sandyk0105.md)]","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nigeltzy"},"content":"* Role: Developer","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nigeltzy"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nigeltzy"},"content":"### Nigel Teo","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nigeltzy"},"content":"\u003cimg src\u003d\"images/nigeltzy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nigeltzy"},"content":"[[github](http://github.com/nigeltzy)]","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nigeltzy"},"content":"[[portfolio](team/nigeltzy.md)]","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nigeltzy"},"content":"* Role: Developer","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nigeltzy"},"content":"* Responsibilities: Data","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"### Tham Yao Xiang","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"\u003cimg src\u003d\"images/tyxiangs.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"[[github](http://github.com/tyxiangs)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chengzihao123"},"content":"### Cheng Zihao","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chengzihao123"},"content":"\u003cimg src\u003d\"images/chengzihao123.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chengzihao123"},"content":"[[github](http://github.com/chengzihao123)]","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chengzihao123"},"content":"* Responsibilities: UI and testing","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nigeltzy"},"content":"### Axel","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shinichi04"},"content":"\u003cimg src\u003d\"images/shinichi04.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shinichi04"},"content":"[[github](http://github.com/shinichi04)]","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shinichi04"},"content":"[[portfolio](team/shinichi04.md)]","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sandyk0105"},"content":"* Responsibilities: Data","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false}],"authorContributionMap":{"Nigeltzy":13,"tyxiangs":3,"chengzihao123":5,"-":36,"shinichi04":3,"sandyk0105":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nigeltzy"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"chengzihao123"},"content":"* Physiotherapists who:","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"chengzihao123"},"content":"  * Has a significant number of patients to manage","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"chengzihao123"},"content":"  * Prefers a solution that minimizes data entry and retrieval time","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"chengzihao123"},"content":"  * Needs quick access to contact details and conditions of patients","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"chengzihao123"},"content":"  * Needs to monitor and track the progress of recurring / returning patients over a long period of time","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"chengzihao123"},"content":"  * Prefers typing to mouse interactions and reasonably comfortable using CLI apps","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"chengzihao123"},"content":"**Value proposition**: Provide a more specialised one-stop-for-all medical related information to their patients, schedules, appointments and to keep track of their medical information, progression, medical history etc. The simple CLI app is optimised for physiotherapists’ routine use during consultations, designed for physiotherapists who prioritise speed when accessing and updating patients’ information and details on a regular basis.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`  ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                                                          | So that I can…​                                                                       |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"chengzihao123"},"content":"|----------|---------|-----------------------------------------------------------------------|---------------------------------------------------------------------------------------|","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"chengzihao123"},"content":"| `* * *`  | Doctor  | create a new patient profile                                          | I can record their details and track their progress                                   |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"chengzihao123"},"content":"| `* * *`  | Doctor  | delete a patient profile                                              | get rid of patient\u0027s information that I no longer need /  no longer a patient of mine |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"chengzihao123"},"content":"| `* * *`  | Doctor  | add recurring appointments for a patient                              | manage their treatment schedule efficiently                                           |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"chengzihao123"},"content":"| `* * *`  | Doctor  | update patient details                                                | keep their medical information current                                                |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"chengzihao123"},"content":"| `* * *`  | Doctor  | add notes to a patient’s record after each session                    | track their progress over time                                                        |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"chengzihao123"},"content":"| `* * *`  | Doctor  | see which patients have upcoming appointments today                   | I can prepare in advance                                                              |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"chengzihao123"},"content":"| `* * *`  | Doctor  | view the history of treatments for a patient                          | monitor their improvement                                                             |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"chengzihao123"},"content":"| `* * `   | Doctor  | filter patients by condition or treatment type                        | search patients of a particular condition or treatment for more follow-up actions     |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"chengzihao123"},"content":"| `* * `   | Doctor  | track my own schedule for the week                                    | I can plan my workload                                                                |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"chengzihao123"},"content":"| `* * `   | Doctor  | automatically schedule follow-up appointments for recurring patients  | I don’t have to manually book each appointment                                        |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"chengzihao123"},"content":"| `* * `   | Doctor  | set reminders for follow-up appointments                              | I don’t miss any important sessions                                                   | |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"chengzihao123"},"content":"| `* * `   | Doctor  | assign different exercises or treatments to a patient                 | their care plan is personalized                                                       |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"chengzihao123"},"content":"| `* * `   | Doctor  | mark a patient’s session as completed                                 | I can know which patients have been seen                                              |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"chengzihao123"},"content":"| `* * `   | Doctor  | add vital signs data (e.g., blood pressure, heart rate) for a patient | I can monitor their health metrics                                                    |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"chengzihao123"},"content":"| `* * `   | Doctor  | track patient feedback after each session                             | I can adjust their treatment plan if needed                                           |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"chengzihao123"},"content":"| `* * `   | Doctor  | set goals for a patient’s treatment plan                              | I can measure their progress against these goals                                      |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"chengzihao123"},"content":"| `* * `   | Doctor  | record billing information for each session                           | I can manage payments and invoicing                                                   |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"chengzihao123"},"content":"| `* * `   | Doctor  | access a summary of all my patients                                   | I can get an overview of their conditions and treatments                              |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"chengzihao123"},"content":"| `* * `   | Doctor  | view all the sessions a patient has missed                            | I can follow up with them and arrange for make-up session                             |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"chengzihao123"},"content":"| `* `     | Doctor  | collaborate with other doctors by sharing patient information         | we can coordinate care                                                                |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"chengzihao123"},"content":"  ","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"chengzihao123"},"content":"### Use cases","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"chengzihao123"},"content":"(For all use cases below, the **System** is the `MedDict` and the **Actor** is the `physiotherapist`, unless specified otherwise)","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"chengzihao123"},"content":"**Use case - UC01: Delete a person**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"chengzihao123"},"content":"**MSS**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"chengzihao123"},"content":"1.  The user searches for the patient in the list by name","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"chengzihao123"},"content":"2.  MedDict displays all matching patients","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"chengzihao123"},"content":"3.  The user selects the specific patient profile to delete","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"chengzihao123"},"content":"4.  The user requests to delete a specific patient in the list","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"chengzihao123"},"content":"5.  MedDict deletes the patient profile from the system and notifies the user that the profile has been successfully deleted","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"chengzihao123"},"content":"    Use case ends.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"chengzihao123"},"content":"**Extensions**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"chengzihao123"},"content":"* 2a: The list of patients is empty.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"chengzihao123"},"content":"    * 2a1. MedDict informs the doctor that no patients are available for deletion","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"chengzihao123"},"content":"    * Use case ends","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"chengzihao123"},"content":"* 3a. The given index or patient selection is invalid.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"chengzihao123"},"content":"    * 3a1. MedDict shows an error message indicating that the selected patient profile is invalid or does not exist","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"chengzihao123"},"content":"      Use case resumes from step 2","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"chengzihao123"},"content":"  ","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"chengzihao123"},"content":"**Use case - UC02: Add Appointment**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"chengzihao123"},"content":"1.  User requests to make a new appointment","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"chengzihao123"},"content":"2.  MedDict displays the list of available time slots for appointments","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"chengzihao123"},"content":"3.  User selects a specific time slot","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"chengzihao123"},"content":"4.  User searches for the patient by name or the ID","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"chengzihao123"},"content":"5.  User requests to assign the time slot to a patient","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"chengzihao123"},"content":"6.  MedDict assigns the selected time slot to the chosen patient and confirms the appointment","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"chengzihao123"},"content":"* 2a: No available time slots.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"chengzihao123"},"content":"    * 2a1. MedDict notifies the doctor that no time slots are available","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"chengzihao123"},"content":"    * 2a2. The doctor chooses to wait for a cancellation or manually opens additional time slots","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"chengzihao123"},"content":"    * Use case ends","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"chengzihao123"},"content":"* 4a. The selected patient is not found in the system.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"chengzihao123"},"content":"    * 4a1. MedDict informs the doctor that the patient is not found","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"chengzihao123"},"content":"    * 4a2. The doctor is given the option to create a new patient profile or re-enter the patient\u0027s name","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"chengzihao123"},"content":"      Use case resumes from step 4","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"chengzihao123"},"content":"**Use case - UC03: Mark patient’s appointment as completed**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"chengzihao123"},"content":"**MSS**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"chengzihao123"},"content":"1.  User requests to view all his appointments for the day","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"chengzihao123"},"content":"2.  MedDict displays all appointments that the user has for the day","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"chengzihao123"},"content":"3.  User selects the patient that he has just viewed","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"chengzihao123"},"content":"4.  User requests to mark the patient’s appointment status as completed","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"chengzihao123"},"content":"5.  System marks the patient’s appointment for the day as completed","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"chengzihao123"},"content":"**Extensions**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"chengzihao123"},"content":"* 2a: The user has no patients for that day.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"chengzihao123"},"content":"    * 2a1. MedDict displays an empty appointment list for the day","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"chengzihao123"},"content":"    * Use case ends","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"chengzihao123"},"content":"* 3a. The patient selected is invalid / doesn\u0027t exist.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"chengzihao123"},"content":"    * 3a1. MedDict alerts the user that the selected patient profile is invalid or does not exist","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"chengzihao123"},"content":"      Use case resumes from step 2","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"chengzihao123"},"content":"  ","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"chengzihao123"},"content":"* 4a. The patient’s status has already been marked as completed","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"chengzihao123"},"content":"    * 4a1. MedDict alerts to the user that the appointment has already been marked as completed","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"chengzihao123"},"content":"    * Use case ends","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"chengzihao123"},"content":"1. Should work on any mainstream OS as long as it has Java 17 or above installed.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"chengzihao123"},"content":"2. Should run efficiently on low-powered machines, such as older clinic computers, without consuming excessive CPU or memory resources (less than 100 MB of RAM usage)","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"chengzihao123"},"content":"3. The system should allow physiotherapists to find a contact by name or ID within 1-2 seconds to ensure minimal disruption during patient interactions.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"chengzihao123"},"content":"4. Command structures should be simple enough for physiotherapists to memorize frequently used operations","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"chengzihao123"},"content":"5. The searching functionality should not be case-sensitive.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"chengzihao123"},"content":"6. The system must be able to handle unexpected errors (e.g., incorrect input, unavailable commands) gracefully by providing clear, actionable error messages","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"chengzihao123"},"content":"7. The system should automatically back up patient contact data at least once per day to ensure data integrity. Backups should be encrypted and stored in a secure location","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"chengzihao123"},"content":"8. All sensitive contact information, including patient names, phone numbers, and addresses, must be encrypted when stored on disk.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"chengzihao123"},"content":"9. Only authorized users (e.g., licensed physiotherapists) should be able to access or modify patient details.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"chengzihao123"},"content":"10. Authorized users will only have access to the patients under their patient-doctor bond (PDB).","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"chengzihao123"},"content":"11. should also be scalable to accommodate larger clinics that may need to store 10,000+ patient records","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"tyxiangs"},"content":"* **Patient-Doctor Bond (PDB)**: A relationship between a doctor and a patient where the doctor is assigned to the patient for physiotherapy treatment","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"Nigeltzy":1,"tyxiangs":1,"chengzihao123":106,"-":355}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nigeltzy"},"content":"MedDict is a **desktop application designed for physiotherapists** who manage a large number of patients. It simplifies data entry and retrieval, allowing quick access to contact details, patient conditions, and the progress of recurring or long-term patients. The application supports a streamlined process for tracking medical history, patient appointments, and treatment progress.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `17` or above installed in your Computer.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Download the latest `.jar` file from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"Nigeltzy":1,"-":198}},{"path":"docs/_config.yml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"chengzihao123"},"content":"title: \"MedDict\"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"theme: minima","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"header_pages:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"  - UserGuide.md","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"  - DeveloperGuide.md","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"  - AboutUs.md","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"markdown: kramdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chengzihao123"},"content":"repository: \"AY2425S1-CS2103T-T08-3/tp\"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"github_icon: \"images/github-icon.png\"","lastModifiedDate":"2020-08-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"plugins:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"  - jemoji","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"chengzihao123":2,"-":13}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"chengzihao123"},"content":"    content: \"MedDict\";","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12","isFullCredit":false}],"authorContributionMap":{"chengzihao123":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chengzihao123"},"content":"title: MedDict","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nigeltzy"},"content":"**MedDict**","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nigeltzy"},"content":"MedDict is a desktop application designed for physiotherapists who manage a large number of patients. It simplifies data entry and retrieval, allowing quick access to contact details, patient conditions, and the progress of recurring or long-term patients. The application supports a streamlined process for tracking medical history, patient appointments, and treatment progress.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nigeltzy"},"content":"MedDict provides a specialized, all-in-one solution for physiotherapists to manage patient-related information, including medical history, treatment plans, and appointment tracking. The app is optimized for frequent use in clinical settings where speed and accuracy are essential.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nigeltzy"},"content":"While MedDict offers a graphical interface, most user interactions happen using a Command Line Interface (CLI), tailored for physiotherapists who prefer typing over mouse interactions and prioritize efficiency in managing patient information.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nigeltzy"},"content":"In other words, MedDict is formulated for physiotherapists who need quick and reliable access to patient information, prefer minimal time spent on data entry, and are comfortable using CLI-based apps for faster updates during consultations.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nigeltzy"},"content":"* If you\u0027re interested in using MedDict, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nigeltzy"},"content":"* If you are interested in developing MedDict, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nigeltzy"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"Nigeltzy":10,"chengzihao123":1,"-":16}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":" * Container for user visible messages.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"public class Messages {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"tyxiangs":13}},{"path":"src/main/java/seedu/address/commons/exceptions/AppNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sandyk0105"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sandyk0105"},"content":"/**","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sandyk0105"},"content":" * Represents an error during getting appointment details","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sandyk0105"},"content":" */","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sandyk0105"},"content":"public class AppNotFoundException extends Exception {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sandyk0105"},"content":"    public AppNotFoundException(String message) {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sandyk0105"},"content":"        super(message);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sandyk0105"},"content":"    }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sandyk0105"},"content":"}","lastModifiedDate":"2024-10-10","isFullCredit":false}],"authorContributionMap":{"sandyk0105":10}},{"path":"src/main/java/seedu/address/commons/exceptions/InvalidIdException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chengzihao123"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chengzihao123"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chengzihao123"},"content":" * Signals that the input id can\u0027t be found","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chengzihao123"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chengzihao123"},"content":"public class InvalidIdException extends IllegalValueException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chengzihao123"},"content":"     * @param message should contain relevant information on the invalid id","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chengzihao123"},"content":"    public InvalidIdException(String message) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chengzihao123"},"content":"        super(message);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chengzihao123"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"chengzihao123":14}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chengzihao123"},"content":"    public static final String MESSAGE_INVALID_ID \u003d \"Invalid Id entered! Check the id that you have entered!\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chengzihao123"},"content":"    public static final String MESSAGE_GET_ID \u003d \"The id of the person that you are finding is: %1$d\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"tyxiangs":2,"chengzihao123":2,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chengzihao123"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chengzihao123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chengzihao123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chengzihao123"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chengzihao123"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chengzihao123"},"content":" * Adds an appointment to both a patient and a doctor.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chengzihao123"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chengzihao123"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chengzihao123"},"content":"    public static final String COMMAND_WORD \u003d \"addAppointment\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chengzihao123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an appointment with \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chengzihao123"},"content":"            + \"the relevant doctor and patient. \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chengzihao123"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chengzihao123"},"content":"            + PREFIX_DATE + \"[APPOINTMENT_TIME] \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chengzihao123"},"content":"            + PREFIX_ID + \"[PATIENT_ID] \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chengzihao123"},"content":"            + PREFIX_ID + \"[DOCTOR_ID] \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chengzihao123"},"content":"            + PREFIX_REMARK + \"[ADDITIONAL REMARK]\\n\"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chengzihao123"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chengzihao123"},"content":"            + PREFIX_DATE + \"2024-12-31 15:23\"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chengzihao123"},"content":"            + PREFIX_ID + \"1234 \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chengzihao123"},"content":"            + PREFIX_ID + \"5678\"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chengzihao123"},"content":"            + PREFIX_REMARK + \"third physiotherapy session\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chengzihao123"},"content":"    public static final String MESSAGE_ADD_APPOINTMENT_SUCCESS \u003d \"Successfully added appointment to a patient\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chengzihao123"},"content":"    public static final String MESSAGE_PATIENT_BUSY \u003d \"The patient already has another appointment!\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chengzihao123"},"content":"    public static final String MESSAGE_DOCTOR_BUSY \u003d \"The doctor already has another appointment!\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chengzihao123"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"The appointment already exists!\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chengzihao123"},"content":"    private final Id patientId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chengzihao123"},"content":"    private final Id doctorId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chengzihao123"},"content":"    private final LocalDateTime appointmentTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chengzihao123"},"content":"    private final String remarks;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chengzihao123"},"content":"     * Creates an AddAppointmentCommand to add the specified patient and doctor ids","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chengzihao123"},"content":"    public AddAppointmentCommand(LocalDateTime appointmentTime, Id patientId, Id doctorId, String remarks) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chengzihao123"},"content":"        requireNonNull(appointmentTime);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chengzihao123"},"content":"        requireNonNull(patientId);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chengzihao123"},"content":"        requireNonNull(doctorId);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chengzihao123"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chengzihao123"},"content":"        this.doctorId \u003d doctorId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chengzihao123"},"content":"        this.appointmentTime \u003d appointmentTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chengzihao123"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chengzihao123"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chengzihao123"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chengzihao123"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chengzihao123"},"content":"        ObservableList\u003cPerson\u003e allPersons \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chengzihao123"},"content":"        Patient patientToAddAppointment \u003d model.getFilteredPatientById(allPersons, patientId);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chengzihao123"},"content":"        Doctor doctorToAddAppointment \u003d model.getFilteredDoctorById(allPersons, doctorId);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chengzihao123"},"content":"        boolean isPatientFree \u003d patientToAddAppointment.addAppointment(appointmentTime, patientToAddAppointment.getId(),","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chengzihao123"},"content":"                doctorToAddAppointment.getId(), remarks);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chengzihao123"},"content":"        if (!isPatientFree) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chengzihao123"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chengzihao123"},"content":"        return new CommandResult(MESSAGE_ADD_APPOINTMENT_SUCCESS);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chengzihao123"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"chengzihao123":75}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"tyxiangs":1,"-":84}},{"path":"src/main/java/seedu/address/logic/commands/AddNotesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sandyk0105"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sandyk0105"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sandyk0105"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sandyk0105"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sandyk0105"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sandyk0105"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sandyk0105"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sandyk0105"},"content":"/**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sandyk0105"},"content":" * Adds notes to a Patient\u0027s remarks","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sandyk0105"},"content":" */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sandyk0105"},"content":"public class AddNotesCommand extends Command {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sandyk0105"},"content":"    public static final String COMMAND_WORD \u003d \"addNotes\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sandyk0105"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds notes to the remarks of a Patient.\"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sandyk0105"},"content":"            + \"Existing remarks will be concatenated by the input.\\n\"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sandyk0105"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sandyk0105"},"content":"            + PREFIX_ID + \"[PATIENT_ID] \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sandyk0105"},"content":"            + PREFIX_REMARK + \"[ADDITIONAL REMARKS]\\n\"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sandyk0105"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sandyk0105"},"content":"            + PREFIX_ID + \"1234 \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sandyk0105"},"content":"            + PREFIX_REMARK + \"Much better than previous appointment.\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sandyk0105"},"content":"    public static final String MESSAGE_ADD_NOTES_SUCCESS \u003d \"Successfully \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sandyk0105"},"content":"            + \"added notes: \u0027%s\u0027 to Patient %d.\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sandyk0105"},"content":"    private final Id patientId;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sandyk0105"},"content":"    private final String additionalNotes;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sandyk0105"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sandyk0105"},"content":"     * Adds notes to a Patient\u0027s remarks","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sandyk0105"},"content":"     * @param patientId patient id","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sandyk0105"},"content":"     * @param additionalNotes notes to be added","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sandyk0105"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sandyk0105"},"content":"    public AddNotesCommand(Id patientId, String additionalNotes) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sandyk0105"},"content":"        requireAllNonNull(patientId, additionalNotes);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sandyk0105"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sandyk0105"},"content":"        this.additionalNotes \u003d additionalNotes;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sandyk0105"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sandyk0105"},"content":"    @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sandyk0105"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sandyk0105"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sandyk0105"},"content":"        ObservableList\u003cPerson\u003e allPersons \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sandyk0105"},"content":"        Patient patientToAddNotes \u003d model.getFilteredPatientById(allPersons, patientId);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sandyk0105"},"content":"        patientToAddNotes.addNotes(additionalNotes);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sandyk0105"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sandyk0105"},"content":"        return new CommandResult(MESSAGE_ADD_NOTES_SUCCESS);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sandyk0105"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sandyk0105"},"content":"}","lastModifiedDate":"2024-10-17","isFullCredit":false}],"authorContributionMap":{"sandyk0105":65}},{"path":"src/main/java/seedu/address/logic/commands/CheckAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY_DATE;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":" * Checks for appointments of an existing patient in the system.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"public class CheckAppointmentCommand extends Command {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    public static final String COMMAND_WORD \u003d \"checkAppointment\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Checks the appointments of the doctor identified \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"            + \"by the doctor ID. \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"            + \"Parameters: DOCTOR_ID (must be a valid ID) \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"            + \"LOCAL_DATETIME \\n\"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_ID + \" 01\" + PREFIX_DAY_DATE + \" 2023-09-25\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"    public static final String MESSAGE_CHECK_APPOINTMENT_SUCCESS \u003d \"Checked appointment for Doctor: %1$s on %2$s\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"    public static final String MESSAGE_NO_APPOINTMENT_FOUND \u003d \"No appointment found for Doctor: %1$s on %2$s\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"    public static final String MESSAGE_NO_DATE_TIME \u003d \"No date time is given for Doctor appointment: %1$s on %2$s\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"    private final Id doctorId;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"    private final LocalDate date;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"     * @param doctorId of the patient to check the appointment of","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"     * @param date the specific date and time of the appointment to check (optional)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"    public CheckAppointmentCommand(Id doctorId, LocalDate date) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"        requireNonNull(doctorId); // Only patientId is mandatory","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"        this.doctorId \u003d doctorId;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"        ObservableList\u003cPerson\u003e allPersons \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"        Doctor doctorToCheckAppointment \u003d model.getFilteredDoctorById(allPersons, doctorId);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"        if (doctorToCheckAppointment \u003d\u003d null) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"        LocalDate appointmentDateTime;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"        String appointmentDetails;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"            appointmentDateTime \u003d date;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"            appointmentDetails \u003d doctorToCheckAppointment.getOneDayDoctorAppointment(appointmentDateTime, doctorId);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"        } else {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"            throw new CommandException(String.format(MESSAGE_NO_DATE_TIME, doctorToCheckAppointment.getName()));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"        if (appointmentDetails \u003d\u003d null || appointmentDetails.isEmpty()) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"            throw new CommandException(String.format(MESSAGE_NO_APPOINTMENT_FOUND, doctorToCheckAppointment.getName()));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"        return new CommandResult(appointmentDetails);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tyxiangs"},"content":"        // short circuit if same object","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tyxiangs"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tyxiangs"},"content":"            return true;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tyxiangs"},"content":"        if (!(other instanceof CheckAppointmentCommand)) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tyxiangs"},"content":"            return false;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tyxiangs"},"content":"        // state check","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tyxiangs"},"content":"        CheckAppointmentCommand e \u003d (CheckAppointmentCommand) other;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tyxiangs"},"content":"        return doctorId.equals(e.doctorId)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tyxiangs"},"content":"                \u0026\u0026 (date \u003d\u003d null ? e.date \u003d\u003d null : date.equals(e.date));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-10-17","isFullCredit":false}],"authorContributionMap":{"tyxiangs":90}},{"path":"src/main/java/seedu/address/logic/commands/CreatePatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sandyk0105"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sandyk0105"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sandyk0105"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sandyk0105"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sandyk0105"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sandyk0105"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sandyk0105"},"content":"/**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sandyk0105"},"content":" * Creates a new Patient profile","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sandyk0105"},"content":" */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sandyk0105"},"content":"public class CreatePatientCommand extends Command {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sandyk0105"},"content":"    public static final String COMMAND_WORD \u003d \"createPatient\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sandyk0105"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates a new patient. \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sandyk0105"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sandyk0105"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sandyk0105"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sandyk0105"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sandyk0105"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sandyk0105"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sandyk0105"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sandyk0105"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sandyk0105"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sandyk0105"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sandyk0105"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully created a new patient Patient#%d : %1$s\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sandyk0105"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This patient already exists\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sandyk0105"},"content":"    private final Patient toAdd;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sandyk0105"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sandyk0105"},"content":"     * Creates an CreatePatientCommand to add the specified {@code Patient}","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sandyk0105"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sandyk0105"},"content":"    public CreatePatientCommand(Patient patient) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sandyk0105"},"content":"        requireNonNull(patient);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sandyk0105"},"content":"        toAdd \u003d patient;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sandyk0105"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sandyk0105"},"content":"    @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sandyk0105"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sandyk0105"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sandyk0105"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sandyk0105"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sandyk0105"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sandyk0105"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sandyk0105"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd.getId(), Messages.format(toAdd)));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sandyk0105"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sandyk0105"},"content":"}","lastModifiedDate":"2024-10-17","isFullCredit":false}],"authorContributionMap":{"sandyk0105":57}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chengzihao123"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chengzihao123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chengzihao123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chengzihao123"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chengzihao123"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chengzihao123"},"content":" * deletes an appointment to both a patient and a doctor.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chengzihao123"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chengzihao123"},"content":"public class DeleteAppointmentCommand extends Command {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chengzihao123"},"content":"    public static final String COMMAND_WORD \u003d \"deleteAppointment\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chengzihao123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": deletes an appointment \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chengzihao123"},"content":"            + \"between the relevant doctor and patient. \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chengzihao123"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chengzihao123"},"content":"            + PREFIX_DATE + \"[APPOINTMENT_TIME] \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chengzihao123"},"content":"            + PREFIX_ID + \"[PATIENT_ID] \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chengzihao123"},"content":"            + PREFIX_ID + \"[DOCTOR_ID]\\n\"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chengzihao123"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chengzihao123"},"content":"            + PREFIX_DATE + \"2024-12-31 15:23\"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chengzihao123"},"content":"            + PREFIX_ID + \"1234 \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chengzihao123"},"content":"            + PREFIX_ID + \"5678\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chengzihao123"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Successfully \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chengzihao123"},"content":"            + \"deleted appointment to a patient\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chengzihao123"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_FAIL \u003d \"The appointment doesn\u0027t exist!\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chengzihao123"},"content":"    private final Id patientId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chengzihao123"},"content":"    private final Id doctorId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chengzihao123"},"content":"    private final LocalDateTime appointmentTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chengzihao123"},"content":"     * Creates an DeleteAppointmentCommand to add the specified patient and doctor ids","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chengzihao123"},"content":"    public DeleteAppointmentCommand(LocalDateTime appointmentTime, Id patientId, Id doctorId) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chengzihao123"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chengzihao123"},"content":"        this.doctorId \u003d doctorId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chengzihao123"},"content":"        this.appointmentTime \u003d appointmentTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chengzihao123"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chengzihao123"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chengzihao123"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chengzihao123"},"content":"        ObservableList\u003cPerson\u003e allPersons \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chengzihao123"},"content":"        Patient patientToAddAppointment \u003d model.getFilteredPatientById(allPersons, patientId);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chengzihao123"},"content":"        Doctor doctorToAddAppointment \u003d model.getFilteredDoctorById(allPersons, doctorId);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chengzihao123"},"content":"        boolean isDeleteSuccessful \u003d patientToAddAppointment.deleteAppointment(appointmentTime,","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chengzihao123"},"content":"                patientToAddAppointment.getId(),","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chengzihao123"},"content":"                doctorToAddAppointment.getId());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chengzihao123"},"content":"        if (!isDeleteSuccessful) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chengzihao123"},"content":"            throw new CommandException(MESSAGE_DELETE_APPOINTMENT_FAIL);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chengzihao123"},"content":"        doctorToAddAppointment.deleteAppointment(appointmentTime, patientToAddAppointment.getId(),","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chengzihao123"},"content":"                doctorToAddAppointment.getId());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chengzihao123"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chengzihao123"},"content":"        return new CommandResult(MESSAGE_DELETE_APPOINTMENT_SUCCESS);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chengzihao123"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"chengzihao123":66}},{"path":"src/main/java/seedu/address/logic/commands/DeletePatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shinichi04"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shinichi04"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shinichi04"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shinichi04"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shinichi04"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shinichi04"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shinichi04"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shinichi04"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shinichi04"},"content":"import seedu.address.model.person.History;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shinichi04"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shinichi04"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shinichi04"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shinichi04"},"content":"/**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shinichi04"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shinichi04"},"content":" */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shinichi04"},"content":"public class DeletePatientCommand extends Command {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shinichi04"},"content":"    public static final String COMMAND_WORD \u003d \"deletePatient\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shinichi04"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": deletes a patient. \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shinichi04"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shinichi04"},"content":"            + PREFIX_ID + \"[PATIENT_ID]\"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shinichi04"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shinichi04"},"content":"            + PREFIX_ID + \"1234\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shinichi04"},"content":"    public static final String MESSAGE_DELETE_PATIENT_SUCCESS \u003d \"Successfully \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shinichi04"},"content":"            + \"deleted a patient\";;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shinichi04"},"content":"    private final Id patientId;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shinichi04"},"content":"    public DeletePatientCommand(Id patientId) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shinichi04"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shinichi04"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shinichi04"},"content":"    @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shinichi04"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shinichi04"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shinichi04"},"content":"        ObservableList\u003cPerson\u003e allPersons \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shinichi04"},"content":"        if (patientId.getIdValue() \u003e\u003d allPersons.size()) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shinichi04"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shinichi04"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shinichi04"},"content":"        Patient patientToDelete \u003d model.getFilteredPatientById(allPersons, patientId);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shinichi04"},"content":"        model.deletePerson(patientToDelete);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shinichi04"},"content":"        History.deletePatientsAppointments(patientId);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shinichi04"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PATIENT_SUCCESS, Messages.format(patientToDelete)));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shinichi04"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shinichi04"},"content":"    @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shinichi04"},"content":"    public String toString() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shinichi04"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shinichi04"},"content":"                .add(\"patientId\", patientId)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shinichi04"},"content":"                .toString();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shinichi04"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shinichi04"},"content":"}","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false}],"authorContributionMap":{"shinichi04":62}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tyxiangs"},"content":"        Remark updatedRemark \u003d personToEdit.getRemark();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tyxiangs"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark, updatedTags);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26","isFullCredit":false}],"authorContributionMap":{"tyxiangs":4,"-":240}},{"path":"src/main/java/seedu/address/logic/commands/GetIdCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chengzihao123"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chengzihao123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chengzihao123"},"content":"/**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chengzihao123"},"content":" * Gets the id of a patient.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chengzihao123"},"content":" */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chengzihao123"},"content":"public class GetIdCommand extends Command {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chengzihao123"},"content":"    public static final String COMMAND_WORD \u003d \"getId\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chengzihao123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": gets the id \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chengzihao123"},"content":"            + \"of a patient. \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chengzihao123"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chengzihao123"},"content":"            + PREFIX_NAME + \"[NAME]\\n\"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chengzihao123"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chengzihao123"},"content":"            + PREFIX_NAME + \"John Philips\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chengzihao123"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chengzihao123"},"content":"    public GetIdCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chengzihao123"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chengzihao123"},"content":"    @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chengzihao123"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chengzihao123"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chengzihao123"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chengzihao123"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_GET_ID,","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chengzihao123"},"content":"                model.getFilteredPersonList().get(0).getId().getIdValue()));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chengzihao123"},"content":"    @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chengzihao123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chengzihao123"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chengzihao123"},"content":"            return true;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chengzihao123"},"content":"        if (!(other instanceof GetIdCommand)) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chengzihao123"},"content":"            return false;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chengzihao123"},"content":"        GetIdCommand otherFindCommand \u003d (GetIdCommand) other;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chengzihao123"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chengzihao123"},"content":"    @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chengzihao123"},"content":"    public String toString() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chengzihao123"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chengzihao123"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chengzihao123"},"content":"                .toString();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chengzihao123"},"content":"}","lastModifiedDate":"2024-10-17","isFullCredit":false}],"authorContributionMap":{"chengzihao123":54}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import java.util.List;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"            + PREFIX_REMARK + \"[REMARK]\\n\"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"            + PREFIX_REMARK + \"Likes to swim.\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"    private final Index index;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"    private final Remark remark;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sandyk0105"},"content":"        String message \u003d !remark.getValue().isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tyxiangs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tyxiangs"},"content":"        // short circuit if same object","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tyxiangs"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tyxiangs"},"content":"            return true;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tyxiangs"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tyxiangs"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tyxiangs"},"content":"            return false;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tyxiangs"},"content":"        // state check","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tyxiangs"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tyxiangs"},"content":"        return index.equals(e.index)","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tyxiangs"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"tyxiangs":90,"sandyk0105":1}},{"path":"src/main/java/seedu/address/logic/commands/ViewHistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":" * Views the medical history of an existing patient in the system.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"public class ViewHistoryCommand extends Command {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    public static final String COMMAND_WORD \u003d \"viewHistory\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Views the medical history of the patient identified \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"            + \"by the patient ID. \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"            + \"Parameters: PATIENT_ID (must be a valid ID) \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"            + \"LOCAL_DATETIME \\n\"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_ID + \"01\" + PREFIX_DATE + \"2023-09-25 10:15\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"    public static final String MESSAGE_VIEW_HISTORY_SUCCESS \u003d \"Viewed history for Patient: %1$s on %2$s\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"    public static final String MESSAGE_NO_HISTORY_FOUND \u003d \"No history found for Patient: %1$s on %2$s\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"    private final Id patientId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"     * @param patientId of the patient to view the history of","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"     * @param dateTime the specific date and time of the history to view (optional)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"    public ViewHistoryCommand(Id patientId, LocalDateTime dateTime) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"        requireNonNull(patientId); // Only patientId is mandatory","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"     * @param patientId of the patient to view the history of","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"    public ViewHistoryCommand(Id patientId) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"        requireNonNull(patientId); // Only patientId is mandatory","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"        this.dateTime \u003d null; // Handle the case when dateTime is not provided","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"        ObservableList\u003cPerson\u003e allPersons \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"        Patient patientToView \u003d model.getFilteredPatientById(allPersons, patientId);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"        if (patientToView \u003d\u003d null) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"        LocalDateTime historyDateTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"        String history;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"            historyDateTime \u003d dateTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"            history \u003d patientToView.getOneHistory(historyDateTime, patientId);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"        } else {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"            history \u003d patientToView.getHistory().toString();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"        if (history \u003d\u003d null || history.isEmpty()) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"            throw new CommandException(String.format(MESSAGE_NO_HISTORY_FOUND, patientToView.getName()));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tyxiangs"},"content":"        return new CommandResult(history);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tyxiangs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tyxiangs"},"content":"        // short circuit if same object","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tyxiangs"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tyxiangs"},"content":"            return true;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tyxiangs"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tyxiangs"},"content":"        if (!(other instanceof ViewHistoryCommand)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tyxiangs"},"content":"            return false;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tyxiangs"},"content":"        // state check","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tyxiangs"},"content":"        ViewHistoryCommand e \u003d (ViewHistoryCommand) other;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tyxiangs"},"content":"        return patientId.equals(e.patientId)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tyxiangs"},"content":"                \u0026\u0026 dateTime.equals(e.dateTime);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"tyxiangs":97}},{"path":"src/main/java/seedu/address/logic/parser/AddAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chengzihao123"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chengzihao123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_ID;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chengzihao123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chengzihao123"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.commons.exceptions.InvalidIdException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chengzihao123"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chengzihao123"},"content":" * Parses input arguments and creates a new AddAppointmentCommand object","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chengzihao123"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chengzihao123"},"content":"public class AddAppointmentCommandParser implements Parser\u003cAddAppointmentCommand\u003e {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chengzihao123"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAppointmentCommand","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chengzihao123"},"content":"     * and returns a AddAppointmentCommand object for execution.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chengzihao123"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chengzihao123"},"content":"     * @param args the input arguments string.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chengzihao123"},"content":"     * @return a AddAppointmentCommand object.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chengzihao123"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chengzihao123"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chengzihao123"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chengzihao123"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chengzihao123"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_ID, PREFIX_REMARK);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chengzihao123"},"content":"        if (!arePrefixesPresent(argumentMultimap, PREFIX_DATE, PREFIX_ID)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chengzihao123"},"content":"                || !argumentMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chengzihao123"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chengzihao123"},"content":"                    AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chengzihao123"},"content":"        Id patientId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chengzihao123"},"content":"        Id doctorId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chengzihao123"},"content":"        try {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chengzihao123"},"content":"            patientId \u003d ParserUtil.parsePatientId(argumentMultimap.getAllValues(PREFIX_ID).get(0));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chengzihao123"},"content":"            doctorId \u003d ParserUtil.parseDoctorId(argumentMultimap.getAllValues(PREFIX_ID).get(1));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chengzihao123"},"content":"        } catch (InvalidIdException e) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chengzihao123"},"content":"            throw new ParseException(MESSAGE_INVALID_ID, e);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chengzihao123"},"content":"        String remarks \u003d argumentMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chengzihao123"},"content":"        String appointmentTime \u003d String.valueOf(requireNonNull(argumentMultimap.getValue(PREFIX_DATE)));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chengzihao123"},"content":"        LocalDateTime time \u003d ParserUtil.parseDate(appointmentTime);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chengzihao123"},"content":"        return new AddAppointmentCommand(time, patientId, doctorId, remarks);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chengzihao123"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chengzihao123"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chengzihao123"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chengzihao123"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chengzihao123"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"chengzihao123":64}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"        Remark remark \u003d new Remark(\"\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"        Person person \u003d new Person(name, phone, email, address, remark, tagList);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05","isFullCredit":false}],"authorContributionMap":{"tyxiangs":3,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/AddNotesCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sandyk0105"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sandyk0105"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sandyk0105"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_ID;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sandyk0105"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sandyk0105"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sandyk0105"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.commons.exceptions.InvalidIdException;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.logic.commands.AddNotesCommand;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sandyk0105"},"content":"/**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sandyk0105"},"content":" * Parses input arguments and adds notes to a Patient.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sandyk0105"},"content":" */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sandyk0105"},"content":"public class AddNotesCommandParser implements Parser\u003cAddNotesCommand\u003e {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sandyk0105"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sandyk0105"},"content":"     * Parses the given {@code String} of arguments in the context of the CreatePatientCommand","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sandyk0105"},"content":"     * and returns an CreatePatientCommand object for execution.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sandyk0105"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sandyk0105"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sandyk0105"},"content":"    public AddNotesCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sandyk0105"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sandyk0105"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_REMARK);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sandyk0105"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ID, PREFIX_REMARK)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sandyk0105"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sandyk0105"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNotesCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sandyk0105"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sandyk0105"},"content":"        Id patientId;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sandyk0105"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_ID, PREFIX_REMARK);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sandyk0105"},"content":"        try {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sandyk0105"},"content":"            patientId \u003d ParserUtil.parsePatientId(argMultimap.getAllValues(PREFIX_ID).get(0));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sandyk0105"},"content":"        } catch (InvalidIdException e) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sandyk0105"},"content":"            throw new ParseException(MESSAGE_INVALID_ID, e);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sandyk0105"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sandyk0105"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sandyk0105"},"content":"        return new AddNotesCommand(patientId, remark);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sandyk0105"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sandyk0105"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sandyk0105"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sandyk0105"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sandyk0105"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sandyk0105"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sandyk0105"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sandyk0105"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sandyk0105"},"content":"}","lastModifiedDate":"2024-10-17","isFullCredit":false}],"authorContributionMap":{"sandyk0105":55}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.logic.commands.AddNotesCommand;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.logic.commands.CheckAppointmentCommand;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.logic.commands.CreatePatientCommand;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.logic.commands.GetIdCommand;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.logic.commands.ViewHistoryCommand;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tyxiangs"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"chengzihao123"},"content":"        case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"chengzihao123"},"content":"            return new AddAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"chengzihao123"},"content":"        case DeleteAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"chengzihao123"},"content":"            return new DeleteAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tyxiangs"},"content":"        case ViewHistoryCommand.COMMAND_WORD:","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tyxiangs"},"content":"            return new ViewHistoryCommandParser().parse(arguments);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"sandyk0105"},"content":"        case CreatePatientCommand.COMMAND_WORD:","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"sandyk0105"},"content":"            return new CreatePatientCommandParser().parse(arguments);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"sandyk0105"},"content":"        case AddNotesCommand.COMMAND_WORD:","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"sandyk0105"},"content":"            return new AddNotesCommandParser().parse(arguments);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tyxiangs"},"content":"        case CheckAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tyxiangs"},"content":"            return new CheckAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"chengzihao123"},"content":"        case GetIdCommand.COMMAND_WORD:","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"chengzihao123"},"content":"            return new GetIdCommandParser().parse(arguments);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"tyxiangs":13,"chengzihao123":12,"-":85,"sandyk0105":8}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"        return values.isEmpty() ? Optional.empty()","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"                : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08","isFullCredit":false}],"authorContributionMap":{"tyxiangs":2,"-":77}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July} where prefixes are","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":" *     {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" *     in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"     * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"     * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"     * @param argsString Arguments string of the form:","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"     *     {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"     *     arguments","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"     * Finds the positions of all occurrences of {@code prefix} in the arguments string.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"     * @param prefix     Prefix to find in the arguments string","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"     * E.g. if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tyxiangs"},"content":"     * @param argsString Arguments string in which to search for the prefix","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"     * @param prefix     The prefix to find in the arguments string","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tyxiangs"},"content":"     * @param fromIndex  The index from which to start searching","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tyxiangs"},"content":"     * @return           The index of the first valid occurrence of the prefix, or -1 if not found","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tyxiangs"},"content":"     * @param argsString              The arguments string containing the value","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tyxiangs"},"content":"     * @param currentPrefixPosition    The current prefix position","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tyxiangs"},"content":"     * @param nextPrefixPosition       The position of the next prefix","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tyxiangs"},"content":"     * @return                        The trimmed value of the argument","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16","isFullCredit":false}],"authorContributionMap":{"tyxiangs":25,"-":139}},{"path":"src/main/java/seedu/address/logic/parser/CheckAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_ID;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY_DATE;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"import java.util.Optional;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.commons.exceptions.InvalidIdException;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.logic.commands.CheckAppointmentCommand;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":" * Parses input arguments and creates a new CheckAppointmentCommand object.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"public class CheckAppointmentCommandParser implements Parser\u003cCheckAppointmentCommand\u003e {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"     * Parses the given {@code String} of arguments in the context of the CheckAppointmentCommand","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"     * and returns a CheckAppointmentCommand object for execution.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"     * @param args the input arguments string.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"     * @return a CheckAppointmentCommand object.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"    public CheckAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"        // Tokenize the arguments and look for the /d (date) and /id (doctor ID) prefixes","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_DAY_DATE);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"        // Check if both /d and /id prefixes are present, and there is no unexpected preamble","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"        if (!arePrefixesPresent(argumentMultimap, PREFIX_ID, PREFIX_DAY_DATE)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"                || !argumentMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"                    CheckAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"        // Parse the doctor ID","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"        Id doctorId;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"            doctorId \u003d ParserUtil.parseDoctorId(argumentMultimap.getAllValues(PREFIX_ID).get(0));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"        } catch (InvalidIdException e) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"            throw new ParseException(MESSAGE_INVALID_ID, e);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"        Optional\u003cString\u003e dateString \u003d argumentMultimap.getValue(PREFIX_DAY_DATE);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"        if (dateString.isPresent()) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"            try {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"                date \u003d ParserUtil.parseDayDate(dateString.get().trim());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"                throw new ParseException(\"Invalid date format. Please use yyyy-MM-dd.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"            }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"        // Return the constructed CheckAppointmentCommand with doctorId and the parsed or null date","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"        return new CheckAppointmentCommand(doctorId, date);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-10-17","isFullCredit":false}],"authorContributionMap":{"tyxiangs":74}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chengzihao123"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"x/\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"    public static final Prefix PREFIX_DAY_DATE \u003d new Prefix(\"y/\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chengzihao123"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"z/\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"tyxiangs":2,"chengzihao123":3,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/CreatePatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sandyk0105"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sandyk0105"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sandyk0105"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sandyk0105"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sandyk0105"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sandyk0105"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sandyk0105"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sandyk0105"},"content":"import java.util.Set;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sandyk0105"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.logic.commands.CreatePatientCommand;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sandyk0105"},"content":"/**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sandyk0105"},"content":" * Parses input arguments and creates a new CreatePatientCommand object","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sandyk0105"},"content":" */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sandyk0105"},"content":"public class CreatePatientCommandParser implements Parser\u003cCreatePatientCommand\u003e {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sandyk0105"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sandyk0105"},"content":"     * Parses the given {@code String} of arguments in the context of the CreatePatientCommand","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sandyk0105"},"content":"     * and returns an CreatePatientCommand object for execution.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sandyk0105"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sandyk0105"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sandyk0105"},"content":"    public CreatePatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sandyk0105"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sandyk0105"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sandyk0105"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sandyk0105"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sandyk0105"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreatePatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sandyk0105"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sandyk0105"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sandyk0105"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sandyk0105"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sandyk0105"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sandyk0105"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sandyk0105"},"content":"        Remark remark \u003d new Remark(\"\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sandyk0105"},"content":"        Set\u003cTag\u003e tagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sandyk0105"},"content":"        Patient patient \u003d new Patient(name, phone, email, address, remark, tagList);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sandyk0105"},"content":"        return new CreatePatientCommand(patient);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sandyk0105"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sandyk0105"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sandyk0105"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sandyk0105"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sandyk0105"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sandyk0105"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sandyk0105"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sandyk0105"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sandyk0105"},"content":"}","lastModifiedDate":"2024-10-17","isFullCredit":false}],"authorContributionMap":{"sandyk0105":64}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chengzihao123"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chengzihao123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_ID;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chengzihao123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chengzihao123"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.commons.exceptions.InvalidIdException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chengzihao123"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chengzihao123"},"content":" * Parses input arguments and creates a new DeleteAppointmentCommand object","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chengzihao123"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chengzihao123"},"content":"public class DeleteAppointmentCommandParser implements Parser\u003cDeleteAppointmentCommand\u003e {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chengzihao123"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteAppointmentCommand","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chengzihao123"},"content":"     * and returns a DeleteAppointmentCommand object for execution.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chengzihao123"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chengzihao123"},"content":"     * @param args the input arguments string.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chengzihao123"},"content":"     * @return a DeleteAppointmentCommand object.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chengzihao123"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chengzihao123"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chengzihao123"},"content":"    public DeleteAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chengzihao123"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chengzihao123"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_ID);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chengzihao123"},"content":"        if (!arePrefixesPresent(argumentMultimap, PREFIX_DATE, PREFIX_ID)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chengzihao123"},"content":"                || !argumentMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chengzihao123"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chengzihao123"},"content":"                    DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chengzihao123"},"content":"        Id patientId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chengzihao123"},"content":"        Id doctorId;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chengzihao123"},"content":"        try {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chengzihao123"},"content":"            patientId \u003d ParserUtil.parsePatientId(argumentMultimap.getAllValues(PREFIX_ID).get(0));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chengzihao123"},"content":"            doctorId \u003d ParserUtil.parseDoctorId(argumentMultimap.getAllValues(PREFIX_ID).get(1));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chengzihao123"},"content":"        } catch (InvalidIdException e) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chengzihao123"},"content":"            throw new ParseException(MESSAGE_INVALID_ID, e);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chengzihao123"},"content":"        String appointmentTime \u003d String.valueOf(requireNonNull(argumentMultimap.getValue(PREFIX_DATE)));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chengzihao123"},"content":"        LocalDateTime time \u003d ParserUtil.parseDate(appointmentTime);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chengzihao123"},"content":"        return new DeleteAppointmentCommand(time, patientId, doctorId);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chengzihao123"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chengzihao123"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chengzihao123"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chengzihao123"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chengzihao123"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"chengzihao123":61}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26","isFullCredit":false}],"authorContributionMap":{"tyxiangs":2,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/DeletePatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shinichi04"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shinichi04"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shinichi04"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shinichi04"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_ID;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shinichi04"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shinichi04"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shinichi04"},"content":"import seedu.address.commons.exceptions.InvalidIdException;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shinichi04"},"content":"import seedu.address.logic.commands.DeletePatientCommand;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shinichi04"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shinichi04"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shinichi04"},"content":"/**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shinichi04"},"content":" * Parses input arguments and creates a new DeletePatientCommand object","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shinichi04"},"content":" */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shinichi04"},"content":"public class DeletePatientCommandParser implements Parser\u003cDeletePatientCommand\u003e {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shinichi04"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shinichi04"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePatientCommand","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shinichi04"},"content":"     * and returns a DeletePatientCommand object for execution.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shinichi04"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shinichi04"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shinichi04"},"content":"    @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shinichi04"},"content":"    public DeletePatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shinichi04"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shinichi04"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ID);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shinichi04"},"content":"        if (!arePrefixesPresent(argumentMultimap, PREFIX_ID)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shinichi04"},"content":"                || !argumentMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shinichi04"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shinichi04"},"content":"                    DeletePatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shinichi04"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shinichi04"},"content":"        Id patientId;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shinichi04"},"content":"        try {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shinichi04"},"content":"            patientId \u003d ParserUtil.parsePatientId(argumentMultimap.getAllValues(PREFIX_ID).get(0));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shinichi04"},"content":"        } catch (InvalidIdException e) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shinichi04"},"content":"            throw new ParseException(MESSAGE_INVALID_ID, e);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shinichi04"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shinichi04"},"content":"        return new DeletePatientCommand(patientId);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shinichi04"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shinichi04"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shinichi04"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shinichi04"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shinichi04"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shinichi04"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shinichi04"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shinichi04"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shinichi04"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shinichi04"},"content":"}","lastModifiedDate":"2024-10-17","isFullCredit":false}],"authorContributionMap":{"shinichi04":53}},{"path":"src/main/java/seedu/address/logic/parser/GetIdCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chengzihao123"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chengzihao123"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.logic.commands.GetIdCommand;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chengzihao123"},"content":"/**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chengzihao123"},"content":" * Parses input arguments and creates a new GetIdCommand object","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chengzihao123"},"content":" */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chengzihao123"},"content":"public class GetIdCommandParser {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chengzihao123"},"content":"     * Parses the given {@code String} of arguments in the context of the GetIdCommand","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chengzihao123"},"content":"     * and returns a GetIdCommand object for execution.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chengzihao123"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chengzihao123"},"content":"    public GetIdCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chengzihao123"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chengzihao123"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chengzihao123"},"content":"            throw new ParseException(","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chengzihao123"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetIdCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chengzihao123"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chengzihao123"},"content":"        return new GetIdCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chengzihao123"},"content":"}","lastModifiedDate":"2024-10-17","isFullCredit":false}],"authorContributionMap":{"chengzihao123":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chengzihao123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chengzihao123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chengzihao123"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.commons.exceptions.InvalidIdException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chengzihao123"},"content":"    public static final String MESSAGE_INVALID_PATIENT_ID \u003d \"The patient id you have keyed in is invalid\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chengzihao123"},"content":"    public static final String MESSAGE_INVALID_DOCTOR_ID \u003d \"The doctor id you have keyed in is invalid\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chengzihao123"},"content":"     * Parses {@code id} into an {@code Id} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chengzihao123"},"content":"     * trimmed.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chengzihao123"},"content":"     * @throws InvalidIdException if the specified patient id is invalid.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chengzihao123"},"content":"    public static Id parsePatientId(String id) throws InvalidIdException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chengzihao123"},"content":"        String trimmedId \u003d id.trim();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chengzihao123"},"content":"        Patient patientWithId \u003d Patient.getPatientWithId(trimmedId);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chengzihao123"},"content":"        if (patientWithId \u003d\u003d null) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chengzihao123"},"content":"            throw new InvalidIdException(MESSAGE_INVALID_PATIENT_ID);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chengzihao123"},"content":"        return patientWithId.getId();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chengzihao123"},"content":"     * Parses {@code id} into an {@code Id} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chengzihao123"},"content":"     * trimmed.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chengzihao123"},"content":"     * @throws InvalidIdException if the specified doctor id is invalid.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chengzihao123"},"content":"    public static Id parseDoctorId(String id) throws InvalidIdException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chengzihao123"},"content":"        String trimmedId \u003d id.trim();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chengzihao123"},"content":"        Doctor doctorWithId \u003d Doctor.getDoctorWithId(trimmedId);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chengzihao123"},"content":"        if (doctorWithId \u003d\u003d null) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chengzihao123"},"content":"            throw new InvalidIdException(MESSAGE_INVALID_DOCTOR_ID);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chengzihao123"},"content":"        return doctorWithId.getId();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"chengzihao123"},"content":"     * Parses a {@code String date} into a {@code LocalDateTime}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"chengzihao123"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"chengzihao123"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"chengzihao123"},"content":"     * @throws ParseException if the given {@code date} is invalid or not in the expected format.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"chengzihao123"},"content":"    public static LocalDateTime parseDate(String date) throws ParseException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"chengzihao123"},"content":"        requireNonNull(date);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"chengzihao123"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"chengzihao123"},"content":"        LocalDateTime time;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"chengzihao123"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"chengzihao123"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"chengzihao123"},"content":"        try {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"chengzihao123"},"content":"            time \u003d LocalDateTime.parse(trimmedDate, formatter);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"chengzihao123"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"chengzihao123"},"content":"            throw new ParseException(\"Invalid date-time format, please use yyyy-MM-dd HH:mm.\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"chengzihao123"},"content":"        if (currentDateTime.isAfter(time)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"chengzihao123"},"content":"            throw new ParseException(\"Invalid time entered. The date and time can\u0027t be in the past!\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"chengzihao123"},"content":"        return time;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tyxiangs"},"content":"     * Parses a {@code String date} into a {@code LocalDate}.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tyxiangs"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tyxiangs"},"content":"     * @throws ParseException if the given {@code date} is invalid or not in the expected format.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tyxiangs"},"content":"    public static LocalDate parseDayDate(String date) throws ParseException {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tyxiangs"},"content":"        requireNonNull(date);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tyxiangs"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tyxiangs"},"content":"        LocalDate parsedDate;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tyxiangs"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tyxiangs"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tyxiangs"},"content":"            parsedDate \u003d LocalDate.parse(trimmedDate, formatter);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tyxiangs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tyxiangs"},"content":"            throw new ParseException(\"Invalid date format, please use yyyy-MM-dd.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tyxiangs"},"content":"        if (currentDate.isAfter(parsedDate)) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tyxiangs"},"content":"            throw new ParseException(\"Invalid date entered. The date can\u0027t be in the past!\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tyxiangs"},"content":"        return parsedDate;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"tyxiangs":26,"chengzihao123":61,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":" * Parses input arguments and creates a new RemarkCommand object.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"     * Parses the given {@code String} of arguments in the context of the RemarkCommand","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"     * and returns a RemarkCommand object for execution.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"     * @param args the input arguments string.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"     * @return a RemarkCommand object.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"        Index index;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"                    RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"        return new RemarkCommand(index, new Remark(remark));","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"tyxiangs":43}},{"path":"src/main/java/seedu/address/logic/parser/ViewHistoryCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_ID;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"import java.util.Optional;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.commons.exceptions.InvalidIdException;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.logic.commands.ViewHistoryCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":" * Parses input arguments and creates a new ViewHistoryCommand object.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"public class ViewHistoryCommandParser implements Parser\u003cViewHistoryCommand\u003e {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewHistoryCommand","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"     * and returns a ViewHistoryCommand object for execution.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"     * @param args the input arguments string.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"     * @return a ViewHistoryCommand object.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"    public ViewHistoryCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"        // Tokenize the arguments and look for the /d (date) and /id (patient ID) prefixes","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_ID);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"        // Check if both /d and /id prefixes are present, and there is no unexpected preamble","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"        if (!arePrefixesPresent(argumentMultimap, PREFIX_DATE, PREFIX_ID)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"                || !argumentMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"                    ViewHistoryCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"        // Parse the patient ID","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"        Id patientId;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"            patientId \u003d ParserUtil.parsePatientId(argumentMultimap.getAllValues(PREFIX_ID).get(0));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"        } catch (InvalidIdException e) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"            throw new ParseException(MESSAGE_INVALID_ID, e);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"        // Parse the date from the /d prefix, or set it to null if not provided","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"        LocalDateTime dateTime \u003d null;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"        Optional\u003cString\u003e dateTimeString \u003d argumentMultimap.getValue(PREFIX_DATE);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"        if (dateTimeString.isPresent()) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"            try {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"                dateTime \u003d ParserUtil.parseDate(dateTimeString.get().trim());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"                throw new ParseException(\"Invalid date-time format. Please use yyyy-MM-dd HH:mm.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"            }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"        // Return the constructed ViewHistoryCommand with patientId and the parsed or null dateTime","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"        return new ViewHistoryCommand(patientId, dateTime);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tyxiangs"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"tyxiangs":77}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"chengzihao123"},"content":"    /** Returns an unmodifiable view of the filtered person list by Id search*/","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"chengzihao123"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonById(Id id);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"chengzihao123"},"content":"    /** Returns the patient via id search*/","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"chengzihao123"},"content":"    Patient getFilteredPatientById(ObservableList\u003cPerson\u003e allPersons, Id id);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"chengzihao123"},"content":"    /** Returns the doctor via id search*/","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"chengzihao123"},"content":"    Doctor getFilteredDoctorById(ObservableList\u003cPerson\u003e allPersons, Id id);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25","isFullCredit":false}],"authorContributionMap":{"chengzihao123":12,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"chengzihao123"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"chengzihao123"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonById(Id id) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"chengzihao123"},"content":"        return filteredPersons.filtered(person -\u003e person.getId().getIdValue() \u003d\u003d id.getIdValue());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"chengzihao123"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"chengzihao123"},"content":"    public Patient getFilteredPatientById(ObservableList\u003cPerson\u003e allPersons, Id id) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"chengzihao123"},"content":"        Patient patient \u003d null;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"chengzihao123"},"content":"        for (Person person : allPersons) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"chengzihao123"},"content":"            if (Patient.class.isAssignableFrom(person.getId().getRole())) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"chengzihao123"},"content":"                patient \u003d (Patient) person;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"chengzihao123"},"content":"                break;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"chengzihao123"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"chengzihao123"},"content":"        return patient;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"chengzihao123"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"chengzihao123"},"content":"    public Doctor getFilteredDoctorById(ObservableList\u003cPerson\u003e allPersons, Id id) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"chengzihao123"},"content":"        Doctor doctor \u003d null;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"chengzihao123"},"content":"        for (Person person : allPersons) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"chengzihao123"},"content":"            if (Doctor.class.isAssignableFrom(person.getId().getRole())) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"chengzihao123"},"content":"                doctor \u003d (Doctor) person;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"chengzihao123"},"content":"                break;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"chengzihao123"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"chengzihao123"},"content":"        return doctor;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"chengzihao123":32,"-":148}},{"path":"src/main/java/seedu/address/model/person/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nigeltzy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nigeltzy"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nigeltzy"},"content":"import java.util.Objects;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nigeltzy"},"content":"/**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nigeltzy"},"content":" * A class meant to group all relevant details of an appointment together.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nigeltzy"},"content":" */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nigeltzy"},"content":"public class Appointment {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nigeltzy"},"content":"    private Id patientId;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nigeltzy"},"content":"    private Id doctorId;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nigeltzy"},"content":"    private String remarks;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nigeltzy"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nigeltzy"},"content":"     * Creates an appointment instance associated with the specified patient, doctor, and remarks.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nigeltzy"},"content":"     *","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nigeltzy"},"content":"     * @param patientId Id of the patient.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nigeltzy"},"content":"     * @param doctorId Id of the doctor.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nigeltzy"},"content":"     * @param remarks Remarks given by the doctor for the appointment or patient.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nigeltzy"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nigeltzy"},"content":"    public Appointment(Id patientId, Id doctorId, String remarks) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nigeltzy"},"content":"        requireAllNonNull(patientId, doctorId, remarks);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nigeltzy"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nigeltzy"},"content":"        this.doctorId \u003d doctorId;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nigeltzy"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nigeltzy"},"content":"    public Id getPatientId() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nigeltzy"},"content":"        return patientId;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nigeltzy"},"content":"    public Id getDoctorId() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nigeltzy"},"content":"        return doctorId;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nigeltzy"},"content":"    public String getRemarks() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nigeltzy"},"content":"        return remarks;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nigeltzy"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nigeltzy"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nigeltzy"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nigeltzy"},"content":"            return true;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nigeltzy"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nigeltzy"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nigeltzy"},"content":"            return false;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nigeltzy"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nigeltzy"},"content":"        Appointment appointment \u003d (Appointment) o;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nigeltzy"},"content":"        return Objects.equals(patientId, appointment.patientId)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nigeltzy"},"content":"                \u0026\u0026 Objects.equals(doctorId, appointment.doctorId)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nigeltzy"},"content":"                \u0026\u0026 Objects.equals(remarks, appointment.remarks);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nigeltzy"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nigeltzy"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nigeltzy"},"content":"        return Objects.hash(patientId, doctorId, remarks);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nigeltzy"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nigeltzy"},"content":"    public String toString() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nigeltzy"},"content":"        return \"Appointment: \" + getPatientId() + \" (patient id) with \" + getDoctorId() + \" (doctor id). \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nigeltzy"},"content":"                + \"Remarks: \" + getRemarks();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nigeltzy"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"Nigeltzy":69}},{"path":"src/main/java/seedu/address/model/person/Appointmentable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nigeltzy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nigeltzy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nigeltzy"},"content":"/**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nigeltzy"},"content":" * Implemented by classes who have appointment-related functionality.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nigeltzy"},"content":" */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nigeltzy"},"content":"public interface Appointmentable {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nigeltzy"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nigeltzy"},"content":"     * Adds a new appointment at the specified time, for the respective patient and doctor.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nigeltzy"},"content":"     *","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nigeltzy"},"content":"     * @param dateTime Time of appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nigeltzy"},"content":"     * @param patientId Id of patient in the appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nigeltzy"},"content":"     * @param doctorId Id of doctor in the appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nigeltzy"},"content":"     * @return True if command was successful, false if otherwise.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nigeltzy"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nigeltzy"},"content":"    public abstract boolean addAppointment(LocalDateTime dateTime, Id patientId, Id doctorId, String remarks);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nigeltzy"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nigeltzy"},"content":"     * Edit an appointment at the specified time, with the respective patient and doctor.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nigeltzy"},"content":"     *","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nigeltzy"},"content":"     * @param dateTime Time of appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nigeltzy"},"content":"     * @param patientId Id of patient in the appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nigeltzy"},"content":"     * @param doctorId Id of doctor in the appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nigeltzy"},"content":"     * @return True if command was successful, false if otherwise.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nigeltzy"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nigeltzy"},"content":"    public abstract boolean editAppointment(LocalDateTime dateTime, Id patientId, Id doctorId);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nigeltzy"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nigeltzy"},"content":"     * Delete an appointment at the specified time, with the respective patient and doctor.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nigeltzy"},"content":"     *","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nigeltzy"},"content":"     * @param dateTime Time of appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nigeltzy"},"content":"     * @param patientId Id of patient in the appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nigeltzy"},"content":"     * @param doctorId Id of doctor in the appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nigeltzy"},"content":"     * @return True if command was successful, false if otherwise.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nigeltzy"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nigeltzy"},"content":"    public abstract boolean deleteAppointment(LocalDateTime dateTime, Id patientId, Id doctorId);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nigeltzy"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nigeltzy"},"content":"     * Gets an appointment at the specified time, with the respective patient and doctor.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nigeltzy"},"content":"     *","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nigeltzy"},"content":"     * @param dateTime Time of appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nigeltzy"},"content":"     * @param patientId Id of patient in the appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nigeltzy"},"content":"     * @param doctorId Id of doctor in the appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nigeltzy"},"content":"     * @return True if command was successful, false if otherwise.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nigeltzy"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nigeltzy"},"content":"    public abstract Appointment getAppointment(LocalDateTime dateTime, Id patientId, Id doctorId);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nigeltzy"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nigeltzy"},"content":"     * Returns all appointments for the specified person.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nigeltzy"},"content":"     *","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nigeltzy"},"content":"     * @return String representing all the appointments of the person, may not be a String.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nigeltzy"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nigeltzy"},"content":"    public abstract String getAllAppointments();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nigeltzy"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"Nigeltzy":56}},{"path":"src/main/java/seedu/address/model/person/Doctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nigeltzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import java.util.Set;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nigeltzy"},"content":" * Encapsulates the code required to represent a target user (doctor) of the application.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"public class Doctor extends Person {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nigeltzy"},"content":"    private static ArrayList\u003cDoctor\u003e doctors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nigeltzy"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nigeltzy"},"content":"     * @param name","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nigeltzy"},"content":"     * @param phone","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nigeltzy"},"content":"     * @param email","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nigeltzy"},"content":"     * @param address","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nigeltzy"},"content":"     * @param remark","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nigeltzy"},"content":"     * @param tags","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"    public Doctor(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"        super(name, phone, email, address, remark, tags);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nigeltzy"},"content":"        Doctor.doctors.add(this);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nigeltzy"},"content":"    public static ArrayList\u003cDoctor\u003e getDoctors() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nigeltzy"},"content":"        return Doctor.doctors;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nigeltzy"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nigeltzy"},"content":"     * Retrieves a doctor by their Id object.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nigeltzy"},"content":"     *","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nigeltzy"},"content":"     * @param id The Id object of the doctor to search for.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nigeltzy"},"content":"     * @return The Doctor object if found, or null if no matching doctor is found.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nigeltzy"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nigeltzy"},"content":"    public static Doctor getDoctorWithId(Id id) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nigeltzy"},"content":"        ArrayList\u003cDoctor\u003e allDoctors \u003d getDoctors();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nigeltzy"},"content":"        for (Doctor doctor : allDoctors) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nigeltzy"},"content":"            if (doctor.getId().equals(id)) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nigeltzy"},"content":"                return doctor;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nigeltzy"},"content":"            }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nigeltzy"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nigeltzy"},"content":"        return null;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nigeltzy"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nigeltzy"},"content":"     * Retrieves a doctor by their Id value.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nigeltzy"},"content":"     *","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nigeltzy"},"content":"     * @param id The String idValue of the doctor to search for.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nigeltzy"},"content":"     * @return The Doctor object if found, or null if no matching doctor is found.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nigeltzy"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chengzihao123"},"content":"    public static Doctor getDoctorWithId(String id) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chengzihao123"},"content":"        ArrayList\u003cDoctor\u003e allDoctors \u003d getDoctors();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chengzihao123"},"content":"        for (Doctor doctor : allDoctors) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chengzihao123"},"content":"            if (String.valueOf(doctor.getId().getIdValue()).equals(id)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chengzihao123"},"content":"                return doctor;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chengzihao123"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chengzihao123"},"content":"        return null;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-10-08","isFullCredit":false}],"authorContributionMap":{"Nigeltzy":36,"tyxiangs":18,"chengzihao123":10}},{"path":"src/main/java/seedu/address/model/person/History.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chengzihao123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nigeltzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import java.util.Collections;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import java.util.Map;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chengzihao123"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sandyk0105"},"content":"import seedu.address.commons.exceptions.AppNotFoundException;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":" * Represents a medical history entry associated with a doctor.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":" * This class stores details of the appointments or medical interactions","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":" * for a patient, including the doctor, date, and remarks.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"public class History {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nigeltzy"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"     * Static database for all appointments sorted by LocalDateTime.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"     * It contains appointments shared across all patients.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nigeltzy"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"    private static TreeMap\u003cLocalDateTime, Appointment\u003e appointmentDatabase;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"     * List of appointment dates (LocalDateTime) for this instance of a person.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"    private final ArrayList\u003cLocalDateTime\u003e appointments;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"     * Default constructor for History class.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"     * Initializes the appointment database and the patient\u0027s list of appointments.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"    public History() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"        // Initialize the static appointmentDatabase if it has not been initialized yet","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"        if (appointmentDatabase \u003d\u003d null) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"            appointmentDatabase \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"        appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"     * Constructs a History object for a specific patient to track their appointments.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"     * Sets a default remark of \"no remark\" for the appointment.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"     * @param date The date and time of the appointment.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"     * @param patientId The ID of the patient for the appointment.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"     * @param doctorId The ID of the doctor for the appointment.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"    public History(LocalDateTime date, Id patientId, Id doctorId) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"        this();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"        addAppointment(date, patientId, doctorId, \"no remark\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"     * Constructs a History object for a specific patient to track their appointments.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"     * Allows for a remark to be set for the appointment.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"     * @param date The date and time of the appointment.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"     * @param patientId The ID of the patient for the appointment.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"     * @param doctorId The ID of the doctor for the appointment.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"     * @param remark Remarks provided by the doctor for the appointment.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"    public History(LocalDateTime date, Id patientId, Id doctorId, String remark) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"        this();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"        addAppointment(date, patientId, doctorId, remark);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"     * Retrieves a formatted string of all appointments in the database.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"     * The string includes details of each appointment such as the date and","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"     * any associated information stored in the Appointment object.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"     * @return A string representation of all appointments in the database.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tyxiangs"},"content":"    public static String getHistoryDataBase() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tyxiangs"},"content":"        StringBuilder sb \u003d new StringBuilder(\"All appointments in the database:\\n\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tyxiangs"},"content":"        for (Map.Entry\u003cLocalDateTime, Appointment\u003e entry : appointmentDatabase.entrySet()) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tyxiangs"},"content":"            LocalDateTime date \u003d entry.getKey();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"            Appointment appointment \u003d entry.getValue();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tyxiangs"},"content":"            sb.append(formatAppointment(date, appointment)).append(\"\\n\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tyxiangs"},"content":"        return sb.toString();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tyxiangs"},"content":"     * Adds a new appointment to the shared appointment database and the patient\u0027s history.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tyxiangs"},"content":"     * @param date The date and time of the appointment.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tyxiangs"},"content":"     * @param patientId The ID of the patient.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tyxiangs"},"content":"     * @param doctorId The ID of the doctor.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tyxiangs"},"content":"     * @param remark The remark for the appointment.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tyxiangs"},"content":"     * @return true if the appointment was successfully added, false if a duplicate was found.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tyxiangs"},"content":"    public boolean addAppointment(LocalDateTime date, Id patientId, Id doctorId, String remark) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tyxiangs"},"content":"        if (appointmentDatabase.containsKey(date)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tyxiangs"},"content":"            Appointment existingAppointment \u003d appointmentDatabase.get(date);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tyxiangs"},"content":"            if (existingAppointment.getPatientId().equals(patientId)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tyxiangs"},"content":"                    \u0026\u0026 existingAppointment.getDoctorId().equals(doctorId)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tyxiangs"},"content":"                return false; // Duplicate found","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tyxiangs"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tyxiangs"},"content":"        Appointment appointment \u003d new Appointment(patientId, doctorId, remark);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tyxiangs"},"content":"        appointmentDatabase.put(date, appointment);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tyxiangs"},"content":"        appointments.add(date);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tyxiangs"},"content":"        return true;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Nigeltzy"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tyxiangs"},"content":"     * Deletes an appointment from the shared appointment database and the patient\u0027s history.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Nigeltzy"},"content":"     *","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tyxiangs"},"content":"     * @param date The date and time of the appointment.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tyxiangs"},"content":"     * @param patientId The ID of the patient.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tyxiangs"},"content":"     * @param doctorId The ID of the doctor.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tyxiangs"},"content":"     * @return true if the appointment was successfully deleted, false if no matching appointment was found.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Nigeltzy"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tyxiangs"},"content":"    public static boolean deleteAppointment(LocalDateTime date, Id patientId, Id doctorId) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tyxiangs"},"content":"        Appointment appointment \u003d appointmentDatabase.get(date);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tyxiangs"},"content":"        Patient patient \u003d Patient.getPatientWithId(patientId);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tyxiangs"},"content":"        History history \u003d patient.getHistory();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tyxiangs"},"content":"        if (appointment \u003d\u003d null || history.checkDuplicateAppointments(date)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tyxiangs"},"content":"            return false;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tyxiangs"},"content":"        appointmentDatabase.remove(date);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tyxiangs"},"content":"        history.removeAppointments(date);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tyxiangs"},"content":"        return true;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tyxiangs"},"content":"     * Removes an appointment from the patient\u0027s history.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tyxiangs"},"content":"     * @param date The date and time of the appointment to remove.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tyxiangs"},"content":"    public void removeAppointments(LocalDateTime date) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tyxiangs"},"content":"        if (appointments.contains(date)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tyxiangs"},"content":"            appointments.remove(date);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Nigeltzy"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tyxiangs"},"content":"     * Checks if the patient has duplicate appointments for the same date.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tyxiangs"},"content":"     * @param date The date to check for duplicates.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tyxiangs"},"content":"     * @return true if duplicate appointments are found, false otherwise.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tyxiangs"},"content":"    public boolean checkDuplicateAppointments(LocalDateTime date) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tyxiangs"},"content":"        if (Collections.frequency(appointments, date) \u003e 1) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tyxiangs"},"content":"            return true; // Duplicate found","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tyxiangs"},"content":"        return false;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Nigeltzy"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tyxiangs"},"content":"     * Retrieves the details of a single appointment based on the date, patient, and doctor.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tyxiangs"},"content":"     * @param date The date and time of the appointment.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tyxiangs"},"content":"     * @param patientId The ID of the patient.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tyxiangs"},"content":"     * @return The appointment details.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tyxiangs"},"content":"     * @throws AppNotFoundException if no appointment is found for the given patient and doctor.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Nigeltzy"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"tyxiangs"},"content":"    public Appointment getOneAppointmentDetail(LocalDateTime date, Id patientId)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tyxiangs"},"content":"            throws AppNotFoundException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"tyxiangs"},"content":"        if (!appointments.contains(date)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"tyxiangs"},"content":"            throw new AppNotFoundException(\"No appointment found in this patient\u0027s history for the given date.\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tyxiangs"},"content":"        Appointment appointment \u003d appointmentDatabase.get(date);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"tyxiangs"},"content":"        if (appointment \u003d\u003d null || !appointment.getPatientId().equals(patientId)) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"tyxiangs"},"content":"            throw new AppNotFoundException(\"No such appointment found for the given patient and doctor.\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"tyxiangs"},"content":"        return appointment;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"tyxiangs"},"content":"     * Retrieves all the appointments for a specific patient.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"tyxiangs"},"content":"     * @param patientId The ID of the patient.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"tyxiangs"},"content":"     * @return A string listing all the appointments for the patient.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"tyxiangs"},"content":"    public String getAllPatientsAppointments(Id patientId) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"tyxiangs"},"content":"        StringBuilder result \u003d new StringBuilder(\"These are all the appointments this patient has:\\n\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"tyxiangs"},"content":"        for (LocalDateTime date : appointments) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"tyxiangs"},"content":"            Appointment appointment \u003d appointmentDatabase.get(date);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"tyxiangs"},"content":"            if (appointment.getPatientId().equals(patientId)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"tyxiangs"},"content":"                result.append(appointment).append(\"\\n\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"tyxiangs"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"tyxiangs"},"content":"        return result.toString();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"tyxiangs"},"content":"     * Retrieves all appointments for a specific doctor.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"tyxiangs"},"content":"     * @param doctorId The ID of the doctor.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"tyxiangs"},"content":"     * @return A string listing all appointments for the doctor.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"tyxiangs"},"content":"    public static String getAllAppointments(Id doctorId) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"tyxiangs"},"content":"        StringBuilder sb \u003d new StringBuilder(\"All appointments for you in the database:\\n\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"tyxiangs"},"content":"        for (Map.Entry\u003cLocalDateTime, Appointment\u003e entry : appointmentDatabase.entrySet()) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"tyxiangs"},"content":"            Id checkId \u003d entry.getValue().getDoctorId();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"tyxiangs"},"content":"            if (checkId.equals(doctorId)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"tyxiangs"},"content":"                LocalDateTime date \u003d entry.getKey();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"tyxiangs"},"content":"                Appointment appointment \u003d entry.getValue();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"tyxiangs"},"content":"                sb.append(appointment).append(\"\\n\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"tyxiangs"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"tyxiangs"},"content":"        return sb.toString();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"tyxiangs"},"content":"     * Retrieves all appointments for a specific day for a patient and doctor.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"tyxiangs"},"content":"     * @param date The date to check.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"tyxiangs"},"content":"     * @param patientId The ID of the patient.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"tyxiangs"},"content":"     * @param doctorId The ID of the doctor.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"tyxiangs"},"content":"     * @return A list of appointments on the specified day.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"tyxiangs"},"content":"     * @throws AppNotFoundException if no appointments are found for the specified date.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"tyxiangs"},"content":"    public String getPatientAppointmentsForDay(LocalDate date, Id patientId, Id doctorId)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"tyxiangs"},"content":"            throws AppNotFoundException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"tyxiangs"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"tyxiangs"},"content":"        for (LocalDateTime appointmentDateTime : appointments) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"tyxiangs"},"content":"            Appointment appointment \u003d appointmentDatabase.get(appointmentDateTime);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"tyxiangs"},"content":"            if (appointmentDateTime.toLocalDate().equals(date)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"tyxiangs"},"content":"                    \u0026\u0026 appointment.getPatientId().equals(patientId)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"tyxiangs"},"content":"                    \u0026\u0026 appointment.getDoctorId().equals(doctorId)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"tyxiangs"},"content":"                sb.append(appointment)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"tyxiangs"},"content":"                        .append(System.lineSeparator());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"tyxiangs"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"tyxiangs"},"content":"        if (sb.isEmpty()) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"tyxiangs"},"content":"            throw new AppNotFoundException(\"No appointments found for the specified date.\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"tyxiangs"},"content":"        return sb.toString();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"tyxiangs"},"content":"     * Retrieves all appointments for a specific day for a doctor.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"tyxiangs"},"content":"     * @param date The date to check.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"tyxiangs"},"content":"     * @param doctorId The ID of the doctor.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"tyxiangs"},"content":"     * @return A list of appointments on the specified day.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"tyxiangs"},"content":"     * @throws AppNotFoundException if no appointments are found for the specified date.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"tyxiangs"},"content":"    public String getDoctorAppointmentsForDay(LocalDate date, Id doctorId)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"tyxiangs"},"content":"            throws AppNotFoundException {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"tyxiangs"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"tyxiangs"},"content":"        for (LocalDateTime appointmentDateTime : appointments) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"tyxiangs"},"content":"            Appointment appointment \u003d appointmentDatabase.get(appointmentDateTime);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"tyxiangs"},"content":"            if (appointmentDateTime.toLocalDate().equals(date)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"tyxiangs"},"content":"                    \u0026\u0026 appointment.getDoctorId().equals(doctorId)) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"tyxiangs"},"content":"                sb.append(appointment)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"tyxiangs"},"content":"                        .append(System.lineSeparator());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"tyxiangs"},"content":"            }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"tyxiangs"},"content":"        if (sb.isEmpty()) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"tyxiangs"},"content":"            throw new AppNotFoundException(\"No appointments found for the specified date.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"tyxiangs"},"content":"        return sb.toString();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"tyxiangs"},"content":"     * Retrieves all appointments for a specific patient within the past \u0027n\u0027 days.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"tyxiangs"},"content":"     * @param days The number of recent days to search for appointments.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"tyxiangs"},"content":"     * @param patientId The ID of the patient whose appointments to retrieve.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"tyxiangs"},"content":"     * @return A string containing all appointments formatted for the specified patient within the last \u0027n\u0027 days.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"tyxiangs"},"content":"     * @throws AppNotFoundException if no appointments are found within the specified time period.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"tyxiangs"},"content":"    public String getPatientAppointmentsForRecentDays(int days, Id patientId)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"tyxiangs"},"content":"            throws AppNotFoundException {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"tyxiangs"},"content":"        ArrayList\u003cAppointment\u003e appointmentsForRecentDays \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"tyxiangs"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"tyxiangs"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"tyxiangs"},"content":"        LocalDate startDate \u003d currentDate.minusDays(days);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"tyxiangs"},"content":"        // Iterate through the patient\u0027s specific appointments and filter for recent \u0027n\u0027 days","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"tyxiangs"},"content":"        for (LocalDateTime appointmentDateTime : appointments) { // appointments is the patient\u0027s list","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"tyxiangs"},"content":"            Appointment appointment \u003d appointmentDatabase.get(appointmentDateTime);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"tyxiangs"},"content":"            LocalDate appointmentDate \u003d appointmentDateTime.toLocalDate();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"tyxiangs"},"content":"            if (!appointmentDate.isBefore(startDate) \u0026\u0026 !appointmentDate.isAfter(currentDate)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"tyxiangs"},"content":"                    \u0026\u0026 appointment.getPatientId().equals(patientId)) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"tyxiangs"},"content":"                sb.append(appointment)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"tyxiangs"},"content":"                        .append(System.lineSeparator());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"tyxiangs"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"tyxiangs"},"content":"        // If no appointments are found, throw an exception","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"tyxiangs"},"content":"        if (sb.isEmpty()) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"tyxiangs"},"content":"            throw new AppNotFoundException(\"No appointments found for the recent \" + days + \" days.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"tyxiangs"},"content":"        // Return the formatted string of appointments","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"tyxiangs"},"content":"        return sb.toString();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"tyxiangs"},"content":"     * Retrieves all appointments for a specific doctor within the past \u0027n\u0027 days.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"tyxiangs"},"content":"     * @param days The number of recent days to search for appointments.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"tyxiangs"},"content":"     * @param doctorId The ID of the doctor whose appointments to retrieve.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"tyxiangs"},"content":"     * @return A string containing all appointments formatted for the specified doctor within the last \u0027n\u0027 days.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"tyxiangs"},"content":"     * @throws AppNotFoundException if no appointments are found within the specified time period.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"tyxiangs"},"content":"    public String getDoctorAppointmentsForRecentDays(int days, Id doctorId)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"tyxiangs"},"content":"            throws AppNotFoundException {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"tyxiangs"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"tyxiangs"},"content":"        // Get the most recent date from the appointment database","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"tyxiangs"},"content":"        if (appointmentDatabase.isEmpty()) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"tyxiangs"},"content":"            throw new AppNotFoundException(\"No appointments found in the database.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"tyxiangs"},"content":"        // Find the most recent appointment date","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"tyxiangs"},"content":"        LocalDateTime mostRecentDateTime \u003d appointmentDatabase.lastKey();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"tyxiangs"},"content":"        LocalDate mostRecentDate \u003d mostRecentDateTime.toLocalDate();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"tyxiangs"},"content":"        LocalDate startDate \u003d mostRecentDate.minusDays(days);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"tyxiangs"},"content":"        // Filter appointments within the last \u0027n\u0027 days for the given doctor","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"tyxiangs"},"content":"        for (Map.Entry\u003cLocalDateTime, Appointment\u003e entry : appointmentDatabase.entrySet()) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"tyxiangs"},"content":"            Appointment appointment \u003d entry.getValue();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"tyxiangs"},"content":"            LocalDate appointmentDate \u003d entry.getKey().toLocalDate();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"tyxiangs"},"content":"            if (!appointmentDate.isBefore(startDate) \u0026\u0026 !appointmentDate.isAfter(mostRecentDate)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"tyxiangs"},"content":"                    \u0026\u0026 appointment.getDoctorId().equals(doctorId)) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"tyxiangs"},"content":"                sb.append(appointment)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"tyxiangs"},"content":"                        .append(System.lineSeparator());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"tyxiangs"},"content":"            }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"tyxiangs"},"content":"        // If no appointments are found, throw an exception","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"tyxiangs"},"content":"        if (sb.isEmpty()) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"tyxiangs"},"content":"            throw new AppNotFoundException(\"No appointments found for the recent \" + days + \" days.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"tyxiangs"},"content":"        // Return the formatted string of appointments","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"tyxiangs"},"content":"        return sb.toString();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"shinichi04"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"shinichi04"},"content":"     * Removes all appointments from a patient\u0027s history.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"shinichi04"},"content":"     *","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"shinichi04"},"content":"     * @param patientId The ID of the patient that is removed.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"shinichi04"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"shinichi04"},"content":"    public static void deletePatientsAppointments(Id patientId) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"shinichi04"},"content":"        Patient patient \u003d Patient.getPatientWithId(patientId);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"shinichi04"},"content":"        for (LocalDateTime date : patient.getHistory().appointments) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"shinichi04"},"content":"            Appointment appointment \u003d appointmentDatabase.get(date);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"shinichi04"},"content":"            if (appointment.getPatientId().equals(patientId)) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"shinichi04"},"content":"                appointmentDatabase.remove(date);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"shinichi04"},"content":"            }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"shinichi04"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"shinichi04"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"tyxiangs"},"content":"     * Formats the appointment details for display.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"tyxiangs"},"content":"     * @param dateTime The date and time of the appointment.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"tyxiangs"},"content":"     * @param appointment The appointment object.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"tyxiangs"},"content":"     * @return A formatted string representing the appointment details.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"tyxiangs"},"content":"    private static String formatAppointment(LocalDateTime dateTime, Appointment appointment) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"tyxiangs"},"content":"        return String.format(\"Appointment on %s: Doctor ID \u003d %s, Patient ID \u003d %s\",","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"tyxiangs"},"content":"                dateTime.toString(), appointment.getDoctorId().toString(), appointment.getPatientId().toString());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"tyxiangs"},"content":"     * Returns a string representation of all appointments in the database.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"tyxiangs"},"content":"     * @return A string listing all appointments for the patient.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"tyxiangs"},"content":"    public String toString() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"tyxiangs"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Appointments for this patient:\\n\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"tyxiangs"},"content":"        // Iterate over the list of appointments for this specific patient","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"tyxiangs"},"content":"        for (LocalDateTime date : appointments) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"tyxiangs"},"content":"            Appointment appointment \u003d appointmentDatabase.get(date);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"tyxiangs"},"content":"            if (appointment !\u003d null) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"tyxiangs"},"content":"                sb.append(formatAppointment(date, appointment)).append(\"\\n\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"tyxiangs"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"tyxiangs"},"content":"        return sb.toString();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-10-08","isFullCredit":false}],"authorContributionMap":{"Nigeltzy":15,"tyxiangs":339,"chengzihao123":13,"sandyk0105":4,"shinichi04":14}},{"path":"src/main/java/seedu/address/model/person/Id.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nigeltzy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nigeltzy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nigeltzy"},"content":"/**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nigeltzy"},"content":" * Id class that auto-increments and generates an automated unique Id number for Doctors and Patients separately.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nigeltzy"},"content":" */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nigeltzy"},"content":"public class Id {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nigeltzy"},"content":"    private static int patientIdCounter \u003d 0;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nigeltzy"},"content":"    private static int doctorIdCounter \u003d 0;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nigeltzy"},"content":"    private static int personIdCounter \u003d 0; // TODO REMOVE AFTER V1.3","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chengzihao123"},"content":"    protected int idValue;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nigeltzy"},"content":"    private Class\u003c? extends Person\u003e role;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nigeltzy"},"content":"    /**","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nigeltzy"},"content":"     * Creates an Id that is associated with a specific class.","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nigeltzy"},"content":"     *","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nigeltzy"},"content":"     * @param personClass Either Doctor or Patient class.","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nigeltzy"},"content":"     */","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nigeltzy"},"content":"    public Id(Class\u003c? extends Person\u003e personClass) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nigeltzy"},"content":"        requireNonNull(personClass);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nigeltzy"},"content":"        this.role \u003d personClass;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nigeltzy"},"content":"        // Check if the class is Patient or Doctor and assign the appropriate ID","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nigeltzy"},"content":"        if (personClass.equals(Patient.class)) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nigeltzy"},"content":"            idValue \u003d ++patientIdCounter;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nigeltzy"},"content":"        } else if (personClass.equals(Doctor.class)) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nigeltzy"},"content":"            idValue \u003d ++doctorIdCounter;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nigeltzy"},"content":"        } else if (personClass.equals(Person.class)) { // TODO AFTER INTEGRATION","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nigeltzy"},"content":"            idValue \u003d ++personIdCounter;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nigeltzy"},"content":"        } else {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nigeltzy"},"content":"            throw new IllegalArgumentException(\"Invalid class type. Expected Patient or Doctor.\");","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nigeltzy"},"content":"        }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nigeltzy"},"content":"    public int getIdValue() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nigeltzy"},"content":"        return idValue;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nigeltzy"},"content":"    public Class\u003c? extends Person\u003e getRole() {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nigeltzy"},"content":"        return role;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nigeltzy"},"content":"    @Override","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nigeltzy"},"content":"    public String toString() {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nigeltzy"},"content":"        return \"Id{\" + \"id\u003d\" + idValue + \", role\u003d\" + role.getSimpleName() + \u0027}\u0027;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nigeltzy"},"content":"}","lastModifiedDate":"2024-10-09","isFullCredit":false}],"authorContributionMap":{"Nigeltzy":47,"chengzihao123":1}},{"path":"src/main/java/seedu/address/model/person/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nigeltzy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nigeltzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nigeltzy"},"content":"import java.util.Set;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nigeltzy"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nigeltzy"},"content":"/**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nigeltzy"},"content":" * Represents a Patient in the address book.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nigeltzy"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nigeltzy"},"content":" */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nigeltzy"},"content":"public class Patient extends Person {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"     * Static list to store all Patient instances.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nigeltzy"},"content":"    private static ArrayList\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nigeltzy"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"     * Constructs a Patient object with the specified details.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nigeltzy"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nigeltzy"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"     * @param name The name of the patient.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"     * @param phone The phone number of the patient.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"     * @param email The email address of the patient.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"     * @param address The residential address of the patient.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"     * @param remark Additional remarks about the patient.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"     * @param tags Tags associated with the patient (e.g., chronic conditions).","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nigeltzy"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nigeltzy"},"content":"    public Patient(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nigeltzy"},"content":"        super(name, phone, email, address, remark, tags);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"        Patient.patients.add(this); // Add this patient to the static list of all patients","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"     * Retrieves the list of all patients.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"     * @return An ArrayList containing all registered patients.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nigeltzy"},"content":"    public static ArrayList\u003cPatient\u003e getPatients() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nigeltzy"},"content":"        return patients;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"     * Retrieves a patient by their Id object.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"     * @param patientId The Id object of the patient to search for.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"     * @return The Patient object if found, or null if no matching patient is found.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"    public static Patient getPatientWithId(Id patientId) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"        ArrayList\u003cPatient\u003e allPatients \u003d getPatients();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"        for (Patient patient : allPatients) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"            if (patient.getId().equals(patientId)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"                return patient;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"        return null;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"     * Retrieves a patient by their ID as a String.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"     * @param id The ID of the patient as a String.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"     * @return The Patient object if found, or null if no matching patient is found.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chengzihao123"},"content":"    public static Patient getPatientWithId(String id) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chengzihao123"},"content":"        ArrayList\u003cPatient\u003e allPatients \u003d getPatients();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chengzihao123"},"content":"        for (Patient patient : allPatients) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chengzihao123"},"content":"            if (String.valueOf(patient.getId().getIdValue()).equals(id)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chengzihao123"},"content":"                return patient;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chengzihao123"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"        return null; // Return null if no matching patient is found","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nigeltzy"},"content":"}","lastModifiedDate":"2024-10-07","isFullCredit":false}],"authorContributionMap":{"Nigeltzy":27,"tyxiangs":40,"chengzihao123":8}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nigeltzy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nigeltzy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.commons.exceptions.AppNotFoundException;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nigeltzy"},"content":"public class Person implements Appointmentable {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nigeltzy"},"content":"    private final Id id;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"    private final Remark remark;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nigeltzy"},"content":"    private final History history;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nigeltzy"},"content":"        this.id \u003d new Id(this.getClass());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nigeltzy"},"content":"        this.history \u003d new History();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"    public Remark getRemark() {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"        return remark;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sandyk0105"},"content":"    public void addNotes(String notes) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sandyk0105"},"content":"        this.remark.addNotes(notes);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sandyk0105"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nigeltzy"},"content":"    public Id getId() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nigeltzy"},"content":"        return id;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tyxiangs"},"content":"    public History getHistory() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tyxiangs"},"content":"        return history;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"    public String getHistoryBase() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tyxiangs"},"content":"        return History.getHistoryDataBase();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tyxiangs"},"content":"    // Method in the class (e.g., Patient or Doctor) to retrieve the appointment details","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tyxiangs"},"content":"    public String getOneHistory(LocalDateTime dateTime, Id patientId) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tyxiangs"},"content":"            Appointment appointment \u003d history.getOneAppointmentDetail(dateTime, patientId);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tyxiangs"},"content":"            return appointment.toString(); // Assuming the Appointment class has a toString() method for formatting","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tyxiangs"},"content":"        } catch (AppNotFoundException e) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tyxiangs"},"content":"            return \"No appointment found for the given date, patient, and doctor.\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tyxiangs"},"content":"    public String getOneDayDoctorAppointment(LocalDate date, Id doctorId) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tyxiangs"},"content":"            String appointments \u003d history.getDoctorAppointmentsForDay(date, doctorId);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tyxiangs"},"content":"            return appointments; // Assuming the Appointment class has a toString() method for formatting","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tyxiangs"},"content":"        } catch (AppNotFoundException e) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tyxiangs"},"content":"            return \"No appointment found for the given date and doctor.\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tyxiangs"},"content":"     * Returns true if both persons of the same name have at least one other identity field that is the same.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tyxiangs"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tyxiangs"},"content":"                \u0026\u0026 (otherPerson.getPhone().equals(getPhone()) || otherPerson.getEmail().equals(getEmail()));","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Nigeltzy"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Nigeltzy"},"content":"     * Adds a new appointment at the specified time, for the respective patient and doctor.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Nigeltzy"},"content":"     *","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Nigeltzy"},"content":"     * @param dateTime  Time of appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Nigeltzy"},"content":"     * @param patientId Id of patient in the appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Nigeltzy"},"content":"     * @param doctorId  Id of doctor in the appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Nigeltzy"},"content":"     * @return True if command was successful, false if otherwise.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Nigeltzy"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Nigeltzy"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Nigeltzy"},"content":"    public boolean addAppointment(LocalDateTime dateTime, Id patientId, Id doctorId, String remarks) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Nigeltzy"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Nigeltzy"},"content":"        requireNonNull(patientId);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Nigeltzy"},"content":"        requireNonNull(doctorId);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Nigeltzy"},"content":"        requireNonNull(remarks);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Nigeltzy"},"content":"        return history.addAppointment(dateTime, patientId, doctorId, remarks);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Nigeltzy"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Nigeltzy"},"content":"     * Delete an appointment at the specified time, with the respective patient and doctor.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Nigeltzy"},"content":"     *","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Nigeltzy"},"content":"     * @param dateTime  Time of appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Nigeltzy"},"content":"     * @param patientId Id of patient in the appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Nigeltzy"},"content":"     * @param doctorId  Id of doctor in the appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Nigeltzy"},"content":"     * @return True if command was successful, false if otherwise.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Nigeltzy"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Nigeltzy"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Nigeltzy"},"content":"    public boolean deleteAppointment(LocalDateTime dateTime, Id patientId, Id doctorId) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Nigeltzy"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Nigeltzy"},"content":"        requireNonNull(patientId);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Nigeltzy"},"content":"        requireNonNull(doctorId);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tyxiangs"},"content":"        return History.deleteAppointment(dateTime, patientId, doctorId);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Nigeltzy"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Nigeltzy"},"content":"     * Gets an appointment at the specified time, with the respective patient and doctor.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Nigeltzy"},"content":"     *","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Nigeltzy"},"content":"     * @param dateTime  Time of appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Nigeltzy"},"content":"     * @param patientId Id of patient in the appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Nigeltzy"},"content":"     * @param doctorId  Id of doctor in the appointment.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Nigeltzy"},"content":"     * @return True if command was successful, false if otherwise.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Nigeltzy"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Nigeltzy"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Nigeltzy"},"content":"    public Appointment getAppointment(LocalDateTime dateTime, Id patientId, Id doctorId) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Nigeltzy"},"content":"        // TODO AFTER v1.3","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Nigeltzy"},"content":"        return null;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Nigeltzy"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Nigeltzy"},"content":"    public String getAllAppointments() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Nigeltzy"},"content":"        return History.getAllAppointments(this.getId());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Nigeltzy"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Nigeltzy"},"content":"    public boolean editAppointment(LocalDateTime dateTime, Id patientId, Id doctorId) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Nigeltzy"},"content":"        // TODO AFTER v1.3","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Nigeltzy"},"content":"        return false;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"tyxiangs"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"tyxiangs"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"tyxiangs"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"tyxiangs"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"tyxiangs"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"tyxiangs"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"tyxiangs"},"content":"        builder.append(getName())","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"tyxiangs"},"content":"                .append(\" Phone: \")","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"tyxiangs"},"content":"                .append(getPhone())","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"tyxiangs"},"content":"                .append(\" Email: \")","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"tyxiangs"},"content":"                .append(getEmail())","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"tyxiangs"},"content":"                .append(\" Address: \")","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"tyxiangs"},"content":"                .append(getAddress())","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"tyxiangs"},"content":"                .append(\" Remark: \")","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"tyxiangs"},"content":"                .append(getRemark())","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"tyxiangs"},"content":"                .append(\" Tags: \");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"tyxiangs"},"content":"        getTags().forEach(builder::append);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"tyxiangs"},"content":"        return builder.toString();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"Nigeltzy":68,"tyxiangs":59,"-":99,"sandyk0105":4}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":" * Guarantees: immutable; is always valid as declared in {@link #Remark(String)}.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"public class Remark {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"    /** The remark string of the person. */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sandyk0105"},"content":"    private String value;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"     * @param remark A valid remark string.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"    public Remark(String remark) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"        requireNonNull(remark);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"        value \u003d remark;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sandyk0105"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sandyk0105"},"content":"     * Adds notes to this Remark","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sandyk0105"},"content":"     * @param notes notes to be added","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sandyk0105"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sandyk0105"},"content":"    public void addNotes(String notes) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sandyk0105"},"content":"        requireNonNull(notes);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sandyk0105"},"content":"        this.value +\u003d \"\\n\" + notes;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sandyk0105"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sandyk0105"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sandyk0105"},"content":"     * @return the String value of this Remark","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sandyk0105"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sandyk0105"},"content":"    public String getValue() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sandyk0105"},"content":"        return this.value;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sandyk0105"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sandyk0105"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"     * Returns the remark string.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"     * @return the string value of the remark.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"    public String toString() {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"        return value;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"     * Compares this remark to the specified object. The result is true if and only if the argument","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"     * is not null and is a {@code Remark} object that contains the same string value as this remark.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"     * @param other The object to compare this {@code Remark} against.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"     * @return true if the given object represents a {@code Remark} equivalent to this remark, false otherwise.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"     * Returns the hash code for this remark.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"     * @return The hash code value for this remark.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"    public int hashCode() {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"        return value.hashCode();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"tyxiangs":56,"sandyk0105":17}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"    private static Person person1 \u003d new Person(","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"            new Name(\"Alex Yeoh\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"            new Phone(\"87438807\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"            new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"            new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"            EMPTY_REMARK,","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"            getTagSet(\"friends\")","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"    );","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"    private static Person person2 \u003d new Person(","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"            new Name(\"Bernice Yu\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"            new Phone(\"99272758\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"            new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"            new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"            EMPTY_REMARK,","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"            getTagSet(\"colleagues\", \"friends\")","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"    );","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"    private static Person person3 \u003d new Person(","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"            new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"            new Phone(\"93210283\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"            new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"            new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"            EMPTY_REMARK,","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"            getTagSet(\"neighbours\")","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"    );","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"    private static Person person4 \u003d new Person(","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"            new Name(\"David Li\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"            new Phone(\"91031282\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"            new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"            new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"            EMPTY_REMARK,","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"            getTagSet(\"family\")","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"    );","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"    private static Person person5 \u003d new Person(","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"            new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"            new Phone(\"92492021\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"            new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"            new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"            EMPTY_REMARK,","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"            getTagSet(\"classmates\")","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"    );","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"    private static Person person6 \u003d new Person(","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"            new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"            new Phone(\"92624417\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"            new Email(\"royb@example.com\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"            new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"            EMPTY_REMARK,","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"            getTagSet(\"colleagues\")","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tyxiangs"},"content":"    );","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"        Person[] persons \u003d new Person[] {person1, person2, person3, person4, person5, person6};","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tyxiangs"},"content":"        return persons;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20","isFullCredit":false}],"authorContributionMap":{"tyxiangs":61,"-":40}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tyxiangs"},"content":"        final Remark modelRemark \u003d new Remark(\"\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tyxiangs"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"tyxiangs":3,"-":108}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"    @FXML","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"    private Label remark;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sandyk0105"},"content":"        remark.setText(person.getRemark().getValue());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21","isFullCredit":false}],"authorContributionMap":{"tyxiangs":3,"-":59,"sandyk0105":1}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"0.5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-06-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"tyxiangs":1,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/AddAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chengzihao123"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chengzihao123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chengzihao123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chengzihao123"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chengzihao123"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chengzihao123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chengzihao123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chengzihao123"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chengzihao123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chengzihao123"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chengzihao123"},"content":"public class AddAppointmentCommandTest {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chengzihao123"},"content":"    private final LocalDateTime defaultTime \u003d LocalDateTime.of(2024, 12, 31, 12, 0);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chengzihao123"},"content":"    private final String defaultRemark \u003d \"\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chengzihao123"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chengzihao123"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chengzihao123"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAppointmentCommand(null, null, null, null));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chengzihao123"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chengzihao123"},"content":"    public void execute_appointmentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chengzihao123"},"content":"        AddAppointmentCommandTest.ModelStubAcceptingAppointmentAdded modelStub \u003d new AddAppointmentCommandTest","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chengzihao123"},"content":"                .ModelStubAcceptingAppointmentAdded();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chengzihao123"},"content":"        Person validPatient \u003d new PersonBuilder().buildPatient();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chengzihao123"},"content":"        Person validDoctor \u003d new PersonBuilder().buildDoctor();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chengzihao123"},"content":"        modelStub.addPersonToList(validPatient);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chengzihao123"},"content":"        modelStub.addPersonToList(validDoctor);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chengzihao123"},"content":"        CommandResult commandResult \u003d new AddAppointmentCommand(defaultTime, validPatient.getId(),","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chengzihao123"},"content":"                validDoctor.getId(), defaultRemark).execute(modelStub);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chengzihao123"},"content":"        assertEquals(AddAppointmentCommand.MESSAGE_ADD_APPOINTMENT_SUCCESS,","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chengzihao123"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chengzihao123"},"content":"        String expectedAppointments \u003d \"All appointments for you in the database:\\n\"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chengzihao123"},"content":"                + \"Appointment: Id{id\u003d4, role\u003dPatient} (patient id) \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chengzihao123"},"content":"                + \"with Id{id\u003d4, role\u003dDoctor} (doctor id). Remarks: \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chengzihao123"},"content":"                + \"\\n\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chengzihao123"},"content":"        assertEquals(expectedAppointments, validDoctor.getAllAppointments());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chengzihao123"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chengzihao123"},"content":"    public void execute_duplicateAppointment_throwsCommandException() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chengzihao123"},"content":"        Patient validPatient \u003d new PersonBuilder().buildPatient();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chengzihao123"},"content":"        Doctor validDoctor \u003d new PersonBuilder().buildDoctor();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chengzihao123"},"content":"        validPatient.addAppointment(defaultTime, validPatient.getId(), validDoctor.getId(), defaultRemark);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chengzihao123"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(defaultTime,","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chengzihao123"},"content":"                validPatient.getId(), validDoctor.getId(), defaultRemark);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chengzihao123"},"content":"        AddAppointmentCommandTest.ModelStub modelStub \u003d new AddAppointmentCommandTest","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chengzihao123"},"content":"                .ModelStubWithAppointment(validPatient, validDoctor);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chengzihao123"},"content":"        assertThrows(CommandException.class, AddAppointmentCommand","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chengzihao123"},"content":"                .MESSAGE_DUPLICATE_APPOINTMENT, () -\u003e addAppointmentCommand.execute(modelStub));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chengzihao123"},"content":"     * A default model stub that have all methods failing.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chengzihao123"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chengzihao123"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chengzihao123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"chengzihao123"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"chengzihao123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"chengzihao123"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"chengzihao123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"chengzihao123"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"chengzihao123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"chengzihao123"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"chengzihao123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"chengzihao123"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"chengzihao123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"chengzihao123"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"chengzihao123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"chengzihao123"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"chengzihao123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"chengzihao123"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"chengzihao123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"chengzihao123"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"chengzihao123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"chengzihao123"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"chengzihao123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"chengzihao123"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"chengzihao123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"chengzihao123"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"chengzihao123"},"content":"            return null;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"chengzihao123"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonById(Id id) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"chengzihao123"},"content":"            return null;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"chengzihao123"},"content":"        public Patient getFilteredPatientById(ObservableList\u003cPerson\u003e allPersons, Id id) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"chengzihao123"},"content":"            return null;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"chengzihao123"},"content":"        public Doctor getFilteredDoctorById(ObservableList\u003cPerson\u003e allPersons, Id id) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"chengzihao123"},"content":"            return null;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"chengzihao123"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"chengzihao123"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"chengzihao123"},"content":"    private class ModelStubWithAppointment extends AddAppointmentCommandTest.ModelStub {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"chengzihao123"},"content":"        private final Patient patient;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"chengzihao123"},"content":"        private final Doctor doctor;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"chengzihao123"},"content":"        ModelStubWithAppointment(Patient patient, Doctor doctor) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"chengzihao123"},"content":"            requireNonNull(patient);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"chengzihao123"},"content":"            requireNonNull(doctor);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"chengzihao123"},"content":"            this.patient \u003d patient;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"chengzihao123"},"content":"            this.doctor \u003d doctor;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"chengzihao123"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"chengzihao123"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"chengzihao123"},"content":"            return person.isSamePerson(patient) || person.isSamePerson(doctor);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"chengzihao123"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"chengzihao123"},"content":"            return javafx.collections.FXCollections.observableArrayList(patient, doctor);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"chengzihao123"},"content":"        public Patient getFilteredPatientById(ObservableList\u003cPerson\u003e allPersons, Id id) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"chengzihao123"},"content":"            return patient.getId().equals(id) ? patient : null;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"chengzihao123"},"content":"        public Doctor getFilteredDoctorById(ObservableList\u003cPerson\u003e allPersons, Id id) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"chengzihao123"},"content":"            return doctor.getId().equals(id) ? doctor : null;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"chengzihao123"},"content":"     * A Model stub that always accept the appointment being added.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"chengzihao123"},"content":"    private class ModelStubAcceptingAppointmentAdded extends AddAppointmentCommandTest.ModelStub {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"chengzihao123"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"chengzihao123"},"content":"        // Maps to store patients and doctors by their IDs","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"chengzihao123"},"content":"        private final ArrayList\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"chengzihao123"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"chengzihao123"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"chengzihao123"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"chengzihao123"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"chengzihao123"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"chengzihao123"},"content":"            personsAdded.add(person);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"chengzihao123"},"content":"        public Patient getFilteredPatientById(ObservableList\u003cPerson\u003e allPersons, Id id) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"chengzihao123"},"content":"            // Search for a patient with the specified ID","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"chengzihao123"},"content":"            for (Person person : allPersons) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"chengzihao123"},"content":"                if (person.getId().equals(id) \u0026\u0026 person instanceof Patient) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"chengzihao123"},"content":"                    return (Patient) person;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"chengzihao123"},"content":"                }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"chengzihao123"},"content":"            }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"chengzihao123"},"content":"            return null;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"chengzihao123"},"content":"        public Doctor getFilteredDoctorById(ObservableList\u003cPerson\u003e allPersons, Id id) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"chengzihao123"},"content":"            // Search for a doctor with the specified ID","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"chengzihao123"},"content":"            for (Person person : allPersons) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"chengzihao123"},"content":"                if (person.getId().equals(id) \u0026\u0026 person instanceof Doctor) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"chengzihao123"},"content":"                    return (Doctor) person;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"chengzihao123"},"content":"                }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"chengzihao123"},"content":"            }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"chengzihao123"},"content":"            return null;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"chengzihao123"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"chengzihao123"},"content":"            return javafx.collections.FXCollections.observableArrayList(personList);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"chengzihao123"},"content":"        public void addPersonToList(Person person) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"chengzihao123"},"content":"            personList.add(person);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"chengzihao123"},"content":"}","lastModifiedDate":"2024-10-17","isFullCredit":false}],"authorContributionMap":{"chengzihao123":241}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"chengzihao123"},"content":"     * A default model stub that have all methods failing.","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"chengzihao123"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonById(Id id) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"chengzihao123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"chengzihao123"},"content":"        public Patient getFilteredPatientById(ObservableList\u003cPerson\u003e allPersons, Id id) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"chengzihao123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"chengzihao123"},"content":"        @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"chengzihao123"},"content":"        public Doctor getFilteredDoctorById(ObservableList\u003cPerson\u003e allPersons, Id id) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"chengzihao123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"chengzihao123"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12","isFullCredit":false}],"authorContributionMap":{"chengzihao123":19,"-":203}},{"path":"src/test/java/seedu/address/model/person/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nigeltzy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nigeltzy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nigeltzy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nigeltzy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nigeltzy"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nigeltzy"},"content":"import static seedu.address.testutil.TypicalPersons.DRALICE;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nigeltzy"},"content":"import static seedu.address.testutil.TypicalPersons.DRBENSON;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nigeltzy"},"content":"import static seedu.address.testutil.TypicalPersons.DRELLE;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nigeltzy"},"content":"import static seedu.address.testutil.TypicalPersons.PATIENTALICE;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nigeltzy"},"content":"import static seedu.address.testutil.TypicalPersons.PATIENTBENSON;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nigeltzy"},"content":"import static seedu.address.testutil.TypicalPersons.PATIENTCARL;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nigeltzy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nigeltzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nigeltzy"},"content":"public class AppointmentTest {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nigeltzy"},"content":"    private Appointment appointment;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nigeltzy"},"content":"    private Doctor doctor;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nigeltzy"},"content":"    private Patient patient;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nigeltzy"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nigeltzy"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nigeltzy"},"content":"        patient \u003d PATIENTALICE;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nigeltzy"},"content":"        doctor \u003d DRBENSON;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nigeltzy"},"content":"        // Create an Appointment object","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nigeltzy"},"content":"        appointment \u003d new Appointment(patient.getId(), doctor.getId(), \"Monthly check-up\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nigeltzy"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nigeltzy"},"content":"    public void constructor_initializesCorrectly() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nigeltzy"},"content":"        assertNotNull(appointment);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(doctor.getId(), appointment.getDoctorId());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(patient.getId(), appointment.getPatientId());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(\"Monthly check-up\", appointment.getRemarks());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nigeltzy"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nigeltzy"},"content":"    public void constructor_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nigeltzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nigeltzy"},"content":"                new Appointment(patient.getId(), null, \"Monthly check-up\"));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nigeltzy"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nigeltzy"},"content":"    public void constructor_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nigeltzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nigeltzy"},"content":"                new Appointment(null, doctor.getId(), \"Monthly check-up\"));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nigeltzy"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nigeltzy"},"content":"    public void constructor_nullDate_throwsNullPointerException() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nigeltzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nigeltzy"},"content":"                new Appointment(doctor.getId(), patient.getId(), null));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nigeltzy"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nigeltzy"},"content":"    public void equals() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nigeltzy"},"content":"        Patient patientCopy \u003d PATIENTALICE;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nigeltzy"},"content":"        Doctor doctorCopy \u003d DRBENSON;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nigeltzy"},"content":"        Appointment appointmentCopy \u003d new Appointment(patientCopy.getId(), doctorCopy.getId(),","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nigeltzy"},"content":"                \"Monthly check-up\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(appointment, appointmentCopy);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(appointment.getDoctorId(), appointmentCopy.getDoctorId());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(appointment.getPatientId(), appointmentCopy.getPatientId());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(appointment.getRemarks(), appointmentCopy.getRemarks());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nigeltzy"},"content":"        Patient newPatient \u003d PATIENTCARL;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nigeltzy"},"content":"        Doctor newDoctor \u003d DRELLE;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nigeltzy"},"content":"        Appointment newAppointment \u003d new Appointment(newPatient.getId(), newDoctor.getId(),","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nigeltzy"},"content":"                \"Monthly check-up\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nigeltzy"},"content":"        assertFalse(appointment.equals(newAppointment));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nigeltzy"},"content":"        assertFalse(newAppointment.equals(appointment));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nigeltzy"},"content":"        Appointment newAppointmentRemark \u003d new Appointment(patient.getId(), doctor.getId(),","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nigeltzy"},"content":"                \"Monthly check-up \");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nigeltzy"},"content":"        assertFalse(appointment.equals(newAppointmentRemark));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nigeltzy"},"content":"        assertFalse(newAppointmentRemark.equals(appointment));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nigeltzy"},"content":"        Patient evilPatient \u003d PATIENTBENSON;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nigeltzy"},"content":"        Doctor evilDoctor \u003d DRALICE;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nigeltzy"},"content":"        Appointment newEvilAppointment \u003d new Appointment(evilPatient.getId(), evilDoctor.getId(),","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nigeltzy"},"content":"                \"Monthly check-up\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nigeltzy"},"content":"        assertFalse(appointment.equals(newEvilAppointment));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Nigeltzy"},"content":"        assertFalse(newEvilAppointment.equals(appointment));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Nigeltzy"},"content":"        Appointment newEvilAppointment1 \u003d new Appointment(evilDoctor.getId(), evilPatient.getId(),","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Nigeltzy"},"content":"                \"Monthly check-up\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Nigeltzy"},"content":"        assertFalse(appointment.equals(newEvilAppointment1));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Nigeltzy"},"content":"        assertFalse(newEvilAppointment1.equals(appointment));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Nigeltzy"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Nigeltzy"},"content":"    public void toAString() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(appointment.toString(), \"Appointment: \" + appointment.getPatientId()","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Nigeltzy"},"content":"                + \" (patient id) with \" + appointment.getDoctorId() + \" (doctor id). \"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Nigeltzy"},"content":"                + \"Remarks: \" + appointment.getRemarks());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Nigeltzy"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Nigeltzy"},"content":"    public void hashCode_hashesCorrectly() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Nigeltzy"},"content":"        Patient patientCopy \u003d PATIENTALICE;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Nigeltzy"},"content":"        Doctor doctorCopy \u003d DRBENSON;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Nigeltzy"},"content":"        Appointment appointmentCopy \u003d new Appointment(patientCopy.getId(), doctorCopy.getId(),","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Nigeltzy"},"content":"                \"Monthly check-up\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(appointment.hashCode(), appointmentCopy.hashCode());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Nigeltzy"},"content":"}","lastModifiedDate":"2024-10-17","isFullCredit":false}],"authorContributionMap":{"Nigeltzy":111}},{"path":"src/test/java/seedu/address/model/person/DoctorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nigeltzy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nigeltzy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nigeltzy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nigeltzy"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nigeltzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nigeltzy"},"content":"import java.util.Set;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nigeltzy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nigeltzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nigeltzy"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nigeltzy"},"content":"public class DoctorTest {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nigeltzy"},"content":"    private Doctor testDoctor1;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nigeltzy"},"content":"    private Doctor testDoctor2;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nigeltzy"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nigeltzy"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nigeltzy"},"content":"        // Clear the static list of patients before each test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nigeltzy"},"content":"        Doctor.getDoctors().clear();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nigeltzy"},"content":"        testDoctor1 \u003d new Doctor(","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nigeltzy"},"content":"                new Name(\"Alice\"), new Phone(\"12345678\"), new Email(\"alice@example.com\"),","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nigeltzy"},"content":"                new Address(\"123 Wonderland\"), new Remark(\"Diabetic\"), Set.of(new Tag(\"Chronic\")));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nigeltzy"},"content":"        testDoctor2 \u003d new Doctor(","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nigeltzy"},"content":"                new Name(\"Bob\"), new Phone(\"87654321\"), new Email(\"bob@example.com\"),","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nigeltzy"},"content":"                new Address(\"456 Nowhere Street\"), new Remark(\"Healthy\"), Set.of(new Tag(\"General\")));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nigeltzy"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nigeltzy"},"content":"    public void constructor_addsDoctorToList() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nigeltzy"},"content":"        ArrayList\u003cDoctor\u003e doctors \u003d Doctor.getDoctors();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(2, doctors.size());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(testDoctor1, doctors.get(0));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(testDoctor2, doctors.get(1));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nigeltzy"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nigeltzy"},"content":"    public void getDoctorWithId_validId_returnsCorrectDoctor() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nigeltzy"},"content":"        Id testDoctor1Id \u003d testDoctor1.getId();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nigeltzy"},"content":"        Doctor foundDoctor \u003d Doctor.getDoctorWithId(testDoctor1Id);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nigeltzy"},"content":"        assertNotNull(foundDoctor);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(testDoctor1, foundDoctor);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nigeltzy"},"content":"        Id testDoctor2Id \u003d testDoctor2.getId();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nigeltzy"},"content":"        Doctor foundDoctor2 \u003d Doctor.getDoctorWithId(testDoctor2Id);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nigeltzy"},"content":"        assertNotNull(foundDoctor2);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(testDoctor2, foundDoctor2);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nigeltzy"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nigeltzy"},"content":"    public void getDoctorWithId_validStringId_returnsCorrectDoctor() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nigeltzy"},"content":"        int testDoctor1Id \u003d testDoctor1.getId().getIdValue();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nigeltzy"},"content":"        int testDoctor2Id \u003d testDoctor2.getId().getIdValue();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nigeltzy"},"content":"        Doctor foundDoctor \u003d Doctor.getDoctorWithId(Integer.toString(testDoctor1Id));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nigeltzy"},"content":"        assertNotNull(foundDoctor);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(testDoctor1, foundDoctor);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nigeltzy"},"content":"        Doctor foundDoctor2 \u003d Doctor.getDoctorWithId(Integer.toString(testDoctor2Id));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nigeltzy"},"content":"        assertNotNull(foundDoctor2);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(testDoctor2, foundDoctor2);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nigeltzy"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nigeltzy"},"content":"    public void getDoctorWithId_invalidId_returnsNull() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nigeltzy"},"content":"        Doctor foundDoctor \u003d Doctor.getDoctorWithId(new Id(Person.class));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nigeltzy"},"content":"        assertNull(foundDoctor);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nigeltzy"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nigeltzy"},"content":"    public void getDoctorWithId_invalidStringId_returnsNull() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nigeltzy"},"content":"        Doctor foundDoctor \u003d Doctor.getDoctorWithId(\"Invalid\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nigeltzy"},"content":"        assertNull(foundDoctor);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nigeltzy"},"content":"}","lastModifiedDate":"2024-10-17","isFullCredit":false}],"authorContributionMap":{"Nigeltzy":80}},{"path":"src/test/java/seedu/address/model/person/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nigeltzy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nigeltzy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nigeltzy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nigeltzy"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nigeltzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nigeltzy"},"content":"import java.util.Set;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nigeltzy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nigeltzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nigeltzy"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nigeltzy"},"content":"public class PatientTest {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nigeltzy"},"content":"    private Patient testPatient1;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nigeltzy"},"content":"    private Patient testPatient2;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nigeltzy"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nigeltzy"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nigeltzy"},"content":"        // Clear the static list of patients before each test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nigeltzy"},"content":"        Patient.getPatients().clear();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nigeltzy"},"content":"        testPatient1 \u003d new Patient(","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nigeltzy"},"content":"                new Name(\"Alice\"), new Phone(\"12345678\"), new Email(\"alice@example.com\"),","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nigeltzy"},"content":"                new Address(\"123 Wonderland\"), new Remark(\"Diabetic\"), Set.of(new Tag(\"Chronic\")));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nigeltzy"},"content":"        testPatient2 \u003d new Patient(","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nigeltzy"},"content":"                new Name(\"Bob\"), new Phone(\"87654321\"), new Email(\"bob@example.com\"),","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nigeltzy"},"content":"                new Address(\"456 Nowhere Street\"), new Remark(\"Healthy\"), Set.of(new Tag(\"General\")));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nigeltzy"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nigeltzy"},"content":"    public void constructor_addsPatientToList() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nigeltzy"},"content":"        ArrayList\u003cPatient\u003e patients \u003d Patient.getPatients();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(2, patients.size());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(testPatient1, patients.get(0));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(testPatient2, patients.get(1));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nigeltzy"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nigeltzy"},"content":"    public void getPatientWithId_validId_returnsCorrectPatient() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nigeltzy"},"content":"        Id testPatient1Id \u003d testPatient1.getId();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nigeltzy"},"content":"        Patient foundPatient \u003d Patient.getPatientWithId(testPatient1Id);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nigeltzy"},"content":"        assertNotNull(foundPatient);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(testPatient1, foundPatient);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nigeltzy"},"content":"        Id testPatient2Id \u003d testPatient2.getId();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nigeltzy"},"content":"        Patient foundPatient2 \u003d Patient.getPatientWithId(testPatient2Id);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nigeltzy"},"content":"        assertNotNull(foundPatient2);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(testPatient2, foundPatient2);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nigeltzy"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nigeltzy"},"content":"    public void getPatientWithId_validStringId_returnsCorrectPatient() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nigeltzy"},"content":"        int testPatient1Id \u003d testPatient1.getId().getIdValue();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nigeltzy"},"content":"        int testPatient2Id \u003d testPatient2.getId().getIdValue();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nigeltzy"},"content":"        Patient foundPatient \u003d Patient.getPatientWithId(Integer.toString(testPatient1Id));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nigeltzy"},"content":"        assertNotNull(foundPatient);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(testPatient1, foundPatient);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nigeltzy"},"content":"        Patient foundPatient2 \u003d Patient.getPatientWithId(Integer.toString(testPatient2Id));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nigeltzy"},"content":"        assertNotNull(foundPatient2);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nigeltzy"},"content":"        assertEquals(testPatient2, foundPatient2);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nigeltzy"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nigeltzy"},"content":"    public void getPatientWithId_invalidId_returnsNull() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nigeltzy"},"content":"        Patient foundPatient \u003d Patient.getPatientWithId(new Id(Person.class));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nigeltzy"},"content":"        assertNull(foundPatient);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nigeltzy"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nigeltzy"},"content":"    public void getPatientWithId_invalidStringId_returnsNull() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nigeltzy"},"content":"        Patient foundPatient \u003d Patient.getPatientWithId(\"Invalid\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nigeltzy"},"content":"        assertNull(foundPatient);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nigeltzy"},"content":"}","lastModifiedDate":"2024-10-17","isFullCredit":false}],"authorContributionMap":{"Nigeltzy":81}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"        // different phone and email -\u003e returns false","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"        // same name, same phone, different attributes -\u003e returns true","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"        // same name, same email, different attributes -\u003e returns true","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"        // same name, same phone, same email, different attributes -\u003e returns true","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01","isFullCredit":false}],"authorContributionMap":{"tyxiangs":16,"-":79}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nigeltzy"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chengzihao123"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nigeltzy"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nigeltzy"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chengzihao123"},"content":"    public static final int DEFAULT_PATIENT_ID \u003d 1234;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chengzihao123"},"content":"    public static final int DEFAULT_DOCTOR_ID \u003d 5678;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"    private Remark remark;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chengzihao123"},"content":"    private Id id;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chengzihao123"},"content":"        id \u003d personToCopy.getId();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tyxiangs"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tyxiangs"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tyxiangs"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tyxiangs"},"content":"        return this;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tyxiangs"},"content":"        return new Person(name, phone, email, address, remark, tags);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Nigeltzy"},"content":"    public Patient buildPatient() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Nigeltzy"},"content":"        return new Patient(name, phone, email, address, remark, tags);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Nigeltzy"},"content":"    public Doctor buildDoctor() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Nigeltzy"},"content":"        return new Doctor(name, phone, email, address, remark, tags);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Nigeltzy"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"chengzihao123"},"content":"     * builds a patient class","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"chengzihao123"},"content":"    public Patient buildPatient() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"chengzihao123"},"content":"        id \u003d new Id(Patient.class);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"chengzihao123"},"content":"        return new Patient(name, phone, email, address, remark, tags);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"chengzihao123"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"chengzihao123"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"chengzihao123"},"content":"    /**","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"chengzihao123"},"content":"     * builds a doctor class","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"chengzihao123"},"content":"     */","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"chengzihao123"},"content":"    public Doctor buildDoctor() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"chengzihao123"},"content":"        id \u003d new Id(Doctor.class);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"chengzihao123"},"content":"        return new Doctor(name, phone, email, address, remark, tags);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03","isFullCredit":false}],"authorContributionMap":{"Nigeltzy":10,"tyxiangs":13,"chengzihao123":20,"-":97}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nigeltzy"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nigeltzy"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nigeltzy"},"content":"    public static final Doctor DRALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nigeltzy"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nigeltzy"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nigeltzy"},"content":"            .withTags(\"friends\").buildDoctor();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nigeltzy"},"content":"    public static final Patient PATIENTALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nigeltzy"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nigeltzy"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nigeltzy"},"content":"            .withTags(\"friends\").buildPatient();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nigeltzy"},"content":"    public static final Doctor DRBENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nigeltzy"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nigeltzy"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nigeltzy"},"content":"            .withTags(\"owesMoney\", \"friends\").buildDoctor();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nigeltzy"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nigeltzy"},"content":"    public static final Patient PATIENTBENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nigeltzy"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nigeltzy"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nigeltzy"},"content":"            .withTags(\"owesMoney\", \"friends\").buildPatient();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nigeltzy"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").buildDoctor();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nigeltzy"},"content":"    public static final Doctor DRCARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nigeltzy"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").buildDoctor();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nigeltzy"},"content":"    public static final Patient PATIENTCARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nigeltzy"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").buildPatient();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nigeltzy"},"content":"    public static final Doctor DRDANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nigeltzy"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").buildDoctor();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nigeltzy"},"content":"    public static final Patient PATIENTDANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nigeltzy"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").buildPatient();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nigeltzy"},"content":"    public static final Doctor DRELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nigeltzy"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").buildDoctor();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nigeltzy"},"content":"    public static final Patient PATIENTELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nigeltzy"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").buildPatient();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nigeltzy"},"content":"    public static final Doctor DRFIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nigeltzy"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").buildDoctor();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nigeltzy"},"content":"    public static final Patient PATIENTFIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nigeltzy"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").buildPatient();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nigeltzy"},"content":"    public static final Doctor DRGEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nigeltzy"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").buildDoctor();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nigeltzy"},"content":"    public static final Patient PATIENTGEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nigeltzy"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").buildPatient();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13","isFullCredit":false}],"authorContributionMap":{"Nigeltzy":43,"-":75}}]
