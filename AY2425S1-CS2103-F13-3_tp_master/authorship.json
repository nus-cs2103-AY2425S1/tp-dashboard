[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tata32000"},"content":"[![CI Status](https://github.com/AY2425S1-CS2103-F13-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2425S1-CS2103-F13-3/tp/actions)","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LimKaiWei"},"content":"[![codecov](https://codecov.io/gh/AY2425S1-CS2103-F13-3/tp/graph/badge.svg?token\u003dRORXHI4Y1Q)](https://codecov.io/gh/AY2425S1-CS2103-F13-3/tp)","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Brendan8899"},"content":"* SeeRee 2.0 is **a project for CS2103 Software Engineering Module by Group F13-3 AY 2024/2025**.\u003cbr\u003e","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Brendan8899"},"content":"  Usages:","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Brendan8899"},"content":"  * As a meeting scheduler and contact book for busy students and professionals.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Brendan8899"},"content":"* SeeRee 2.0 allows users to create, edit and delete meetings so that they can keep track of their busy schedule. Users can also keep track of whole is attending their meeting through the use of the Address Book.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Brendan8899"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Brendan8899"},"content":"  * It comes with a developer guides specifying the Ui Mockup, User Cases, Feature Specifications and Glossary.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"QuekBingHeng"},"content":"* It is named `SeeRee 2.0` (`SR2` for short) because it was initially created as a part of a series of `AddressBook` projects (`Level 1`, `Level 2`, `Level 3` ...).","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Brendan8899"},"content":"* For the detailed documentation of this project, see the **[SeeRee2.0 Product Website](https://nus-cs2103-ay2425s1.github.io/website/admin/teamList.html)**.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org/#contributing-to-se-edu) for more info.","lastModifiedDate":"2024-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"QuekBingHeng"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-09-26","isFullCredit":false}],"authorContributionMap":{"tata32000":1,"QuekBingHeng":2,"Brendan8899":7,"LimKaiWei":1,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Brendan8899"},"content":"### Brendan Soh","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Brendan8899"},"content":"\u003cimg src\u003d\"images/brendan8899.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Brendan8899"},"content":"[[github](https://github.com/Brendan8899)]","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Brendan8899"},"content":"[[portfolio](team/brendan.md)]","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Brendan8899"},"content":"* Role: Software Developer","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LimKaiWei"},"content":"### Lim Kai Wei","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LimKaiWei"},"content":"\u003cimg src\u003d\"images/limkaiwei.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LimKaiWei"},"content":"[[github](https://github.com/LimKaiWei)]","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LimKaiWei"},"content":"[[portfolio](team/limkaiwei.md)]","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LimKaiWei"},"content":"* Role: ???","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LimKaiWei"},"content":"* Responsibilities: ???","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jewiteo"},"content":"### Jewi Teo","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jewiteo"},"content":"\u003cimg src\u003d\"images/jewiteo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jewiteo"},"content":"[[github](http://github.com/jewiteo)]","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jewiteo"},"content":"[[portfolio](team/jewiteo.md)]","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tata32000"},"content":"### Non Kittilakkananon","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tata32000"},"content":"\u003cimg src\u003d\"images/tata32000.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tata32000"},"content":"[[github](https://github.com/tata32000)]","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tata32000"},"content":"[[portfolio](team/tata32000.md)]","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"QuekBingHeng"},"content":"### Quek Bing Heng","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"QuekBingHeng"},"content":"\u003cimg src\u003d\"images/quekbingheng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"[[github](https://github.com/johndoe)]","lastModifiedDate":"2020-06-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"QuekBingHeng"},"content":"[[portfolio](team/quekbingheng.md)]","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"tata32000":4,"QuekBingHeng":3,"Brendan8899":5,"LimKaiWei":6,"-":37,"jewiteo":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# AB-3 Developer Guide","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LimKaiWei"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"LimKaiWei"},"content":"* Busy Students and Professionals with a need to coordinate available meeting times with their contacts","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"LimKaiWei"},"content":"Our application helps to coordinate meeting timings with relevant contacts, by keeping track of the schedules of the user’s contacts. This will be very useful for busy Students and Professionals that have many meetings with different people throughout the day.","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"LimKaiWei"},"content":"By making the commands similar to Natural Language, our application aims to provide a user-centric experience. The ease of use would make the product an attractive alternative to current Calendar applications that require the user to navigate multiple screens and input their meetings.","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"LimKaiWei"},"content":"| Priority | As a …​                               | I want to …​                                                                 | So that…​                                                                            |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"LimKaiWei"},"content":"|----------|--------------------------------------------|-----------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions                                                            | refer to instructions when I forget how to use the App                                    |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person                                                                  |                                                                                           |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                                                                   | remove entries that I no longer need                                                      |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name                                                             | locate details of persons without having to go through the entire list                    |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details                                                      | minimize chance of someone else seeing them by accident                                   |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name                                                              | locate a person easily                                                                    |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"LimKaiWei"},"content":"| `* * *`  | novice user                                | be able to add my schedule                                                        | I am able to keep track of my own schedule to plan meetings with others                   |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"LimKaiWei"},"content":"| `* * *`  | novice user                                | be able to delete my schedule                                                     | I am able to remove unwanted schedule                                                     |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"LimKaiWei"},"content":"| `* * *`  | novice user                                | be able to see my schedule                                                        | I am able to find a suitable timing for me to schedule meetings with others               |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"LimKaiWei"},"content":"| `* * *`  | beginner user                              | be able to see information of my contacts                                         | I am able to find the relevant information needed to contact and arrange for meetings     |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"LimKaiWei"},"content":"| `* *`    | new user                                   | have a tutorial on the SeeRee 2.0                                                 | I can use it efficiently in planning for my weekly tasks                                  |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"LimKaiWei"},"content":"| `* *`    | new user                                   | have a settings tab                                                               | I can configure SeeRee 2.0 to my needs and preferences                                    |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"LimKaiWei"},"content":"| `* *`    | beginner user                              | have error messages that inform me of my mistakes                                 | I can learn the correct implementation of the commands of the CLI                         |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"LimKaiWei"},"content":"| `* *`    | beginner user                              | edit present contacts that I have                                                 | I do not need to delete made contacts and can easily edit any changes                     |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"LimKaiWei"},"content":"| `* *`    | novice user                                | be able to edit my schedule                                                       | I am able to adjust my schedule details according to any changes that occur               |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"LimKaiWei"},"content":"| `* *`    | cli enthusiast                             | be able to navigate the entire app using only keyboard commands                   | I can use the app effectively without a mouse                                             |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | new user                                   | have a nice streamlined CLI interface                                             | it is easy on my eyes when I am focusing on planning my tasks                             |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | expert user                                | be able to see the schedules of my contacts                                       | I am able to schedule meetings at approriate timings for everyone                         |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | expert user                                | delete large groups of contacts                                                   | I am able to reduce clutter of information and schedules when they become irrelevant      |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | expert user                                | add large groups of contacts                                                      | I am able to efficiently add related members and not have to type redundant information   |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | beginner user                              | have reminders for project and task deadline                                      | I am able to stay on track with my work within the week                                   |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | expert user                                | be able to create personalised shortcuts for commonly used functions              | I am able to save time on frequently performed tasks                                      |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | beginner user                              | add notes to each contact (e.g. project role, preferred contact method)           | I can remember important details when reaching out                                        |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | new user                                   | categorize my contacts by groups (e.g. students, team members)                    | I can easily find the right people based on the project or class                          |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | novice user                                | mark certain contacts as \"favorites\"                                              | I can easily access key people I frequently interact with, like project leads or students |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | expert user                                | create contact reminders (e.g. \"check in with students after the midterm\")        | I remember to follow up at key points throughout the semester                             |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | new user                                   | sort my contacts alphabetically or by other method                                | I can quickly find the contact I need                                                     |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | expert user                                | archive contacts that I no longer need but might want to reference in the future  | my main contact list stays clutter-free without losing old connections                    |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | new user                                   | have a reccomended path to travel to meeting rooms                                | I will be able to reach meeting venues easily                                             |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | speedy user                                | be able to check whether a specific meeting time has conflicts easily             | plan meeting time more efficiently                                                        |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | busy user                                  | have notifications of my upcoming meetings everyday                               | I will remember what meetings I want to attend                                            |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | team member                                | export my schedule into a nice text using a single command                        | I will be able to communicate to my teammates my schedule easily                          |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | team member                                | import my teammate schedule using a single command                                | I can use the App to plan meeting times easily                                            |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | careless user                              | be able to bulk edit or delete the tasks for the day                              |                                                                                           |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | long time user                             | merge duplicate contacts easily                                                   | I can consolidate information from multiple entries                                       |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | speedy user                                | (I want) the app to load my schedule within 2 seconds                             | I can quickly access my information without waiting                                       |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | non-native English speaker                 | (I want) the app to be available in multiple languages                            | I can use it in my preferred language                                                     |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | expert user                                | be able to export my data in standard formats (e.g., iCal, CSV)                   | I can easily migrate my information if needed                                             |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"LimKaiWei"},"content":"| `*`      | power user                                 | be able to customize the app\u0027s interface and features to my preferences           | I can optimize my workflow                                                                |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"LimKaiWei"},"content":"For all use cases below, the **System** is the `SeeRee 2.0` and the **Actor** is the `user`, unless specified otherwise","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"LimKaiWei"},"content":"\u003cu\u003e**Use case: UC0 - Delete a person**\u003c/u\u003e","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"LimKaiWei"},"content":"\u003cu\u003e**Use Case: UC1 - Adding events to a schedule**\u003c/u\u003e","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"LimKaiWei"},"content":"**Preconditions:**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"LimKaiWei"},"content":"- User is logged in with access to own schedule.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"LimKaiWei"},"content":"**Guarantees**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"LimKaiWei"},"content":"- User’s schedule will be updated with new events only if the command is successful.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"LimKaiWei"},"content":"- User’s old events on the schedule will not be edited.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"LimKaiWei"},"content":"**MSS**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"LimKaiWei"},"content":"1. User requests to add a new event to their schedule.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"LimKaiWei"},"content":"2. System adds a new event to the user\u0027s schedule.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"LimKaiWei"},"content":"3. User’s schedule is updated with new event.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"LimKaiWei"},"content":"   Use case ends.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"LimKaiWei"},"content":"**Extensions**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"LimKaiWei"},"content":"- 1a. System detects an error in the entered data command format.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"LimKaiWei"},"content":"    - 1a1. System requests the user to enter the proper command format.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"LimKaiWei"},"content":"        Use case resume from step 1.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"LimKaiWei"},"content":"- 1b. System detects a duplicate error in the entered data command.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"LimKaiWei"},"content":"    - 1b1. System requests the user to enter a non-conflicting time for the event.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"LimKaiWei"},"content":"        Use case resumes from step 1.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"LimKaiWei"},"content":"\u003cu\u003e**Use Case: UC2 - Delete events of a schedule**\u003c/u\u003e","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"LimKaiWei"},"content":"**Preconditions**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"LimKaiWei"},"content":"- User is logged in with access to own schedule","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"LimKaiWei"},"content":"- The specific event to be deleted exists within the schedule","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"LimKaiWei"},"content":"**Guarantees**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"LimKaiWei"},"content":"- User’s schedule will only be updated if the command is successful.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"LimKaiWei"},"content":"- Other events on the user’s schedule will not be deleted.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"LimKaiWei"},"content":"- There will not be gaps between the indexes of the new schedule after deletion.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"LimKaiWei"},"content":"**MSS**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"LimKaiWei"},"content":"1. User requests to delete a specific event on their schedule.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"LimKaiWei"},"content":"2. System deletes the event.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"LimKaiWei"},"content":"3. User’s schedule is updated without the removed event.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"LimKaiWei"},"content":"    Use case ends.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"LimKaiWei"},"content":"**Extensions**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"LimKaiWei"},"content":"- 1a. The given index is invalid","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"LimKaiWei"},"content":"    - 1a1. System shows an error message","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"LimKaiWei"},"content":"        Use case resume from step 1.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"LimKaiWei"},"content":"\u003cu\u003e**Use Case: UC3 - View schedule**\u003c/u\u003e","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"LimKaiWei"},"content":"**Preconditions**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"LimKaiWei"},"content":"- User is logged in with access to own schedule.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"LimKaiWei"},"content":"**MSS**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"LimKaiWei"},"content":"1. User requests to see a specific week in his schedule","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"LimKaiWei"},"content":"2. System updates schedule window to display schedule for that week","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"LimKaiWei"},"content":"    Use case ends.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"LimKaiWei"},"content":"**Extensions**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"LimKaiWei"},"content":"- 1a. The input date specified by the user does not follow the date format.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"LimKaiWei"},"content":"    - 1a1. System shows an error message, notifying the user the correct date format","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"LimKaiWei"},"content":"\t    Use case ends.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"LimKaiWei"},"content":"\u003cu\u003e**Use Case: UC4 - View contact information**\u003c/u\u003e","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"LimKaiWei"},"content":"**Preconditions**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"LimKaiWei"},"content":"- User is logged in with access to own contacts","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"LimKaiWei"},"content":"**Guarantees**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"LimKaiWei"},"content":"- Contacts with that name will be displayed.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"LimKaiWei"},"content":"- If no match, display a message notifying the user that no contacts with that name are found.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"LimKaiWei"},"content":"**MSS**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"LimKaiWei"},"content":"1. User finds for contact using name.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"LimKaiWei"},"content":"2. System looks for contacts with that name.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"LimKaiWei"},"content":"3. System displays all contacts with that name.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"LimKaiWei"},"content":"   Use case ends.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"LimKaiWei"},"content":"**Extensions**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"LimKaiWei"},"content":"- 2a. System is unable to find any user with that name.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"LimKaiWei"},"content":"    - 2a1. System notifies the user it is unable to find any user with that name.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"LimKaiWei"},"content":"        Use case ends.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"LimKaiWei"},"content":"\u003cu\u003e**Use Case: UC5 - Editing an existing schedule**\u003c/u\u003e","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"LimKaiWei"},"content":"**Preconditions**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"LimKaiWei"},"content":"- Users are logged in with access to their own schedule.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"LimKaiWei"},"content":"- The schedule to be edited already exists in the system.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"LimKaiWei"},"content":"**Guarantees**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"LimKaiWei"},"content":"- The schedule will be updated with the provided details only if the command is successful.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"LimKaiWei"},"content":"- The schedule\u0027s details will remain unchanged if the command fails.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"LimKaiWei"},"content":"**MSS**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"LimKaiWei"},"content":"1. User requests to edit an existing schedule using the edit-schedule command.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"LimKaiWei"},"content":"2. System checks the format of the entered data and verifies that the index is in range.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"LimKaiWei"},"content":"3. System updates the schedule with the provided name, date, time, and contact changes (if specified).","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"LimKaiWei"},"content":"4. User\u0027s schedule is successfully updated.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"LimKaiWei"},"content":"    Use case ends.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"LimKaiWei"},"content":"**Extensions**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"LimKaiWei"},"content":"- 1a. The system detects an error in the entered command format (e.g., invalid date or time format, index out of range).","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"LimKaiWei"},"content":"    - 1a1. The system displays an error message: \"Invalid edit-schedule format. Please make sure that the index is in range. d/[DATE] is in the format of DD-MM-YYYY. t/[TIME] is in the format of hhmm (24 hours notation).\"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"LimKaiWei"},"content":"        Use case resumes from step 1.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"LimKaiWei"},"content":"- 1b. The system detects that the contact index to be added or removed is out of range or invalid.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"LimKaiWei"},"content":"    - 1b1. The system displays an error message indicating the invalid contact index.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"LimKaiWei"},"content":"        Use case resumes from step 1.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"LimKaiWei"},"content":"- 1c. The system detects that the contact specified for removal is not in the current schedule.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"LimKaiWei"},"content":"    - 1c1. The system displays an error message: \"Contact not found in the schedule.\"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"LimKaiWei"},"content":"        Use case resumes from step 1.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"LimKaiWei"},"content":"4.  Is portable, the software should work without requiring an installer, only requires Java 17.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"LimKaiWei"},"content":"5.  The data should be stored locally and should be in a human editable text file.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"LimKaiWei"},"content":"6.  The product should be for a single user.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"LimKaiWei"},"content":"7.  The product is not required to use a Database Management System to store data.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"LimKaiWei"},"content":"8.  The product is not required to depend on your a remote server.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"LimKaiWei"},"content":"9.  The GUI should work well, the GUI should be usable.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"LimKaiWei"},"content":"10. The product should be packaged into a single JAR file.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"LimKaiWei"},"content":"11. The product is not required to use third-party frameworks/libraries/services.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"LimKaiWei"},"content":"* **Schedule**: A user-defined event that includes information such as a name, date, time, and associated contacts. Can be edited, added, or deleted.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"LimKaiWei"},"content":"* **Contact**: An individual or entity that is linked to a schedule. Contacts can be added or removed from schedules via commands.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"LimKaiWei":184,"-":386}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tata32000"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eSeeRee 2.0\u003c/a\u003e","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false}],"authorContributionMap":{"tata32000":1,"-":66}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LimKaiWei"},"content":"# SeeRee 2.0","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LimKaiWei"},"content":"[![CI Status](https://github.com/AY2425S1-CS2103-F13-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2425S1-CS2103-F13-3/tp/actions)","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LimKaiWei"},"content":"[![codecov](https://codecov.io/gh/AY2425S1-CS2103-F13-3/tp/graph/badge.svg?token\u003dRORXHI4Y1Q)](https://codecov.io/gh/AY2425S1-CS2103-F13-3/tp)","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LimKaiWei"},"content":"**SeeRee 2.0 is a desktop application for managing your contact details as well as schedule.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"LimKaiWei":4,"-":16}},{"path":"docs/team/brendan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Brendan8899"},"content":"  title: \"Brendan Soh\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"Brendan8899":1,"-":45}},{"path":"docs/team/jewiteo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jewiteo"},"content":"---","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jewiteo"},"content":"  layout: default.md","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jewiteo"},"content":"  title: \"Jewi Teo\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jewiteo"},"content":"---","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jewiteo"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jewiteo"},"content":"### Project: SeeRee 2.0","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jewiteo"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jewiteo"},"content":"Keeping the boilerplate documentation for reference in the future. The portion below should be updated as the project","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jewiteo"},"content":"goes on.","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jewiteo"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jewiteo"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jewiteo"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jewiteo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jewiteo"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jewiteo"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jewiteo"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jewiteo"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jewiteo"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jewiteo"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jewiteo"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jewiteo"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jewiteo"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jewiteo"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jewiteo"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jewiteo"},"content":"* **Project management**:","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jewiteo"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jewiteo"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jewiteo"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jewiteo"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jewiteo"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jewiteo"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jewiteo"},"content":"* **Documentation**:","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jewiteo"},"content":"  * User Guide:","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jewiteo"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jewiteo"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jewiteo"},"content":"  * Developer Guide:","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jewiteo"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jewiteo"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jewiteo"},"content":"* **Community**:","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jewiteo"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jewiteo"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jewiteo"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jewiteo"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jewiteo"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jewiteo"},"content":"* **Tools**:","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jewiteo"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jewiteo"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jewiteo"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jewiteo"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-09-26","isFullCredit":false}],"authorContributionMap":{"jewiteo":49}},{"path":"docs/team/tata32000.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tata32000"},"content":"  title: \"Non Kittilakkananon\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"tata32000":1,"-":45}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tata32000"},"content":"import seedu.address.model.ReadOnlyScheduleList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tata32000"},"content":"import seedu.address.model.ScheduleList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tata32000"},"content":"import seedu.address.storage.JsonScheduleStorage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tata32000"},"content":"import seedu.address.storage.ScheduleStorage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Brendan8899"},"content":"        ScheduleStorage scheduleStorage \u003d new JsonScheduleStorage(config.getScheduleStorageFilePath());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Brendan8899"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, scheduleStorage);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Brendan8899"},"content":"        model \u003d initModelManager(storage, userPrefs, scheduleStorage);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Brendan8899"},"content":"        logic \u003d new LogicManager(model, storage, scheduleStorage);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tata32000"},"content":"    private Model initModelManager(Storage storage, UserPrefs userPrefs, ScheduleStorage scheduleStorage) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Brendan8899"},"content":"        Optional\u003cReadOnlyScheduleList\u003e scheduleListOptional;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Brendan8899"},"content":"        ReadOnlyScheduleList initialScheduleList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Brendan8899"},"content":"            scheduleListOptional \u003d scheduleStorage.readScheduleList();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Brendan8899"},"content":"            if (!scheduleListOptional.isPresent()) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Brendan8899"},"content":"                logger.info(\"Creating a new data file \" + scheduleStorage.getScheduleListFilePath());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Brendan8899"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Brendan8899"},"content":"            initialScheduleList \u003d scheduleListOptional.orElse(new ScheduleList());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Brendan8899"},"content":"            initialScheduleList \u003d new ScheduleList();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Brendan8899"},"content":"        return new ModelManager(initialData, userPrefs, initialScheduleList);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping AddressBook ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"tata32000":5,"Brendan8899":13,"-":180}},{"path":"src/main/java/seedu/address/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Brendan8899"},"content":"    private Path scheduleStorageFilePath \u003d Paths.get(\"schedule.json\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Brendan8899"},"content":"    public Path getScheduleStorageFilePath() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Brendan8899"},"content":"        return scheduleStorageFilePath;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"Brendan8899":4,"-":66}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.storage.ScheduleStorage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Brendan8899"},"content":"    private final ScheduleStorage scheduleStorage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Brendan8899"},"content":"    public LogicManager(Model model, Storage storage, ScheduleStorage scheduleStorage) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Brendan8899"},"content":"        this.scheduleStorage \u003d scheduleStorage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Brendan8899"},"content":"            scheduleStorage.saveScheduleList(model.getScheduleList());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21","isFullCredit":false}],"authorContributionMap":{"Brendan8899":5,"-":87}},{"path":"src/main/java/seedu/address/logic/commands/AddScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"QuekBingHeng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"QuekBingHeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"QuekBingHeng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tata32000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tata32000"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tata32000"},"content":"import java.util.List;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"QuekBingHeng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"QuekBingHeng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"QuekBingHeng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.schedule.Meeting;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"QuekBingHeng"},"content":"/**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"QuekBingHeng"},"content":" * Adds a new schedule to the specified person in the address book.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"QuekBingHeng"},"content":" * The schedule contains an event name, date, and time.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"QuekBingHeng"},"content":" */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"QuekBingHeng"},"content":"public class AddScheduleCommand extends Command {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"QuekBingHeng"},"content":"    public static final String COMMAND_WORD \u003d \"add-schedule\";","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"QuekBingHeng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a schedule to a contact. \"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"QuekBingHeng"},"content":"            + \"Parameters: c/CONTACT_INDEX n/NAME d/DATE t/TIME\\n\"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"QuekBingHeng"},"content":"            + \"Example: \" + COMMAND_WORD + \" c/1 n/Dinner d/10-10-2024 t/1800\";","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"QuekBingHeng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New schedule added: %1$s\";","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"QuekBingHeng"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"Date must be in the format DD-MM-YYYY.\";","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"QuekBingHeng"},"content":"    public static final String MESSAGE_INVALID_TIME \u003d \"Time must be in the format HHmm (24-hour).\";","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"QuekBingHeng"},"content":"    public static final String MESSAGE_DUPLICATE_SCHEDULE \u003d \"This schedule conflicts with an existing schedule.\";","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"QuekBingHeng"},"content":"    private final int contactIndex;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"QuekBingHeng"},"content":"    private final String name;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"QuekBingHeng"},"content":"    private final LocalDate date;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"QuekBingHeng"},"content":"    private final LocalTime time;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"QuekBingHeng"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"QuekBingHeng"},"content":"     * Creates an AddScheduleCommand to add a schedule for a specified person.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"QuekBingHeng"},"content":"     * The schedule includes an event name, date, and time.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"QuekBingHeng"},"content":"     *","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"QuekBingHeng"},"content":"     * @param contactIndex The index of the person in the filtered person list.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"QuekBingHeng"},"content":"     * @param name         The name or description of the event.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"QuekBingHeng"},"content":"     * @param date         The date of the event in LocalDate format.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"QuekBingHeng"},"content":"     * @param time         The time of the event in LocalTime format.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"QuekBingHeng"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"QuekBingHeng"},"content":"    public AddScheduleCommand(int contactIndex, String name, LocalDate date, LocalTime time) {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"QuekBingHeng"},"content":"        this.contactIndex \u003d contactIndex;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"QuekBingHeng"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"QuekBingHeng"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"QuekBingHeng"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"QuekBingHeng"},"content":"    }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"QuekBingHeng"},"content":"    @Override","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"QuekBingHeng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"QuekBingHeng"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Brendan8899"},"content":"        ArrayList\u003cPerson\u003e personInvolved \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"QuekBingHeng"},"content":"        if (contactIndex \u003c 0 || contactIndex \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"QuekBingHeng"},"content":"            throw new CommandException(\"The contact index provided is invalid.\");","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"QuekBingHeng"},"content":"        }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Brendan8899"},"content":"        //Supposed to do in Parser Class for Add Schedule but Down here 1st","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Brendan8899"},"content":"        Meeting recordMeeting \u003d new Meeting((Arrays.asList(contactIndex)), name, date, time);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Brendan8899"},"content":"        // Check for duplicate schedule or time conflict here already, just click in hopefully works","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Brendan8899"},"content":"        model.addMeeting(recordMeeting);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"QuekBingHeng"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, name + \" on \" + date + \" at \" + time));","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"QuekBingHeng"},"content":"    }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"QuekBingHeng"},"content":"}","lastModifiedDate":"2024-10-10","isFullCredit":false}],"authorContributionMap":{"tata32000":3,"QuekBingHeng":60,"Brendan8899":6}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LimKaiWei"},"content":"            + \"Parameters: PREFIX/KEYWORD [MORE_PREFIX/MORE_KEYWORD]...\\n\"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LimKaiWei"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alex\";","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22","isFullCredit":false}],"authorContributionMap":{"LimKaiWei":2,"-":56}},{"path":"src/main/java/seedu/address/logic/commands/SeeScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brendan8899"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tata32000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tata32000"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tata32000"},"content":" * Represents a command to view the schedule for a specific week starting from a given date.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tata32000"},"content":" * The date is provided by the user and must follow the format \"DD-MM-YYYY\".","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tata32000"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Brendan8899"},"content":"public class SeeScheduleCommand extends Command {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Brendan8899"},"content":"    public static final String COMMAND_WORD \u003d \"see\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Brendan8899"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": See your schedule for the week. \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Brendan8899"},"content":"            + \"Parameters: d/\\n\"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Brendan8899"},"content":"            + \"Example: \" + COMMAND_WORD + \" d/10-10-2024\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Brendan8899"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"Date must be in the format DD-MM-YYYY.\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Brendan8899"},"content":"    private final LocalDate date;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Brendan8899"},"content":"    public SeeScheduleCommand(LocalDate date) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Brendan8899"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Brendan8899"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Brendan8899"},"content":"        return null;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Brendan8899"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"tata32000":6,"Brendan8899":24}},{"path":"src/main/java/seedu/address/logic/parser/AddScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"QuekBingHeng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"QuekBingHeng"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"QuekBingHeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"QuekBingHeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"QuekBingHeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"QuekBingHeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"QuekBingHeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"QuekBingHeng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"QuekBingHeng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"QuekBingHeng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"QuekBingHeng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"QuekBingHeng"},"content":"import seedu.address.logic.commands.AddScheduleCommand;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"QuekBingHeng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"QuekBingHeng"},"content":"/**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"QuekBingHeng"},"content":" * Parses input arguments and creates a new AddScheduleCommand object.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"QuekBingHeng"},"content":" */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"QuekBingHeng"},"content":"public class AddScheduleCommandParser implements Parser\u003cAddScheduleCommand\u003e {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"QuekBingHeng"},"content":"    @Override","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"QuekBingHeng"},"content":"    public AddScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"QuekBingHeng"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"QuekBingHeng"},"content":"                args, PREFIX_CONTACT, PREFIX_NAME, PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"QuekBingHeng"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CONTACT, PREFIX_NAME, PREFIX_DATE, PREFIX_TIME)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"QuekBingHeng"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"QuekBingHeng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"QuekBingHeng"},"content":"        }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"QuekBingHeng"},"content":"        try {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"QuekBingHeng"},"content":"            Index contactIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_CONTACT).get());","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"QuekBingHeng"},"content":"            String name \u003d argMultimap.getValue(PREFIX_NAME).get().trim();","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"QuekBingHeng"},"content":"            LocalDate date \u003d LocalDate.parse(argMultimap.getValue(PREFIX_DATE).get(),","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"QuekBingHeng"},"content":"                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"QuekBingHeng"},"content":"            LocalTime time \u003d LocalTime.parse(argMultimap.getValue(PREFIX_TIME).get(),","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"QuekBingHeng"},"content":"                    DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"QuekBingHeng"},"content":"            // Convert contactIndex to its zero-based integer value if needed.","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"QuekBingHeng"},"content":"            return new AddScheduleCommand(contactIndex.getZeroBased(), name, date, time);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"QuekBingHeng"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"QuekBingHeng"},"content":"            throw new ParseException(AddScheduleCommand.MESSAGE_INVALID_DATE);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"QuekBingHeng"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"QuekBingHeng"},"content":"            throw new ParseException(AddScheduleCommand.MESSAGE_INVALID_TIME);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"QuekBingHeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"QuekBingHeng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"QuekBingHeng"},"content":"        }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"QuekBingHeng"},"content":"    }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"QuekBingHeng"},"content":"    /**","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"QuekBingHeng"},"content":"     * Returns true if all specified prefixes are present in the given ArgumentMultimap.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"QuekBingHeng"},"content":"     */","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"QuekBingHeng"},"content":"    private boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"QuekBingHeng"},"content":"        for (Prefix prefix : prefixes) {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"QuekBingHeng"},"content":"            if (!argumentMultimap.getValue(prefix).isPresent()) {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"QuekBingHeng"},"content":"                return false;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"QuekBingHeng"},"content":"            }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"QuekBingHeng"},"content":"        }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"QuekBingHeng"},"content":"        return true;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"QuekBingHeng"},"content":"    }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"QuekBingHeng"},"content":"}","lastModifiedDate":"2024-10-10","isFullCredit":false}],"authorContributionMap":{"QuekBingHeng":63}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tata32000"},"content":"import seedu.address.logic.commands.AddScheduleCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tata32000"},"content":"import seedu.address.logic.commands.SeeScheduleCommand;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"QuekBingHeng"},"content":"        case AddScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"QuekBingHeng"},"content":"            return new AddScheduleCommandParser().parse(arguments);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Brendan8899"},"content":"        case SeeScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"tata32000":2,"QuekBingHeng":3,"Brendan8899":3,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"QuekBingHeng"},"content":"    public static final Prefix PREFIX_CONTACT \u003d new Prefix(\"c/\");","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"QuekBingHeng"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"QuekBingHeng"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"QuekBingHeng":3,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LimKaiWei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LimKaiWei"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LimKaiWei"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LimKaiWei"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LimKaiWei"},"content":"        if (args.isEmpty() || !atLeastOnePrefixPresent(argMultimap, PREFIX_NAME)) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LimKaiWei"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LimKaiWei"},"content":"                argMultimap.getAllValues(PREFIX_NAME)));","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LimKaiWei"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LimKaiWei"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LimKaiWei"},"content":"     * Returns true if at least one of the prefixes contains non-empty","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LimKaiWei"},"content":"     * {@code Optional} values in the given {@code ArgumentMultimap}.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LimKaiWei"},"content":"     *","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LimKaiWei"},"content":"     * @param argumentMultimap The {@code ArgumentMultimap} to","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LimKaiWei"},"content":"     *     check for the presence of the prefixes.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LimKaiWei"},"content":"     * @param prefixes The prefixes to check for presence.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LimKaiWei"},"content":"     * @return True if at least one of the prefixes contains non-empty","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LimKaiWei"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LimKaiWei"},"content":"    private static boolean atLeastOnePrefixPresent(ArgumentMultimap argumentMultimap,","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LimKaiWei"},"content":"            Prefix... prefixes) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LimKaiWei"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LimKaiWei"},"content":"                argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26","isFullCredit":false}],"authorContributionMap":{"LimKaiWei":21,"-":27}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.schedule.Meeting;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tata32000"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tata32000"},"content":"     * Returns the AddressBook","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Brendan8899"},"content":"    void setScheduleList(ReadOnlyScheduleList scheduleList);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Brendan8899"},"content":"    ReadOnlyScheduleList getScheduleList();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Brendan8899"},"content":"    void deleteMeeting(Meeting target);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Brendan8899"},"content":"    void addMeeting(Meeting meeting);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Brendan8899"},"content":"    void setMeeting(Meeting target, Meeting editedMeeting);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tata32000"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25","isFullCredit":false}],"authorContributionMap":{"tata32000":14,"Brendan8899":7,"-":84}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.schedule.Meeting;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Brendan8899"},"content":"    private final ScheduleList scheduleList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tata32000"},"content":"    public ModelManager(","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tata32000"},"content":"            ReadOnlyAddressBook addressBook,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tata32000"},"content":"            ReadOnlyUserPrefs userPrefs,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tata32000"},"content":"            ReadOnlyScheduleList scheduleList) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Brendan8899"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tata32000"},"content":"        logger.fine(\"Initializing with address book: \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tata32000"},"content":"                + addressBook + \" and user prefs \"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tata32000"},"content":"                + userPrefs + \"and stored schedule\" + scheduleList);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Brendan8899"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Brendan8899"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Brendan8899"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Brendan8899"},"content":"        this.scheduleList \u003d new ScheduleList(scheduleList);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tata32000"},"content":"     * Constructs a {@code ModelManager} with the given {@code ReadOnlyAddressBook} and {@code ReadOnlyUserPrefs}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tata32000"},"content":"     * Initializes the address book, user preferences, filtered list of persons, and an empty schedule list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tata32000"},"content":"     * @param addressBook The address book used to initialize the model manager. Cannot be null.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tata32000"},"content":"     * @param userPrefs   The user preferences used to initialize the model manager. Cannot be null.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Brendan8899"},"content":"        this.scheduleList \u003d new ScheduleList();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Brendan8899"},"content":"        this(new AddressBook(), new UserPrefs(), new ScheduleList());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Brendan8899"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ScheduleList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Brendan8899"},"content":"    public void setScheduleList(ReadOnlyScheduleList scheduleList) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Brendan8899"},"content":"        this.scheduleList.resetData(scheduleList);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tata32000"},"content":"    public ReadOnlyScheduleList getScheduleList() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tata32000"},"content":"        return scheduleList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Brendan8899"},"content":"    public void deleteMeeting(Meeting target) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Brendan8899"},"content":"        scheduleList.removeMeeting(target);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Brendan8899"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Brendan8899"},"content":"        scheduleList.addMeeting(meeting);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Brendan8899"},"content":"        // updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Brendan8899"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Brendan8899"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Brendan8899"},"content":"        scheduleList.setMeeting(target, editedMeeting);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"tata32000":21,"Brendan8899":38,"-":147}},{"path":"src/main/java/seedu/address/model/ReadOnlyScheduleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brendan8899"},"content":"package seedu.address.model;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Brendan8899"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tata32000"},"content":"import seedu.address.model.schedule.Meeting;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tata32000"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tata32000"},"content":" * Unmodifiable view of a schedule list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tata32000"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Brendan8899"},"content":"public interface ReadOnlyScheduleList {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Brendan8899"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Brendan8899"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Brendan8899"},"content":"    ObservableList\u003cMeeting\u003e getMeetingList();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Brendan8899"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"tata32000":4,"Brendan8899":11}},{"path":"src/main/java/seedu/address/model/ScheduleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brendan8899"},"content":"package seedu.address.model;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tata32000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tata32000"},"content":"import java.util.List;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Brendan8899"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.schedule.Meeting;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.schedule.UniqueMeetingList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tata32000"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tata32000"},"content":" * Represents a list of scheduled meetings.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tata32000"},"content":" * Ensures that no duplicate or conflicting meetings are added.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tata32000"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Brendan8899"},"content":"public class ScheduleList implements ReadOnlyScheduleList {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Brendan8899"},"content":"    private final UniqueMeetingList meetings;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Brendan8899"},"content":"    {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Brendan8899"},"content":"        meetings \u003d new UniqueMeetingList();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tata32000"},"content":"     * Constructs an empty {@code ScheduleList}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tata32000"},"content":"    public ScheduleList() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tata32000"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tata32000"},"content":"     * Constructs a {@code ScheduleList} with the data from {@code toBeCopied}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tata32000"},"content":"     * @param toBeCopied The data to copy into this {@code ScheduleList}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Brendan8899"},"content":"    public ScheduleList(ReadOnlyScheduleList toBeCopied) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Brendan8899"},"content":"        this();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Brendan8899"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tata32000"},"content":"     * Replaces the current list of meetings with {@code meetings}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tata32000"},"content":"     * @param meetings A list of meetings to set.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Brendan8899"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Brendan8899"},"content":"        this.meetings.setMeetings(meetings);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tata32000"},"content":"     * Resets the current data with {@code newData}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tata32000"},"content":"     * @param newData The new data to reset the schedule list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Brendan8899"},"content":"    public void resetData(ReadOnlyScheduleList newData) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Brendan8899"},"content":"        requireNonNull(newData);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Brendan8899"},"content":"        setMeetings(newData.getMeetingList());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tata32000"},"content":"     * Returns true if a meeting with the same details as {@code meeting} exists in the schedule list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tata32000"},"content":"     * @param meeting The meeting to check.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tata32000"},"content":"     * @return True if the meeting exists, false otherwise.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Brendan8899"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Brendan8899"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Brendan8899"},"content":"        return meetings.contains(meeting);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Brendan8899"},"content":"     * Adds a meeting to the schedule list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tata32000"},"content":"     * The meeting must not already exist in the list or conflict with an existing meeting.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tata32000"},"content":"     * @param meeting The meeting to add.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Brendan8899"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Brendan8899"},"content":"        meetings.add(meeting);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tata32000"},"content":"     * Replaces the {@code target} meeting in the list with {@code editedMeeting}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tata32000"},"content":"     * {@code target} must exist in the schedule list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tata32000"},"content":"     * The identity of {@code editedMeeting} must not be the same as another existing meeting.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tata32000"},"content":"     * @param target        The existing meeting to be replaced.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tata32000"},"content":"     * @param editedMeeting The new meeting to replace the target.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Brendan8899"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Brendan8899"},"content":"        requireNonNull(editedMeeting);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Brendan8899"},"content":"        meetings.setMeeting(target, editedMeeting);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tata32000"},"content":"     * Removes the specified {@code key} meeting from the schedule list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tata32000"},"content":"     * {@code key} must exist in the list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tata32000"},"content":"     * @param key The meeting to remove.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Brendan8899"},"content":"    public void removeMeeting(Meeting key) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Brendan8899"},"content":"        meetings.remove(key);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tata32000"},"content":"     * Returns the schedule list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tata32000"},"content":"     * @return The unmodifiable list of meetings.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tata32000"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tata32000"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tata32000"},"content":"        return meetings.asUnmodifiableObservableList();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tata32000"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tata32000"},"content":"     * Returns the string representation of the schedule list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tata32000"},"content":"     * @return The string representation of the schedule list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Brendan8899"},"content":"    public String toString() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Brendan8899"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Brendan8899"},"content":"                .add(\"meetings\", meetings)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Brendan8899"},"content":"                .toString();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tata32000"},"content":"     * Checks if the current {@code ScheduleList} is equal to another object.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tata32000"},"content":"     * @param other The other object to compare.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tata32000"},"content":"     * @return True if both are equal, false otherwise.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Brendan8899"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Brendan8899"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Brendan8899"},"content":"            return true;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Brendan8899"},"content":"        if (!(other instanceof ScheduleList)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Brendan8899"},"content":"            return false;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Brendan8899"},"content":"        ScheduleList otherScheduleList \u003d (ScheduleList) other;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Brendan8899"},"content":"        return meetings.equals(otherScheduleList.meetings);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tata32000"},"content":"     * Returns the hash code of the schedule list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tata32000"},"content":"     * @return The hash code of the schedule list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Brendan8899"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Brendan8899"},"content":"        return meetings.hashCode();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Brendan8899"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"tata32000":71,"Brendan8899":82}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LimKaiWei"},"content":"                .anyMatch(keyword -\u003e person.getName().fullName.toLowerCase()","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LimKaiWei"},"content":"                        .contains(keyword.toLowerCase()));","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12","isFullCredit":false}],"authorContributionMap":{"LimKaiWei":2,"-":42}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"QuekBingHeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"QuekBingHeng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"QuekBingHeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"QuekBingHeng"},"content":"import java.util.List;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"QuekBingHeng"},"content":"    private final List\u003cString\u003e schedules;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"QuekBingHeng"},"content":"        schedules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"QuekBingHeng"},"content":"    /**","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"QuekBingHeng"},"content":"     * Adds a new schedule entry to the list of schedules for the person.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"QuekBingHeng"},"content":"     * The schedule is stored as a formatted string containing the event name,","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"QuekBingHeng"},"content":"     * date, and time.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"QuekBingHeng"},"content":"     *","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"QuekBingHeng"},"content":"     * @param name The name or description of the schedule event.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"QuekBingHeng"},"content":"     * @param date The date of the event in LocalDate format.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"QuekBingHeng"},"content":"     * @param time The time of the event in LocalTime format.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"QuekBingHeng"},"content":"     */","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"QuekBingHeng"},"content":"    public void addSchedule(String name, LocalDate date, LocalTime time) {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"QuekBingHeng"},"content":"        String schedule \u003d name + \" on \" + date + \" at \" + time;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"QuekBingHeng"},"content":"        schedules.add(schedule);","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"QuekBingHeng"},"content":"    }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"QuekBingHeng"},"content":"    public boolean hasScheduleConflict(LocalDate date, LocalTime time) {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"QuekBingHeng"},"content":"        return schedules.stream().anyMatch(s -\u003e s.contains(date.toString()) \u0026\u0026 s.contains(time.toString()));","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"QuekBingHeng"},"content":"    }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"QuekBingHeng"},"content":"    // Getter for schedules, if needed","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"QuekBingHeng"},"content":"    public List\u003cString\u003e getSchedules() {","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"QuekBingHeng"},"content":"        return schedules;","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"QuekBingHeng"},"content":"    }","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"QuekBingHeng"},"content":"","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"QuekBingHeng":29,"-":117}},{"path":"src/main/java/seedu/address/model/person/exceptions/ConflictMeetingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brendan8899"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tata32000"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tata32000"},"content":" * Signals that an operation would result in conflicting meetings.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tata32000"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Brendan8899"},"content":"public class ConflictMeetingException extends RuntimeException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Brendan8899"},"content":"    public ConflictMeetingException() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Brendan8899"},"content":"        super(\"Operation would result in conflicting meetings\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Brendan8899"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"tata32000":3,"Brendan8899":7}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateMeetingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brendan8899"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tata32000"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tata32000"},"content":" * Signals that an operation would result in duplicate meetings.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tata32000"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Brendan8899"},"content":"public class DuplicateMeetingException extends RuntimeException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Brendan8899"},"content":"    public DuplicateMeetingException() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Brendan8899"},"content":"        super(\"Operation would result in duplicate meetings\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Brendan8899"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"tata32000":3,"Brendan8899":7}},{"path":"src/main/java/seedu/address/model/person/exceptions/MeetingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brendan8899"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Brendan8899"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Brendan8899"},"content":" * Signals that the operation is unable to find the specified meeting.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Brendan8899"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Brendan8899"},"content":"public class MeetingNotFoundException extends RuntimeException {}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"Brendan8899":6}},{"path":"src/main/java/seedu/address/model/schedule/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brendan8899"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tata32000"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Brendan8899"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Brendan8899"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Brendan8899"},"content":"import java.util.List;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Brendan8899"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tata32000"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tata32000"},"content":" * Represents a Meeting in the schedule.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tata32000"},"content":" * Guarantees: details are present and not null, and fields are validated.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tata32000"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Brendan8899"},"content":"public class Meeting {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Brendan8899"},"content":"    // Data Fields","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Brendan8899"},"content":"    private List\u003cInteger\u003e contactIndexes;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Brendan8899"},"content":"    private String meetingName;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Brendan8899"},"content":"    private LocalDate meetingDate;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Brendan8899"},"content":"    private LocalTime meetingTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tata32000"},"content":"     * Constructs a {@code Meeting}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tata32000"},"content":"     * @param contactIndexes A list of indexes representing the contacts involved in the meeting.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tata32000"},"content":"     * @param meetingName    Name of the meeting.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tata32000"},"content":"     * @param meetingDate    Date of the meeting. Cannot be null.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tata32000"},"content":"     * @param meetingTime    Time of the meeting. Cannot be null.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Brendan8899"},"content":"    public Meeting(List\u003cInteger\u003e contactIndexes, String meetingName, LocalDate meetingDate, LocalTime meetingTime) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Brendan8899"},"content":"        requireAllNonNull(meetingDate, meetingTime);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Brendan8899"},"content":"        this.contactIndexes \u003d contactIndexes;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Brendan8899"},"content":"        this.meetingName \u003d meetingName;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Brendan8899"},"content":"        this.meetingDate \u003d meetingDate;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Brendan8899"},"content":"        this.meetingTime \u003d meetingTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tata32000"},"content":"     * Returns the list of contact indexes involved in the meeting.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tata32000"},"content":"     * @return A list of contact indexes.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Brendan8899"},"content":"    public List\u003cInteger\u003e getContactIndexes() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Brendan8899"},"content":"        return contactIndexes;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tata32000"},"content":"     * Converts the list of contact indexes to a string, with indexes separated by commas.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tata32000"},"content":"     * @param inputContactIndexes List of contact indexes to be converted.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tata32000"},"content":"     * @return A comma-separated string of contact indexes.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Brendan8899"},"content":"    public String convertContactIndexesToString(List\u003cInteger\u003e inputContactIndexes) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Brendan8899"},"content":"        return inputContactIndexes.stream()","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Brendan8899"},"content":"                .map(String::valueOf)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Brendan8899"},"content":"                .collect(Collectors.joining(\",\"));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tata32000"},"content":"     * Returns the name of the meeting.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tata32000"},"content":"     * @return Meeting name.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Brendan8899"},"content":"    public String getMeetingName() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Brendan8899"},"content":"        return meetingName;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tata32000"},"content":"     * Returns the date of the meeting.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tata32000"},"content":"     * @return Meeting date.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Brendan8899"},"content":"    public LocalDate getMeetingDate() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Brendan8899"},"content":"        return meetingDate;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tata32000"},"content":"     * Returns the time of the meeting.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tata32000"},"content":"     * @return Meeting time.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Brendan8899"},"content":"    public LocalTime getMeetingTime() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Brendan8899"},"content":"        return meetingTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tata32000"},"content":"     * Checks if the current meeting has a time conflict with another meeting.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tata32000"},"content":"     * Meetings are considered conflicting if they occur at the same date and time.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tata32000"},"content":"     * @param otherMeeting Another meeting to compare against.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tata32000"},"content":"     * @return True if the meetings conflict, false otherwise.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Brendan8899"},"content":"    public boolean hasConflictMeeting(Meeting otherMeeting) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Brendan8899"},"content":"        if (otherMeeting \u003d\u003d this) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Brendan8899"},"content":"            return true;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Brendan8899"},"content":"        return otherMeeting !\u003d null","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Brendan8899"},"content":"                \u0026\u0026 otherMeeting.getMeetingDate().equals(getMeetingDate())","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Brendan8899"},"content":"                \u0026\u0026 otherMeeting.getMeetingTime().equals(getMeetingTime());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tata32000"},"content":"     * Checks if two meetings are the same.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tata32000"},"content":"     * Meetings are considered the same if they have the same date, time, and name.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tata32000"},"content":"     * @param otherMeeting Another meeting to compare against.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tata32000"},"content":"     * @return True if the meetings are the same, false otherwise.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Brendan8899"},"content":"    public boolean isSameMeeting(Meeting otherMeeting) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Brendan8899"},"content":"        if (otherMeeting \u003d\u003d this) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Brendan8899"},"content":"            return true;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Brendan8899"},"content":"        return otherMeeting !\u003d null","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Brendan8899"},"content":"                \u0026\u0026 otherMeeting.getMeetingDate().equals(getMeetingDate())","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Brendan8899"},"content":"                \u0026\u0026 otherMeeting.getMeetingTime().equals(getMeetingTime())","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Brendan8899"},"content":"                \u0026\u0026 otherMeeting.getMeetingName().equals(getMeetingName());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Brendan8899"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"tata32000":55,"Brendan8899":65}},{"path":"src/main/java/seedu/address/model/schedule/UniqueMeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brendan8899"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tata32000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tata32000"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tata32000"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tata32000"},"content":"import java.util.List;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Brendan8899"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Brendan8899"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.person.exceptions.ConflictMeetingException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.person.exceptions.DuplicateMeetingException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.person.exceptions.MeetingNotFoundException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tata32000"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tata32000"},"content":" * A list of meetings that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tata32000"},"content":" * A meeting is considered unique by comparing using {@code Meeting#isSameMeeting(Meeting)}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tata32000"},"content":" * As such, adding and updating of meetings uses Meeting#isSameMeeting(Meeting) for equality to ensure that","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tata32000"},"content":" * the meeting being added or updated is unique in terms of identity in the UniqueMeetingList.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tata32000"},"content":" * However, the removal of a meeting uses Meeting#equals(Object) to ensure that the meeting with exactly the same","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tata32000"},"content":" * fields will be removed.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tata32000"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tata32000"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tata32000"},"content":" *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tata32000"},"content":" * @see Meeting#isSameMeeting(Meeting)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tata32000"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Brendan8899"},"content":"public class UniqueMeetingList implements Iterable\u003cMeeting\u003e {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Brendan8899"},"content":"    private final ObservableList\u003cMeeting\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tata32000"},"content":"    private final ObservableList\u003cMeeting\u003e internalUnmodifiableList \u003d FXCollections","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tata32000"},"content":"            .unmodifiableObservableList(internalList);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tata32000"},"content":"     * Returns true if the list contains an equivalent meeting as the given argument.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tata32000"},"content":"     * @param toCheck The meeting to check for.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tata32000"},"content":"     * @return True if the meeting exists in the list, false otherwise.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Brendan8899"},"content":"    public boolean contains(Meeting toCheck) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Brendan8899"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Brendan8899"},"content":"        return internalList.stream().anyMatch(toCheck::isSameMeeting);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tata32000"},"content":"     * Returns true if the list contains a meeting that conflicts with the given meeting.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tata32000"},"content":"     * @param toCheck The meeting to check for conflicts.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tata32000"},"content":"     * @return True if a conflict exists, false otherwise.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Brendan8899"},"content":"    public boolean conflictMeeting(Meeting toCheck) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Brendan8899"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Brendan8899"},"content":"        return internalList.stream().anyMatch(toCheck::hasConflictMeeting);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Brendan8899"},"content":"     * Adds a meeting to the list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tata32000"},"content":"     * The meeting must not already exist in the list and must not conflict with an existing meeting.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tata32000"},"content":"     * @param toAdd The meeting to add.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tata32000"},"content":"     * @throws DuplicateMeetingException If the meeting already exists in the list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tata32000"},"content":"     * @throws ConflictMeetingException  If the meeting conflicts with another meeting in the list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Brendan8899"},"content":"    public void add(Meeting toAdd) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Brendan8899"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Brendan8899"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Brendan8899"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Brendan8899"},"content":"        if (conflictMeeting(toAdd)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Brendan8899"},"content":"            throw new ConflictMeetingException();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Brendan8899"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Brendan8899"},"content":"     * Replaces the meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tata32000"},"content":"     * The {@code target} must exist in the list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tata32000"},"content":"     * The identity of {@code editedMeeting} must not be the same as another existing meeting in the list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tata32000"},"content":"     * @param target        The meeting to replace.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tata32000"},"content":"     * @param editedMeeting The new meeting to set.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tata32000"},"content":"     * @throws MeetingNotFoundException  If the target meeting is not found in the list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tata32000"},"content":"     * @throws DuplicateMeetingException If the edited meeting conflicts with an existing meeting in the list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Brendan8899"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Brendan8899"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Brendan8899"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Brendan8899"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Brendan8899"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Brendan8899"},"content":"        if (!target.isSameMeeting(editedMeeting) \u0026\u0026 contains(editedMeeting)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Brendan8899"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Brendan8899"},"content":"        internalList.set(index, editedMeeting);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tata32000"},"content":"     * Removes the equivalent meeting from the list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tata32000"},"content":"     * The meeting must exist in the list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tata32000"},"content":"     * @param toRemove The meeting to remove.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tata32000"},"content":"     * @throws MeetingNotFoundException If the meeting is not found in the list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Brendan8899"},"content":"    public void remove(Meeting toRemove) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Brendan8899"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Brendan8899"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Brendan8899"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Brendan8899"},"content":"     * Replaces the contents of this list with {@code meetings}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Brendan8899"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tata32000"},"content":"     * @param meetings The new list of meetings to set.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tata32000"},"content":"     * @throws DuplicateMeetingException If there are duplicate meetings in the provided list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Brendan8899"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Brendan8899"},"content":"        requireAllNonNull(meetings);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Brendan8899"},"content":"        if (!meetingsAreUnique(meetings)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Brendan8899"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Brendan8899"},"content":"        internalList.setAll(meetings);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Brendan8899"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tata32000"},"content":"     * @return An unmodifiable view of the meeting list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Brendan8899"},"content":"    public ObservableList\u003cMeeting\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Brendan8899"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Brendan8899"},"content":"    public Iterator\u003cMeeting\u003e iterator() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Brendan8899"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Brendan8899"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Brendan8899"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Brendan8899"},"content":"            return true;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Brendan8899"},"content":"        if (!(other instanceof UniqueMeetingList)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Brendan8899"},"content":"            return false;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Brendan8899"},"content":"        UniqueMeetingList otherUniqueMeetingList \u003d (UniqueMeetingList) other;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Brendan8899"},"content":"        return internalList.equals(otherUniqueMeetingList.internalList);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Brendan8899"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Brendan8899"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Brendan8899"},"content":"    public String toString() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Brendan8899"},"content":"        return internalList.toString();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tata32000"},"content":"     * Returns true if {@code meetings} contains only unique meetings.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"tata32000"},"content":"     * @param meetings The list of meetings to check.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"tata32000"},"content":"     * @return True if all meetings are unique, false otherwise.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Brendan8899"},"content":"    private boolean meetingsAreUnique(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Brendan8899"},"content":"        for (int i \u003d 0; i \u003c meetings.size() - 1; i++) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Brendan8899"},"content":"            for (int j \u003d i + 1; j \u003c meetings.size(); j++) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Brendan8899"},"content":"                if (meetings.get(i).isSameMeeting(meetings.get(j))) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Brendan8899"},"content":"                    return false;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Brendan8899"},"content":"                }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Brendan8899"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Brendan8899"},"content":"        return true;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"tata32000"},"content":"     * Returns true if {@code meetings} do not have any conflicting meetings.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"tata32000"},"content":"     * @param meetings The list of meetings to check for conflicts.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"tata32000"},"content":"     * @return True if no conflicts are found, false otherwise.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Brendan8899"},"content":"    private boolean meetingsAreNotConflict(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Brendan8899"},"content":"        for (int i \u003d 0; i \u003c meetings.size() - 1; i++) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Brendan8899"},"content":"            for (int j \u003d i + 1; j \u003c meetings.size(); j++) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Brendan8899"},"content":"                if (meetings.get(i).hasConflictMeeting(meetings.get(j))) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Brendan8899"},"content":"                    return false;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Brendan8899"},"content":"                }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Brendan8899"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Brendan8899"},"content":"        return true;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Brendan8899"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"tata32000":64,"Brendan8899":135}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brendan8899"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Brendan8899"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Brendan8899"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Brendan8899"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tata32000"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tata32000"},"content":"import java.util.List;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Brendan8899"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tata32000"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tata32000"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tata32000"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tata32000"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tata32000"},"content":"import seedu.address.model.schedule.Meeting;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tata32000"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tata32000"},"content":" * Jackson-friendly version of {@link Meeting}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tata32000"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Brendan8899"},"content":"public class JsonAdaptedMeeting {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Brendan8899"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tata32000"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Error Loading the Contact Indexes, not in 1,2,3... format\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tata32000"},"content":"    public static final String DATE_TIME_FORMAT_ERROR \u003d \"Date Time Format Stored is not YYYY-MM-DD\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Brendan8899"},"content":"    private final String contactIndexes;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Brendan8899"},"content":"    private final String meetingName;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Brendan8899"},"content":"    private final String meetingDate;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Brendan8899"},"content":"    private final String meetingTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tata32000"},"content":"     * Constructs a {@code JsonAdaptedMeeting} with the given meeting details.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tata32000"},"content":"     * @param contactIndexes A string representing the contact indexes.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tata32000"},"content":"     * @param meetingName    A string representing the meeting name.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tata32000"},"content":"     * @param meetingDate    A string representing the meeting date in YYYY-MM-DD format.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tata32000"},"content":"     * @param meetingTime    A string representing the meeting time in HH:mm:ss format.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Brendan8899"},"content":"    @JsonCreator","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tata32000"},"content":"    public JsonAdaptedMeeting(@JsonProperty(\"contactIndexes\") String contactIndexes,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tata32000"},"content":"                              @JsonProperty(\"meetingName\") String meetingName,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tata32000"},"content":"                              @JsonProperty(\"meetingDate\") String meetingDate,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tata32000"},"content":"                              @JsonProperty(\"meetingTime\") String meetingTime) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Brendan8899"},"content":"        this.contactIndexes \u003d contactIndexes;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Brendan8899"},"content":"        this.meetingName \u003d meetingName;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Brendan8899"},"content":"        this.meetingDate \u003d meetingDate;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Brendan8899"},"content":"        this.meetingTime \u003d meetingTime;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Brendan8899"},"content":"     * Converts a given {@code Meeting} into this class for Jackson use.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tata32000"},"content":"     * @param source The meeting object to convert.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Brendan8899"},"content":"    public JsonAdaptedMeeting(Meeting source) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Brendan8899"},"content":"        contactIndexes \u003d source.convertContactIndexesToString(source.getContactIndexes());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Brendan8899"},"content":"        meetingName \u003d source.getMeetingName();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Brendan8899"},"content":"        meetingDate \u003d source.getMeetingDate().format(DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Brendan8899"},"content":"        meetingTime \u003d source.getMeetingTime().format(DateTimeFormatter.ISO_LOCAL_TIME);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Brendan8899"},"content":"     * Converts this Jackson-friendly adapted meeting object into the model\u0027s {@code Meeting} object.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Brendan8899"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tata32000"},"content":"     * @return A {@code Meeting} object representing the meeting.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tata32000"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted meeting.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Brendan8899"},"content":"    public Meeting toModelType() throws IllegalValueException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Brendan8899"},"content":"        if (contactIndexes \u003d\u003d null) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Brendan8899"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"contact indexes\"));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Brendan8899"},"content":"        if (!contactIndexes.matches(\"\\\\d+(,\\\\d+)*\")) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Brendan8899"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Brendan8899"},"content":"        final List\u003cInteger\u003e modelContactIndexes \u003d Arrays.stream(contactIndexes.split(\",\"))","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Brendan8899"},"content":"                .map(String::trim)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Brendan8899"},"content":"                .map(Integer::parseInt)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Brendan8899"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Brendan8899"},"content":"        if (meetingName \u003d\u003d null) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Brendan8899"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"meeting name\"));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Brendan8899"},"content":"        final String modelMeetingName \u003d meetingName;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Brendan8899"},"content":"        if (meetingDate \u003d\u003d null) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Brendan8899"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"meeting date\"));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tata32000"},"content":"        if (!meetingDate.matches(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\")) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Brendan8899"},"content":"            throw new IllegalValueException(DATE_TIME_FORMAT_ERROR);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Brendan8899"},"content":"        final LocalDate modelMeetingDate \u003d LocalDate.parse(meetingDate);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Brendan8899"},"content":"        if (meetingTime \u003d\u003d null) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Brendan8899"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"meeting time\"));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Brendan8899"},"content":"        if (!meetingTime.matches(\"^([01]\\\\d|2[0-3]):[0-5]\\\\d(:[0-5]\\\\d(\\\\.\\\\d{1,9})?)?$\")) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Brendan8899"},"content":"            throw new IllegalValueException(DATE_TIME_FORMAT_ERROR);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Brendan8899"},"content":"        final LocalTime modelMeetingTime \u003d LocalTime.parse(meetingTime);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Brendan8899"},"content":"        return new Meeting(modelContactIndexes, modelMeetingName, modelMeetingDate, modelMeetingTime);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Brendan8899"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"tata32000":33,"Brendan8899":69}},{"path":"src/main/java/seedu/address/storage/JsonScheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brendan8899"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tata32000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Brendan8899"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Brendan8899"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Brendan8899"},"content":"import java.util.Optional;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Brendan8899"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tata32000"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tata32000"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tata32000"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tata32000"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tata32000"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tata32000"},"content":"import seedu.address.model.ReadOnlyScheduleList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tata32000"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tata32000"},"content":" * A class to access the schedule data stored as a JSON file on the hard disk.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tata32000"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Brendan8899"},"content":"public class JsonScheduleStorage implements ScheduleStorage {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Brendan8899"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Brendan8899"},"content":"    private Path filePath;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tata32000"},"content":"     * Constructs a {@code JsonScheduleStorage} with the specified file path.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tata32000"},"content":"     * @param filePath Path to the JSON file where the schedule data is stored.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Brendan8899"},"content":"    public JsonScheduleStorage(Path filePath) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Brendan8899"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tata32000"},"content":"     * Returns the file path where the schedule data is stored.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tata32000"},"content":"     * @return The {@code Path} to the schedule list data file.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Brendan8899"},"content":"    public Path getScheduleListFilePath() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Brendan8899"},"content":"        return filePath;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tata32000"},"content":"     * Reads the schedule list from the file specified in the constructor.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tata32000"},"content":"     * @return An {@code Optional\u003cReadOnlyScheduleList\u003e} containing the schedule list if it exists.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tata32000"},"content":"     * @throws DataLoadingException if there is an error reading the file or the data is invalid.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Brendan8899"},"content":"    public Optional\u003cReadOnlyScheduleList\u003e readScheduleList() throws DataLoadingException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Brendan8899"},"content":"        return readScheduleList(filePath);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tata32000"},"content":"     * Reads the schedule list from a specified file path.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Brendan8899"},"content":"     * Similar to {@link #readScheduleList()}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Brendan8899"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tata32000"},"content":"     * @param filePath The location of the schedule data file. Cannot be null.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tata32000"},"content":"     * @return An {@code Optional\u003cReadOnlyScheduleList\u003e} containing the schedule list if it exists.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tata32000"},"content":"     * @throws DataLoadingException if there is an error reading the file or the data is invalid.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Brendan8899"},"content":"    public Optional\u003cReadOnlyScheduleList\u003e readScheduleList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Brendan8899"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Brendan8899"},"content":"        Optional\u003cJsonSerializableScheduleStorage\u003e jsonScheduleList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Brendan8899"},"content":"                filePath, JsonSerializableScheduleStorage.class);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Brendan8899"},"content":"        if (!jsonScheduleList.isPresent()) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Brendan8899"},"content":"            return Optional.empty();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Brendan8899"},"content":"        try {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Brendan8899"},"content":"            return Optional.of(jsonScheduleList.get().toModelType());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Brendan8899"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Brendan8899"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Brendan8899"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tata32000"},"content":"     * Saves the schedule list to the file specified in the constructor.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tata32000"},"content":"     * @param scheduleList The schedule list to save. Cannot be null.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tata32000"},"content":"     * @throws IOException if there is an error writing to the file.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Brendan8899"},"content":"    public void saveScheduleList(ReadOnlyScheduleList scheduleList) throws IOException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Brendan8899"},"content":"        saveScheduleList(scheduleList, filePath);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tata32000"},"content":"     * Saves the schedule list to a specified file path.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Brendan8899"},"content":"     * Similar to {@link #saveScheduleList(ReadOnlyScheduleList)}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Brendan8899"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tata32000"},"content":"     * @param scheduleList The schedule list to save. Cannot be null.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tata32000"},"content":"     * @param filePath     The location of the data file. Cannot be null.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tata32000"},"content":"     * @throws IOException if there is an error writing to the file.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Brendan8899"},"content":"    public void saveScheduleList(ReadOnlyScheduleList scheduleList, Path filePath) throws IOException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Brendan8899"},"content":"        requireNonNull(scheduleList);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Brendan8899"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Brendan8899"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Brendan8899"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableScheduleStorage(scheduleList), filePath);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Brendan8899"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"tata32000":41,"Brendan8899":65}},{"path":"src/main/java/seedu/address/storage/JsonSerializableScheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brendan8899"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Brendan8899"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Brendan8899"},"content":"import java.util.List;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Brendan8899"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Brendan8899"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Brendan8899"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Brendan8899"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.ReadOnlyScheduleList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.ScheduleList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.schedule.Meeting;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tata32000"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tata32000"},"content":" * An Immutable ScheduleList that is serializable to JSON format.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tata32000"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Brendan8899"},"content":"@JsonRootName(value \u003d \"schedulelist\")","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Brendan8899"},"content":"public class JsonSerializableScheduleStorage {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Brendan8899"},"content":"    public static final String MEETING_DUPLICATE_PERSON \u003d \"Schedule list contains duplicate meeting(s).\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Brendan8899"},"content":"    private final List\u003cJsonAdaptedMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Brendan8899"},"content":"     * Constructs a {@code JsonSerializableScheduleStorage} with the given persons.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Brendan8899"},"content":"    @JsonCreator","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Brendan8899"},"content":"    public JsonSerializableScheduleStorage(@JsonProperty(\"meetings\") List\u003cJsonAdaptedMeeting\u003e meetings) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Brendan8899"},"content":"        this.meetings.addAll(meetings);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Brendan8899"},"content":"     * Converts a given {@code ReadOnlyScheduleList} into this class for Jackson use.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Brendan8899"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Brendan8899"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableScheduleStorage}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Brendan8899"},"content":"    public JsonSerializableScheduleStorage(ReadOnlyScheduleList source) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Brendan8899"},"content":"        meetings.addAll(source.getMeetingList().stream().map(JsonAdaptedMeeting::new).collect(Collectors.toList()));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Brendan8899"},"content":"     * Converts this schedule list into the model\u0027s {@code ScheduleList} object.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Brendan8899"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Brendan8899"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Brendan8899"},"content":"    public ScheduleList toModelType() throws IllegalValueException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Brendan8899"},"content":"        ScheduleList scheduleList \u003d new ScheduleList();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Brendan8899"},"content":"        for (JsonAdaptedMeeting jsonAdaptedMeeting : meetings) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Brendan8899"},"content":"            Meeting meeting \u003d jsonAdaptedMeeting.toModelType();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Brendan8899"},"content":"            if (scheduleList.hasMeeting(meeting)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Brendan8899"},"content":"                throw new IllegalValueException(MEETING_DUPLICATE_PERSON);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Brendan8899"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Brendan8899"},"content":"            scheduleList.addMeeting(meeting);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Brendan8899"},"content":"        return scheduleList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Brendan8899"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"tata32000":4,"Brendan8899":54}},{"path":"src/main/java/seedu/address/storage/JsonSerializedScheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brendan8899"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Brendan8899"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Brendan8899"},"content":"import java.util.List;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Brendan8899"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Brendan8899"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Brendan8899"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Brendan8899"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.ReadOnlyScheduleList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.ScheduleList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.schedule.Meeting;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tata32000"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tata32000"},"content":" * A class to serialize and deserialize a schedule list in JSON format.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tata32000"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Brendan8899"},"content":"@JsonRootName(value \u003d \"schedulelist\")","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Brendan8899"},"content":"public class JsonSerializedScheduleStorage {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Brendan8899"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"Schedule list contains duplicate meeting(s).\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Brendan8899"},"content":"    private final List\u003cJsonAdaptedMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Brendan8899"},"content":"     * Constructs a {@code JsonSerializedScheduleStorage} with the given meetings.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Brendan8899"},"content":"    @JsonCreator","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Brendan8899"},"content":"    public JsonSerializedScheduleStorage(@JsonProperty(\"meeting\") List\u003cJsonAdaptedMeeting\u003e meetings) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Brendan8899"},"content":"        this.meetings.addAll(meetings);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Brendan8899"},"content":"    public JsonSerializedScheduleStorage(ReadOnlyScheduleList source) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Brendan8899"},"content":"        meetings.addAll(source.getMeetingList().stream().map(JsonAdaptedMeeting::new).collect(Collectors.toList()));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tata32000"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tata32000"},"content":"     * Converts this JSON-friendly schedule list into the model\u0027s {@code ScheduleList} object.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tata32000"},"content":"     * @return A {@code ScheduleList} representing the deserialized data.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tata32000"},"content":"     * @throws IllegalValueException If any data constraints were violated, such as duplicate meetings.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tata32000"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Brendan8899"},"content":"    public ScheduleList toModelType() throws IllegalValueException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Brendan8899"},"content":"        ScheduleList scheduleList \u003d new ScheduleList();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Brendan8899"},"content":"        for (JsonAdaptedMeeting jsonAdaptedMeeting : meetings) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Brendan8899"},"content":"            Meeting meeting \u003d jsonAdaptedMeeting.toModelType();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Brendan8899"},"content":"            if (scheduleList.hasMeeting(meeting)) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Brendan8899"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Brendan8899"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Brendan8899"},"content":"            scheduleList.addMeeting(meeting);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Brendan8899"},"content":"        return scheduleList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Brendan8899"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"tata32000":9,"Brendan8899":44}},{"path":"src/main/java/seedu/address/storage/ScheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brendan8899"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Brendan8899"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Brendan8899"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Brendan8899"},"content":"import java.util.Optional;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.ReadOnlyScheduleList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tata32000"},"content":"/**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tata32000"},"content":" * Represents a storage for {@link seedu.address.model.ScheduleList}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tata32000"},"content":" * This interface defines the operations for reading from and writing to","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tata32000"},"content":" * the schedule storage file.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tata32000"},"content":" */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Brendan8899"},"content":"public interface ScheduleStorage {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tata32000"},"content":"     * Returns the file path of the schedule list data file.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tata32000"},"content":"     * @return The {@code Path} of the schedule list data file.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Brendan8899"},"content":"    Path getScheduleListFilePath();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tata32000"},"content":"     * Reads and returns the schedule data as a {@link ReadOnlyScheduleList}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tata32000"},"content":"     * If the storage file is not found, it returns {@code Optional.empty()}.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Brendan8899"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tata32000"},"content":"     * @return An {@code Optional\u003cReadOnlyScheduleList\u003e} representing the schedule list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tata32000"},"content":"     * @throws DataLoadingException If there is an issue loading the data from storage.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Brendan8899"},"content":"    Optional\u003cReadOnlyScheduleList\u003e readScheduleList() throws DataLoadingException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tata32000"},"content":"     * Reads and returns the schedule data from the specified file path.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tata32000"},"content":"     * Returns {@code Optional.empty()} if the storage file is not found.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tata32000"},"content":"     * @param filePath The path to the schedule data file. Cannot be null.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tata32000"},"content":"     * @return An {@code Optional\u003cReadOnlyScheduleList\u003e} representing the schedule list.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tata32000"},"content":"     * @throws DataLoadingException If there is an issue loading the data from storage.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Brendan8899"},"content":"    Optional\u003cReadOnlyScheduleList\u003e readScheduleList(Path filePath) throws DataLoadingException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tata32000"},"content":"     * Saves the given {@link ReadOnlyScheduleList} to the storage.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tata32000"},"content":"     * @param scheduleList The schedule list to save. Cannot be null.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tata32000"},"content":"     * @throws IOException If there is an issue writing to the file.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Brendan8899"},"content":"    void saveScheduleList(ReadOnlyScheduleList scheduleList) throws IOException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Brendan8899"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tata32000"},"content":"     * Saves the given {@link ReadOnlyScheduleList} to the storage at the specified file path.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tata32000"},"content":"     * @param scheduleList The schedule list to save. Cannot be null.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tata32000"},"content":"     * @param filePath     The path to the schedule data file. Cannot be null.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tata32000"},"content":"     * @throws IOException If there is an issue writing to the file.","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Brendan8899"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Brendan8899"},"content":"    void saveScheduleList(ReadOnlyScheduleList scheduleList, Path filePath) throws IOException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Brendan8899"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"tata32000":27,"Brendan8899":32}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Brendan8899"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, ScheduleStorage {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25","isFullCredit":false}],"authorContributionMap":{"Brendan8899":1,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.ReadOnlyScheduleList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Brendan8899"},"content":"    private ScheduleStorage scheduleStorage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tata32000"},"content":"    public StorageManager(","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tata32000"},"content":"            AddressBookStorage addressBookStorage,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tata32000"},"content":"            UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tata32000"},"content":"            ScheduleStorage scheduleStorage) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Brendan8899"},"content":"        this.scheduleStorage \u003d scheduleStorage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Brendan8899"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ScheduleList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Brendan8899"},"content":"    public Path getScheduleListFilePath() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Brendan8899"},"content":"        return scheduleStorage.getScheduleListFilePath();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Brendan8899"},"content":"    public Optional\u003cReadOnlyScheduleList\u003e readScheduleList() throws DataLoadingException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Brendan8899"},"content":"        return scheduleStorage.readScheduleList();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Brendan8899"},"content":"    public Optional\u003cReadOnlyScheduleList\u003e readScheduleList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Brendan8899"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Brendan8899"},"content":"        return scheduleStorage.readScheduleList(filePath);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Brendan8899"},"content":"    public void saveScheduleList(ReadOnlyScheduleList scheduleList) throws IOException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Brendan8899"},"content":"        saveScheduleList(scheduleList, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Brendan8899"},"content":"    @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Brendan8899"},"content":"    public void saveScheduleList(ReadOnlyScheduleList scheduleList, Path filePath) throws IOException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Brendan8899"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Brendan8899"},"content":"        scheduleStorage.saveScheduleList(scheduleList, filePath);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Brendan8899"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"tata32000":4,"Brendan8899":30,"-":77}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tata32000"},"content":"import seedu.address.model.ReadOnlyScheduleList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.storage.JsonScheduleStorage;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Brendan8899"},"content":"        JsonScheduleStorage scheduleStorage \u003d new JsonScheduleStorage(temporaryFolder.resolve(\"schedule.json\"));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Brendan8899"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, scheduleStorage);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Brendan8899"},"content":"        logic \u003d new LogicManager(model, storage, scheduleStorage);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tata32000"},"content":"     *","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * @param e               the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Brendan8899"},"content":"        JsonScheduleStorage scheduleStorage \u003d new JsonScheduleStorage(prefPath) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Brendan8899"},"content":"            @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Brendan8899"},"content":"            public void saveScheduleList(ReadOnlyScheduleList scheduleList, Path filePath)","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Brendan8899"},"content":"                    throws IOException {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Brendan8899"},"content":"                throw e;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Brendan8899"},"content":"            }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Brendan8899"},"content":"        };","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Brendan8899"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, scheduleStorage);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Brendan8899"},"content":"        logic \u003d new LogicManager(model, storage, scheduleStorage);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21","isFullCredit":false}],"authorContributionMap":{"tata32000":6,"Brendan8899":14,"-":171}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tata32000"},"content":"import seedu.address.model.ReadOnlyScheduleList;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Brendan8899"},"content":"import seedu.address.model.schedule.Meeting;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Brendan8899"},"content":"        @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Brendan8899"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Brendan8899"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Brendan8899"},"content":"        public void setScheduleList(ReadOnlyScheduleList newData) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Brendan8899"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Brendan8899"},"content":"        public ReadOnlyScheduleList getScheduleList() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Brendan8899"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tata32000"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Brendan8899"},"content":"        @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Brendan8899"},"content":"        public void deleteMeeting(Meeting target) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Brendan8899"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Brendan8899"},"content":"        @Override","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Brendan8899"},"content":"        public void setMeeting(Meeting meeting, Meeting editedMeeting) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Brendan8899"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Brendan8899"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Brendan8899"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12","isFullCredit":false}],"authorContributionMap":{"tata32000":2,"Brendan8899":23,"-":203}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LimKaiWei"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream()","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LimKaiWei"},"content":"                        .map(s -\u003e \"n/\" + s)","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LimKaiWei"},"content":"                        .collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24","isFullCredit":false}],"authorContributionMap":{"LimKaiWei":3,"-":100}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LimKaiWei"},"content":"    @Test","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LimKaiWei"},"content":"    public void parse_invalidFormatArgs_throwParseException() {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LimKaiWei"},"content":"        assertParseFailure(parser, \" alex\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LimKaiWei"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LimKaiWei"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LimKaiWei"},"content":"        assertParseSuccess(parser, \" n/Alice n/Bob\", expectedFindCommand);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LimKaiWei"},"content":"        assertParseSuccess(parser, \" n/ \\n Alice \\n \\t n/Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27","isFullCredit":false}],"authorContributionMap":{"LimKaiWei":7,"-":32}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tata32000"},"content":"        JsonScheduleStorage scheduleStorage \u003d new JsonScheduleStorage(getTempFilePath(\"schedule\"));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tata32000"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, scheduleStorage);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"tata32000":2,"-":67}}]
