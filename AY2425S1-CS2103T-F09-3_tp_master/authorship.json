[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2425S1-CS2103T-F09-3/TP/graph/badge.svg?token\u003dI1PFWNOY92)](https://codecov.io/gh/AY2425S1-CS2103T-F09-3/TP)","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weibinlim"},"content":"* **BridalBuddy** is a wedding planner tool: \u003cbr\u003e","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weibinlim"},"content":"  * For wedding planners as a vendor organiser for a wedding","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weibinlim"},"content":"  * For wedding planners as a guest list tracker for a wedding","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weibinlim"},"content":"* BridalBuddy is a streamlined, command-line-based tool designed specifically for wedding planners who work best with fast, keyboard-centric operations.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weibinlim"},"content":"  * Streamlined command-line interface","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weibinlim"},"content":"  * Intuitive organisation and customisation","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weibinlim"},"content":"  * Aids in managing guest lists, schedules, and vendor contacts","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weibinlim"},"content":"  * Tailored for users who prefer fast, keyboard-centric operations","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weibinlim"},"content":"* It is named `BridalBuddy` because it aids wedding planners in organisation of the different stakeholders and participants while planning for weddings.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weibinlim"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-09-24","isFullCredit":false}],"authorContributionMap":{"-":5,"weibinlim":10}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yxtan02"},"content":"You can reach us at CS2103T F09 group 3!","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"Here are the members of our team! ","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yxtan02"},"content":"### Tan Yi Xuan","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yxtan02"},"content":"\u003cimg src\u003d\"images/yxtan02.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yxtan02"},"content":"[[github](https://github.com/yxtan02)]","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yxtan02"},"content":"[[portfolio](team/yxtan02.md)]","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yxtan02"},"content":"* Role: Developer","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yxtan02"},"content":"* Responsibilities: Integration","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"slye20"},"content":"### Samuel Lim","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"slye20"},"content":"\u003cimg src\u003d\"images/slye20.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"slye20"},"content":"[[github](https://github.com/slye20)]","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"slye20"},"content":"[[portfolio](team/slye20.md)]","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yxtan02"},"content":"* Role: Developer","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yxtan02"},"content":"* Responsibilities: Deliverables and deadlines, Scheduling and tracking","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"### Yang Qifeng","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hovanleong"},"content":"\u003cimg src\u003d\"images/yangqf2002.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"[[github](http://github.com/YangQF2002)]","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yxtan02"},"content":"[[portfolio](team/qifeng.md)]","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Role: Developer ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"* Responsibilities: Code quality","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weibinlim"},"content":"### Wei Bin","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hovanleong"},"content":"\u003cimg src\u003d\"images/weibinlim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weibinlim"},"content":"[[github](https://github.com/weibinlim)]","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weibinlim"},"content":"[[portfolio](team/weibin.md)]","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weibinlim"},"content":"* Responsibilities: Testing","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hovanleong"},"content":"### Hovan Leong","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hovanleong"},"content":"\u003cimg src\u003d\"images/hovanleong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hovanleong"},"content":"[[github](https://github.com/hovanleong)]","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hovanleong"},"content":"[[portfolio](team/hovanleong.md)]","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yxtan02"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2024-09-24","isFullCredit":false}],"authorContributionMap":{"yxtan02":11,"slye20":4,"YangQF2002":4,"hovanleong":6,"-":34,"weibinlim":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"# BridalBuddy Developer Guide","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"slye20"},"content":"* `Vendor` and `Guest` both extend from the abstract `People` class, which defines common attributes and behaviors shared by both types of entities.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"yxtan02"},"content":"A wedding planner who:","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"weibinlim"},"content":"* Has a need to manage a significant number of contacts","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"weibinlim"},"content":"* Has a need to manage different types of contacts (e.g. vendors, guests)","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"weibinlim"},"content":"* Has a need to manage a few separate weddings concurrently","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"weibinlim"},"content":"* Favours desktop applications over other alternatives","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"weibinlim"},"content":"* Prefers keyboard commands over mouse interactions","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"weibinlim"},"content":"* Adequately proficient with command-line applications","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"weibinlim"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"weibinlim"},"content":"**Value proposition**:","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"weibinlim"},"content":"* Streamlined, all-in-one wedding planning tool","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"weibinlim"},"content":"* Intuitive organisation and customisation","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"weibinlim"},"content":"* Stress-free and efficient planning process","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"weibinlim"},"content":"* One-stop companion for wedding planners","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"weibinlim"},"content":"* Simplifies time-intensive and tedious tasks of managing guest lists, schedules, and vendor contacts","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"weibinlim"},"content":"* Enhances efficiency by reducing time spent navigating complex GUIs","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"| Priority | As a …​                    | I want to …​                                                     | So that I can…​                                                                  |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"yxtan02"},"content":"|----------|----------------------------|------------------------------------------------------------------|----------------------------------------------------------------------------------|","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"yxtan02"},"content":"| `* * *`  | forgetful wedding planner  | add a new guest/vendor into the contact list                     | easily track and manage guests/vendors for the wedding                           |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"yxtan02"},"content":"| `* * *`  | organized wedding planner  | view a list of guests/vendors                                    | easily access and reference their details.                                       |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"yxtan02"},"content":"| `* * *`  | organized wedding planner  | delete a guest/vendor contact that I no longer need              | keep my contact list organised and clutter-free                                  |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"yxtan02"},"content":"| `* * *`  | meticulous wedding planner | edit the details of an existing guest/vendor in the contact list | correct mistakes and ensure that all information remains accurate and up-to-date |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"yxtan02"},"content":"| `* *`    | organised wedding planner  | categorise attendees (family members, friends, vendors)          | keep track of different groups involved in the wedding                           |","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"hovanleong"},"content":"**Use case: Add a person**","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"hovanleong"},"content":"1. User creates a new person with the required details (e.g. name, email, role, etc.).","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"hovanleong"},"content":"2. System adds the entry.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"hovanleong"},"content":"* 1a. The provided details are incomplete or invalid.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"hovanleong"},"content":"    * 1a1. System shows an error message and requests the user to re-enter the details.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"hovanleong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"hovanleong"},"content":"* 1b. The input command was invalid (i.e. spelling error, etc.).","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"hovanleong"},"content":"    * 1b1. System tells the user the command is unrecognised.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"hovanleong"},"content":"      Use case ends.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"hovanleong"},"content":"**Use Case: Read/Print Out Entries**","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"hovanleong"},"content":"**MSS**","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"hovanleong"},"content":"1. User requests to view or print all people.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"hovanleong"},"content":"2. System displays or prints the list of all people.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"hovanleong"},"content":"**Extensions**","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"hovanleong"},"content":"* 1a. The input command was invalid (i.e. spelling error, etc.).","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"hovanleong"},"content":"    * 1a1. System tells the user the command is unrecognised.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"hovanleong"},"content":"      Use case ends.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"hovanleong"},"content":"* 2a. No entries exist.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"hovanleong"},"content":"**Use Case: Update Details of Person**","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"hovanleong"},"content":"**MSS**","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"hovanleong"},"content":"1. User selects an entry to update together with the fields to be updated.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"hovanleong"},"content":"2. System saves the changes and notifies user of success.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"hovanleong"},"content":"   Use case ends.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"hovanleong"},"content":"**Extensions**","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"hovanleong"},"content":"* 1a. The input command was invalid (i.e. spelling error, etc.).","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"hovanleong"},"content":"    * 1a1. System tells the user the command is unrecognised.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"hovanleong"},"content":"      Use case ends.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"hovanleong"},"content":"* 1b. The new details are incomplete or invalid.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"hovanleong"},"content":"    * 1b1. System shows an error message and requests the user to re-enter the details.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"hovanleong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"hovanleong"},"content":"**Use Case: Delete a Person**","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"hovanleong"},"content":"**MSS**","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"hovanleong"},"content":"1. User requests to delete an entry.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"hovanleong"},"content":"2. System deletes the entry.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"hovanleong"},"content":"   Use case ends.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"hovanleong"},"content":"**Extensions**","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"hovanleong"},"content":"* 1a. The provided entry does not exist.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"hovanleong"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"hovanleong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"hovanleong"},"content":"* 1b. The input command was invalid (i.e. spelling error, etc.).","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"hovanleong"},"content":"    * 1b1. System tells the user the command is unrecognised.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"hovanleong"},"content":"      Use case ends.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"hovanleong"},"content":"**Use Case: Categorise Persons**","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"hovanleong"},"content":"**MSS**","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"hovanleong"},"content":"1. User requests to categorise a person (e.g., family, friends, coworkers).","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"hovanleong"},"content":"2. System assigns attendees to the category.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"hovanleong"},"content":"   Use case ends.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"hovanleong"},"content":"**Extensions**","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"hovanleong"},"content":"* 1a. User tries to create a duplicate category.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"hovanleong"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"hovanleong"},"content":"      Use case ends.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"hovanleong"},"content":"* 1b. The input command was invalid (i.e. spelling error, etc.).","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"hovanleong"},"content":"    * 1b1. System tells the user the command is unrecognised.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"hovanleong"},"content":"      Use case ends.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"hovanleong"},"content":"**Use Case: Search and Filter Persons**","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"hovanleong"},"content":"**MSS**","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"hovanleong"},"content":"1. User requests to search for or filter entries (e.g., by category, name, RSVP status).","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"hovanleong"},"content":"2. System prompts for search or filter criteria.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"hovanleong"},"content":"3. User provides the criteria.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"hovanleong"},"content":"4. System displays the matching entries.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"hovanleong"},"content":"   Use case ends.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"hovanleong"},"content":"**Extensions**","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"hovanleong"},"content":"* 1a. The input command was invalid (i.e. spelling error, etc.).","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"hovanleong"},"content":"    * 1a1. System tells the user the command is unrecognised.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"hovanleong"},"content":"      Use case ends.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"hovanleong"},"content":"* 4a. No matching entries are found.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"hovanleong"},"content":"    * 4a1. System shows a message indicating no results.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"hovanleong"},"content":"      Use case ends.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"slye20"},"content":"Data Requirements","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"slye20"},"content":"1. Size: The system should support storage for up to 500 guests and 50 vendors per wedding. Data size should not exceed 10 MB for each wedding event.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"slye20"},"content":"2. Volatility: Guest lists and vendor details may change frequently, especially closer to the event date. Therefore, the system must accommodate dynamic data updates and edits.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"slye20"},"content":"3. Persistency: All guest, vendor, and event information must be saved persistently in a txt file and remain accessible even after system shutdown or failure.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"slye20"},"content":"4. Backup Frequency: Automatic backups of data should be created whenever the application is closed.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"slye20"},"content":"Environment Requirements","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"slye20"},"content":"5. Operating System: The system must be compatible with Windows, macOS, and Linux operating systems.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"slye20"},"content":"6. Dependencies: Java 17 should be the core language.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"slye20"},"content":"Accessibility","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"slye20"},"content":"7. Provide command-line help documentation that can be accessed at any time with a simple command (help).","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"slye20"},"content":"Capacity","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"slye20"},"content":"8. The system should be able to handle data storage for up to 100 simultaneous weddings, each containing up to 500 guests and 50 vendors.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"slye20"},"content":"Compliance with Regulations","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"slye20"},"content":"9. The system must comply with data privacy regulations, including GDPR, ensuring that personal information such as guest addresses and phone numbers are securely handled and stored.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"slye20"},"content":"Fault Tolerance","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"slye20"},"content":"10. The system should handle errors such as missing commands or invalid input gracefully, providing clear error messages without causing system crashes.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"slye20"},"content":"11. Ensure that invalid input (e.g., incorrect phone format) does not result in data corruption.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"slye20"},"content":"Performance Requirements","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"slye20"},"content":"12. The system should respond to user input within two seconds, even for lists of up to 500 guests and 50 vendors.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"slye20"},"content":"13. Backup operations must complete within five seconds for a wedding list of up to 500 entries.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"slye20"},"content":"14. System startup time should not exceed five seconds on standard hardware.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"yxtan02"},"content":"**Technical**","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"*  **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"yxtan02"},"content":"*  **CLI**: Command-Line Interface, a text-based interface used to interact with software by typing commands.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"yxtan02"},"content":"*  **GUI**: Graphical User Interface, a user interface that allows users to interact with the app through graphical elements such as buttons, text fields, and menus.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"yxtan02"},"content":"*  **JAR**: Java Archive, A file format used to package Java applications and libraries into a single, compressed file","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"yxtan02"},"content":"*  **JSON**: JavaScript Object Notation, a lightweight data-interchange format for structuring and exchanging data","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"yxtan02"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"yxtan02"},"content":"**Non-technical**","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"yxtan02"},"content":"*  **Guest**: A person invited to the wedding.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"slye20"},"content":"*  **Vendor**: A supplier providing services or goods for a wedding, such as photographers, florists, caterers, etc.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"yxtan02"},"content":"*  **RSVP Status**: The attendance response status of a guest. It can be either confirmed, pending, or declined.","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"slye20"},"content":"*  **Tag**: A keyword or label assigned to an entry to categorize and easily filter it within the list.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"slye20"},"content":"*  **Index**: A numerical value representing the position of an entry in a list, used to reference and perform operations on the contact.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"yxtan02":16,"slye20":30,"YangQF2002":1,"hovanleong":102,"-":372,"weibinlim":14}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"# BridalBuddy User Guide","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"BridalBuddy is a **desktop app for managing wedding contacts, optimized for use via a  Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, BridalBuddy can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `17` or above installed in your Computer.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Download the latest `.jar` file from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"**Tip:** A person can have any number of tags (including 0)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"**Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"**Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"YangQF2002":2,"-":203}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"# BridalBuddy ","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yxtan02"},"content":"**BridalBuddy is a desktop application for a wedding planner to manage the people that are involved in the wedding!** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"* If you are interested in using BridalBuddy, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"* If you are interested about developing BridalBuddy, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"yxtan02":1,"YangQF2002":3,"-":17}},{"path":"docs/team/hovanleong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hovanleong"},"content":"### Project: BridalBuddy","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hovanleong"},"content":"BridalBuddy is a streamlined, command-line-based tool designed specifically for wedding planners who work best with fast, keyboard-centric operations. Instead of navigating complex and cluttered GUIs, BridalBuddy offers you a clean and efficient way to manage everything about the wedding—from guest lists to vendor contacts—through a simple command-line interface.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hovanleong"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false}],"authorContributionMap":{"hovanleong":5}},{"path":"docs/team/qifeng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"I LOVE 2103T OwO","lastModifiedDate":"2024-09-24","isFullCredit":false}],"authorContributionMap":{"YangQF2002":1}},{"path":"docs/team/slye20.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"slye20"},"content":"---","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"slye20"},"content":"  layout: default.md","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"slye20"},"content":"  title: \"Samuel Lim\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"slye20"},"content":"---","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"slye20"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"slye20"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"slye20"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"slye20"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"slye20"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"slye20"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"slye20"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"slye20"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"slye20"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"slye20"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"slye20"},"content":"* **Project management**:","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"slye20"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"slye20"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"slye20"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"slye20"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"slye20"},"content":"* **Documentation**:","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"slye20"},"content":"    * User Guide:","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"slye20"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"slye20"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"slye20"},"content":"    * Developer Guide:","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"slye20"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"slye20"},"content":"* **Community**:","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"slye20"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"slye20"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"slye20"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"slye20"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"slye20"},"content":"* **Tools**:","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"slye20"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"slye20"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"slye20"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-09-24","isFullCredit":false}],"authorContributionMap":{"slye20":46}},{"path":"docs/team/weibin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weibinlim"},"content":"---","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weibinlim"},"content":"  layout: default.md","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weibinlim"},"content":"  title: \"Wei Bin\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weibinlim"},"content":"---","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weibinlim"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weibinlim"},"content":"### Project: BridalBuddy","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weibinlim"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weibinlim"},"content":"BridalBuddy is a streamlined, command-line-based tool designed specifically for wedding planners who work best with fast, keyboard-centric operations. Instead of navigating complex and cluttered GUIs, BridalBuddy offers you a clean and efficient way to manage everything about the wedding, from guest lists to vendor contacts, all through a simple command-line interface.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weibinlim"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weibinlim"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weibinlim"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false}],"authorContributionMap":{"weibinlim":11}},{"path":"docs/team/yxtan02.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yxtan02"},"content":"---","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yxtan02"},"content":"  layout: default.md","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yxtan02"},"content":"  title: \"Tan Yi Xuan\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yxtan02"},"content":"---","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yxtan02"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yxtan02"},"content":"### Project: BridalBuddy","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yxtan02"},"content":"BridalBuddy is a streamlined, command-line-based tool that  offers a clean and efficient way to manage all aspects of","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yxtan02"},"content":"a wedding, from guest lists to vendor contacts.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yxtan02"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yxtan02"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2024-09-24","isFullCredit":false}],"authorContributionMap":{"yxtan02":10}},{"path":"src/main/java/seedu/address/model/person/Company.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slye20"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"slye20"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"slye20"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"slye20"},"content":"/**","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"slye20"},"content":" * Represents a Company\u0027s name in the address book.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"slye20"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCompanyName(String)}","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"slye20"},"content":" */","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"slye20"},"content":"public class Company {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"slye20"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"slye20"},"content":"            \"Company name should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"slye20"},"content":"    /*","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"slye20"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"slye20"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"slye20"},"content":"     */","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"slye20"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"slye20"},"content":"    public final String companyName;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"slye20"},"content":"    /**","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"slye20"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"slye20"},"content":"     *","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"slye20"},"content":"     * @param company A valid name.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"slye20"},"content":"     */","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"slye20"},"content":"    public Company(String company) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"slye20"},"content":"        requireNonNull(company);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"slye20"},"content":"        checkArgument(isValidCompany(company), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"slye20"},"content":"        companyName \u003d company;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"slye20"},"content":"    /**","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"slye20"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"slye20"},"content":"     *","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"slye20"},"content":"     * @param test The string to test.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"slye20"},"content":"     * @return True if the given string matches the validation regex, false otherwise.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"slye20"},"content":"     */","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"slye20"},"content":"    public static boolean isValidCompany(String test) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"slye20"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"slye20"},"content":"    @Override","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"slye20"},"content":"    public String toString() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"slye20"},"content":"        return companyName;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"slye20"},"content":"    @Override","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"slye20"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"slye20"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"slye20"},"content":"            return true;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"slye20"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"slye20"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"slye20"},"content":"        if (!(other instanceof Company)) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"slye20"},"content":"            return false;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"slye20"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"slye20"},"content":"        Company otherName \u003d (Company) other;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"slye20"},"content":"        return companyName.equals(otherName.companyName);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"slye20"},"content":"    @Override","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"slye20"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"slye20"},"content":"        return companyName.hashCode();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"slye20"},"content":"}","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"slye20":70}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"slye20"},"content":"public abstract class Person {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"slye20"},"content":"    public abstract int hashCode();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"slye20"},"content":"    public ToStringBuilder toStringBuilder() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"slye20"},"content":"                .add(\"tags\", tags);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"slye20"},"content":"    @Override","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"slye20"},"content":"    public abstract String toString();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"slye20":6,"-":108}},{"path":"src/main/java/seedu/address/model/person/Vendor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slye20"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"slye20"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"slye20"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"slye20"},"content":"import java.util.Objects;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"slye20"},"content":"import java.util.Set;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"slye20"},"content":"/**","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"slye20"},"content":" * Represents a Vendor in the address book.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"slye20"},"content":" * A Vendor is a specific type of Person with an additional company field.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"slye20"},"content":" * Guarantees: details are present and not null, field values are validated.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"slye20"},"content":" */","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"slye20"},"content":"public class Vendor extends Person {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"slye20"},"content":"    // Identity field specific to vendor","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"slye20"},"content":"    private final Company company;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"slye20"},"content":"    /**","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"slye20"},"content":"     * Constructs a {@code Vendor} with the specified details.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"slye20"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"slye20"},"content":"     *","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"slye20"},"content":"     * @param name Name of the vendor.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"slye20"},"content":"     * @param company Company associated with the vendor.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"slye20"},"content":"     * @param phone Phone number of the vendor.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"slye20"},"content":"     * @param email Email address of the vendor.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"slye20"},"content":"     * @param address Residential or business address of the vendor.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"slye20"},"content":"     * @param tags Tags associated with the vendor.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"slye20"},"content":"     */","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"slye20"},"content":"    public Vendor(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Company company) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"slye20"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"slye20"},"content":"        this.company \u003d company;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"slye20"},"content":"    /**","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"slye20"},"content":"     * Returns the company associated with this vendor.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"slye20"},"content":"     *","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"slye20"},"content":"     * @return The company of the vendor.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"slye20"},"content":"     */","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"slye20"},"content":"    public Company getCompany() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"slye20"},"content":"        return company;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"slye20"},"content":"    /**","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"slye20"},"content":"     * Returns true if both persons have the same name and are both vendors.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"slye20"},"content":"     * They are different entries if they are of different roles.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"slye20"},"content":"     *","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"slye20"},"content":"     * @param otherPerson The person to compare with.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"slye20"},"content":"     * @return True if both are the same person and both are vendors.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"slye20"},"content":"     */","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"slye20"},"content":"    @Override","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"slye20"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"slye20"},"content":"        return super.isSamePerson(otherPerson)","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"slye20"},"content":"                \u0026\u0026 (otherPerson instanceof Vendor);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"slye20"},"content":"    /**","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"slye20"},"content":"     * Returns true if this vendor is equal to another vendor.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"slye20"},"content":"     * Equality is defined by the combination of all identity fields and the company field.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"slye20"},"content":"     *","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"slye20"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"slye20"},"content":"     * @return True if both vendors have the same fields and company.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"slye20"},"content":"     */","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"slye20"},"content":"    @Override","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"slye20"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"slye20"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"slye20"},"content":"            return true;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"slye20"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"slye20"},"content":"        if (!(other instanceof Vendor)) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"slye20"},"content":"            return false;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"slye20"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"slye20"},"content":"        Vendor otherVendor \u003d (Vendor) other;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"slye20"},"content":"        return super.equals(other)","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"slye20"},"content":"                \u0026\u0026 company.equals(otherVendor.company);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"slye20"},"content":"    /**","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"slye20"},"content":"     * Returns the hash code for this vendor.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"slye20"},"content":"     * The hash code is computed using all identity fields and the company field.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"slye20"},"content":"     *","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"slye20"},"content":"     * @return The hash code of the vendor.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"slye20"},"content":"     */","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"slye20"},"content":"    @Override","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"slye20"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"slye20"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"slye20"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getAddress(), getTags(), getCompany());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"slye20"},"content":"    /**","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"slye20"},"content":"     * Returns the string representation of this vendor, including all person fields and the company field.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"slye20"},"content":"     *","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"slye20"},"content":"     * @return A string representation of the vendor.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"slye20"},"content":"     */","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"slye20"},"content":"    @Override","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"slye20"},"content":"    public String toString() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"slye20"},"content":"        return super.toStringBuilder()","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"slye20"},"content":"                .add(\"company\", company)","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"slye20"},"content":"                .toString();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"slye20"},"content":"}","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"slye20":102}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"slye20"},"content":"import seedu.address.model.person.*;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"slye20"},"content":"            new Vendor(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"slye20"},"content":"                getTagSet(\"friends\"), new Company(\"Company 1\")),","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"slye20"},"content":"            new Vendor(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"slye20"},"content":"                getTagSet(\"colleagues\", \"friends\"), new Company(\"Company 2\")),","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"slye20"},"content":"            new Vendor(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"slye20"},"content":"                getTagSet(\"neighbours\"), new Company(\"Company 3\")),","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"slye20"},"content":"//            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"slye20"},"content":"//                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"slye20"},"content":"//                getTagSet(\"family\")),","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"slye20"},"content":"//            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"slye20"},"content":"//                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"slye20"},"content":"//                getTagSet(\"classmates\")),","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"slye20"},"content":"//            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"slye20"},"content":"//                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"slye20"},"content":"//                getTagSet(\"colleagues\"))","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20","isFullCredit":false}],"authorContributionMap":{"slye20":16,"-":40}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"slye20"},"content":"    public static final String VALID_COMPANY_AMY \u003d \"Wedding here\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"slye20"},"content":"    public static final String VALID_COMPANY_BOB \u003d \"Wedding anywhere\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05","isFullCredit":false}],"authorContributionMap":{"slye20":4,"-":128}},{"path":"src/test/java/seedu/address/model/person/CompanyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"slye20"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"slye20"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"slye20"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"slye20"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"slye20"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"slye20"},"content":"public class CompanyTest {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"slye20"},"content":"    @Test","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"slye20"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"slye20"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Company(null));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"slye20"},"content":"    @Test","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"slye20"},"content":"    public void constructor_invalidCompany_throwsIllegalArgumentException() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"slye20"},"content":"        String invalidCompany \u003d \"\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"slye20"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Company(invalidCompany));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"slye20"},"content":"    @Test","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"slye20"},"content":"    public void isValidCompany() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"slye20"},"content":"        // null company","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"slye20"},"content":"        assertThrows(NullPointerException.class, () -\u003e Company.isValidCompany(null));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"slye20"},"content":"        // invalid Company","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"slye20"},"content":"        assertFalse(Company.isValidCompany(\"\")); // empty string","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"slye20"},"content":"        assertFalse(Company.isValidCompany(\" \")); // spaces only","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"slye20"},"content":"        assertFalse(Company.isValidCompany(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"slye20"},"content":"        assertFalse(Company.isValidCompany(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"slye20"},"content":"        // valid Company","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"slye20"},"content":"        assertTrue(Company.isValidCompany(\"peter jack\")); // alphabets only","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"slye20"},"content":"        assertTrue(Company.isValidCompany(\"12345\")); // numbers only","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"slye20"},"content":"        assertTrue(Company.isValidCompany(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"slye20"},"content":"        assertTrue(Company.isValidCompany(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"slye20"},"content":"        assertTrue(Company.isValidCompany(\"David Roger Jackson Ray Jr 2nd\")); // long Companys","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"slye20"},"content":"    @Test","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"slye20"},"content":"    public void equals() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"slye20"},"content":"        Company company \u003d new Company(\"Valid Company\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"slye20"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"slye20"},"content":"        assertTrue(company.equals(new Company(\"Valid Company\")));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"slye20"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"slye20"},"content":"        assertTrue(company.equals(company));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"slye20"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"slye20"},"content":"        assertFalse(company.equals(null));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"slye20"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"slye20"},"content":"        assertFalse(company.equals(5.0f));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"slye20"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"slye20"},"content":"        assertFalse(company.equals(new Company(\"Other Valid Company\")));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"slye20"},"content":"}","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"slye20":60}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"slye20"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"slye20"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"slye20"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"slye20"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"slye20"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"slye20"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"slye20"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"slye20"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"slye20"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"slye20"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"slye20"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"slye20"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"slye20"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"slye20"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"slye20"},"content":"//public class PersonTest {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"slye20"},"content":"//    @Test","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"slye20"},"content":"//    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"slye20"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"slye20"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"slye20"},"content":"//    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"slye20"},"content":"//    @Test","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"slye20"},"content":"//    public void isSamePerson() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"slye20"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"slye20"},"content":"//        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"slye20"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"slye20"},"content":"//        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"slye20"},"content":"//        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"slye20"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"slye20"},"content":"//                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"slye20"},"content":"//        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"slye20"},"content":"//        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"slye20"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"slye20"},"content":"//        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"slye20"},"content":"//        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"slye20"},"content":"//        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"slye20"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"slye20"},"content":"//        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"slye20"},"content":"//        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"slye20"},"content":"//        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"slye20"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"slye20"},"content":"//    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"slye20"},"content":"//    @Test","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"slye20"},"content":"//    public void equals() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"slye20"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"slye20"},"content":"//        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"slye20"},"content":"//        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"slye20"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"slye20"},"content":"//        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"slye20"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"slye20"},"content":"//        assertFalse(ALICE.equals(null));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"slye20"},"content":"//        // different type -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"slye20"},"content":"//        assertFalse(ALICE.equals(5));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"slye20"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"slye20"},"content":"//        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"slye20"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"slye20"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"slye20"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"slye20"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"slye20"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"slye20"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"slye20"},"content":"//        // different email -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"slye20"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"slye20"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"slye20"},"content":"//        // different address -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"slye20"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"slye20"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"slye20"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"slye20"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"slye20"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"slye20"},"content":"//    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"slye20"},"content":"//","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"slye20"},"content":"//    @Test","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"slye20"},"content":"//    public void toStringMethod() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"slye20"},"content":"//        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"slye20"},"content":"//                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"slye20"},"content":"//        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"slye20"},"content":"//    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"slye20"},"content":"//}","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"slye20":99}},{"path":"src/test/java/seedu/address/model/person/VendorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"slye20"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"slye20"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"slye20"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"slye20"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"slye20"},"content":"import static seedu.address.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"slye20"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"slye20"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"slye20"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"slye20"},"content":"public class VendorTest {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"slye20"},"content":"    private final Vendor VENDOR_ALICE \u003d (Vendor) ALICE;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"slye20"},"content":"    private final Vendor VENDOR_BOB \u003d (Vendor) BOB;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"slye20"},"content":"    @Test","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"slye20"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"slye20"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"slye20"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"slye20"},"content":"    @Test","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"slye20"},"content":"    public void isSamePerson() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"slye20"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"slye20"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"slye20"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"slye20"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"slye20"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"slye20"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"slye20"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"slye20"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"slye20"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"slye20"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"slye20"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"slye20"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"slye20"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"slye20"},"content":"        assertFalse(VENDOR_BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"slye20"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"slye20"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"slye20"},"content":"        editedBob \u003d new PersonBuilder(VENDOR_BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"slye20"},"content":"        assertFalse(VENDOR_BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"slye20"},"content":"    @Test","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"slye20"},"content":"    public void equals() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"slye20"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"slye20"},"content":"        Person aliceCopy \u003d new PersonBuilder(VENDOR_ALICE).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"slye20"},"content":"        assertTrue(VENDOR_ALICE.equals(aliceCopy));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"slye20"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"slye20"},"content":"        assertTrue(VENDOR_ALICE.equals(VENDOR_ALICE));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"slye20"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"slye20"},"content":"        assertFalse(VENDOR_ALICE.equals(null));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"slye20"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"slye20"},"content":"        assertFalse(VENDOR_ALICE.equals(5));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"slye20"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"slye20"},"content":"        assertFalse(VENDOR_ALICE.equals(VENDOR_BOB));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"slye20"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"slye20"},"content":"        Person editedAlice \u003d new PersonBuilder(VENDOR_ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"slye20"},"content":"        assertFalse(VENDOR_ALICE.equals(editedAlice));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"slye20"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"slye20"},"content":"        editedAlice \u003d new PersonBuilder(VENDOR_ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"slye20"},"content":"        assertFalse(VENDOR_ALICE.equals(editedAlice));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"slye20"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"slye20"},"content":"        editedAlice \u003d new PersonBuilder(VENDOR_ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"slye20"},"content":"        assertFalse(VENDOR_ALICE.equals(editedAlice));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"slye20"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"slye20"},"content":"        editedAlice \u003d new PersonBuilder(VENDOR_ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"slye20"},"content":"        assertFalse(VENDOR_ALICE.equals(editedAlice));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"slye20"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"slye20"},"content":"        editedAlice \u003d new PersonBuilder(VENDOR_ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"slye20"},"content":"        assertFalse(VENDOR_ALICE.equals(editedAlice));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"slye20"},"content":"        // different company -\u003e returns false","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"slye20"},"content":"        editedAlice \u003d new PersonBuilder(VENDOR_ALICE).withCompany(VALID_COMPANY_BOB).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"slye20"},"content":"        assertFalse(VENDOR_ALICE.equals(editedAlice));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"slye20"},"content":"    @Test","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"slye20"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"slye20"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + VENDOR_ALICE.getName() + \", phone\u003d\"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"slye20"},"content":"                + VENDOR_ALICE.getPhone() + \", email\u003d\" + VENDOR_ALICE.getEmail() + \", address\u003d\"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"slye20"},"content":"                + VENDOR_ALICE.getAddress() + \", tags\u003d\" + VENDOR_ALICE.getTags() + \", company\u003d\"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"slye20"},"content":"                + VENDOR_ALICE.getCompany() +\"}\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"slye20"},"content":"        assertEquals(expected, VENDOR_ALICE.toString());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"slye20"},"content":"}","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"slye20":100}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"slye20"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"slye20"},"content":"import seedu.address.model.person.Vendor;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"slye20"},"content":"    public static final String DEFAULT_COMPANY \u003d \"The Wedding People\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"slye20"},"content":"    private Company company;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"slye20"},"content":"    private final boolean isVendor;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"slye20"},"content":"        company \u003d new Company(DEFAULT_COMPANY);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"slye20"},"content":"        isVendor \u003d true;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"slye20"},"content":"        if (personToCopy instanceof Vendor) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"slye20"},"content":"            isVendor \u003d true;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"slye20"},"content":"            company \u003d ((Vendor) personToCopy).getCompany();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"slye20"},"content":"        } else {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"slye20"},"content":"            isVendor \u003d false;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"slye20"},"content":"            // TODO: Add Guest type here","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"slye20"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"slye20"},"content":"    /**","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"slye20"},"content":"     * Sets the {@code Company} of the {@code Person} that we are building.","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"slye20"},"content":"     */","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"slye20"},"content":"    public PersonBuilder withCompany(String company) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"slye20"},"content":"        this.company \u003d new Company(company);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"slye20"},"content":"        return this;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"slye20"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"slye20"},"content":"        if (!isVendor) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"slye20"},"content":"            // TODO: Add case for guest here","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"slye20"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"slye20"},"content":"        return new Vendor(name, phone, email, address, tags, company);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03","isFullCredit":false}],"authorContributionMap":{"slye20":27,"-":95}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"slye20"},"content":"import static seedu.address.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"slye20"},"content":"//    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"slye20"},"content":"//            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"slye20"},"content":"//            .withPhone(\"94351253\")","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"slye20"},"content":"//            .withTags(\"friends\").build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"slye20"},"content":"//    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"slye20"},"content":"//            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"slye20"},"content":"//            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"slye20"},"content":"//            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"slye20"},"content":"//    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"slye20"},"content":"//            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"slye20"},"content":"//    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"slye20"},"content":"//            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"slye20"},"content":"//    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"slye20"},"content":"//            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"slye20"},"content":"//    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"slye20"},"content":"//            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"slye20"},"content":"//    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"slye20"},"content":"//            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"slye20"},"content":"            .withTags(\"friends\").withCompany(\"hello\").build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"slye20"},"content":"            .withTags(\"owesMoney\", \"friends\").withCompany(\"sdfdsfss\").build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"slye20"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"slye20"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"slye20"},"content":"            .withCompany(VALID_COMPANY_AMY).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"slye20"},"content":"            .withCompany(VALID_COMPANY_BOB).build();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13","isFullCredit":false}],"authorContributionMap":{"slye20":27,"-":61}}]
